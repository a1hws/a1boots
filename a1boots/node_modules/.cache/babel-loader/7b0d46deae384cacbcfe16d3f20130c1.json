{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Tab as MuiTab } from '@mui/material';\nimport clsx from 'clsx';\nimport { useTranslate, useFormGroup } from 'ra-core';\nimport { useFormState } from 'react-hook-form';\nimport { TabbedFormClasses } from './TabbedFormView';\nexport var FormTabHeader = function FormTabHeader(_a) {\n  var _b;\n\n  var count = _a.count,\n      label = _a.label,\n      value = _a.value,\n      icon = _a.icon,\n      className = _a.className,\n      onChange = _a.onChange,\n      syncWithLocation = _a.syncWithLocation,\n      rest = __rest(_a, [\"count\", \"label\", \"value\", \"icon\", \"className\", \"onChange\", \"syncWithLocation\"]);\n\n  var translate = useTranslate();\n  var location = useLocation();\n  var isSubmitted = useFormState().isSubmitted;\n  var formGroup = useFormGroup(value.toString());\n  var propsForLink = {\n    component: Link,\n    to: __assign(__assign({}, location), {\n      pathname: value\n    })\n  };\n  var tabLabel = isValidElement(label) ? label : translate(label, {\n    _: label\n  });\n\n  if (count !== undefined) {\n    tabLabel = React.createElement(\"span\", null, tabLabel, \" (\", count, \")\");\n  }\n\n  return React.createElement(MuiTab, __assign({\n    label: tabLabel,\n    value: value,\n    icon: icon,\n    className: clsx('form-tab', className, (_b = {}, _b[TabbedFormClasses.errorTabButton] = !formGroup.isValid && (formGroup.isTouched || isSubmitted), _b.error = !formGroup.isValid && (formGroup.isTouched || isSubmitted), _b))\n  }, syncWithLocation ? propsForLink : {}, {\n    id: \"tabheader-\".concat(value),\n    \"aria-controls\": \"tabpanel-\".concat(value),\n    onChange: onChange\n  }, rest));\n};\nFormTabHeader.propTypes = {\n  className: PropTypes.string,\n  contentClassName: PropTypes.string,\n  count: PropTypes.node,\n  children: PropTypes.node,\n  intent: PropTypes.oneOf(['header', 'content']),\n  hidden: PropTypes.bool,\n  icon: PropTypes.element,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n  path: PropTypes.string,\n  // @ts-ignore\n  record: PropTypes.object,\n  resource: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n};","map":{"version":3,"mappings":"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","names":["React","isValidElement","PropTypes","Link","useLocation","Tab","MuiTab","clsx","useTranslate","useFormGroup","useFormState","TabbedFormClasses","FormTabHeader","_a","label","value","icon","className","onChange","syncWithLocation","rest","translate","location","isSubmitted","formGroup","toString","propsForLink","component","to","pathname","tabLabel","_","count","undefined","__assign","_b","errorTabButton","isValid","isTouched","id","propTypes","string","contentClassName","node","children","intent","oneOf","hidden","bool","element","oneOfType","isRequired","margin","path","record","object","resource","number","variant"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/form/FormTabHeader.tsx"],"sourcesContent":["import * as React from 'react';\nimport { isValidElement, ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Tab as MuiTab, TabProps as MuiTabProps } from '@mui/material';\nimport clsx from 'clsx';\nimport { useTranslate, useFormGroup } from 'ra-core';\nimport { useFormState } from 'react-hook-form';\n\nimport { TabbedFormClasses } from './TabbedFormView';\n\nexport const FormTabHeader = ({\n    count,\n    label,\n    value,\n    icon,\n    className,\n    onChange,\n    syncWithLocation,\n    ...rest\n}: FormTabHeaderProps): ReactElement => {\n    const translate = useTranslate();\n    const location = useLocation();\n    const { isSubmitted } = useFormState();\n    const formGroup = useFormGroup(value.toString());\n\n    const propsForLink = {\n        component: Link,\n        to: { ...location, pathname: value },\n    };\n\n    let tabLabel = isValidElement(label)\n        ? label\n        : translate(label, { _: label });\n    if (count !== undefined) {\n        tabLabel = (\n            <span>\n                {tabLabel} ({count})\n            </span>\n        );\n    }\n    return (\n        <MuiTab\n            label={tabLabel}\n            value={value}\n            icon={icon}\n            className={clsx('form-tab', className, {\n                [TabbedFormClasses.errorTabButton]:\n                    !formGroup.isValid && (formGroup.isTouched || isSubmitted),\n                error:\n                    !formGroup.isValid && (formGroup.isTouched || isSubmitted),\n            })}\n            {...(syncWithLocation ? propsForLink : {})} // to avoid TypeScript screams, see https://github.com/mui/material-ui/issues/9106#issuecomment-451270521\n            id={`tabheader-${value}`}\n            aria-controls={`tabpanel-${value}`}\n            onChange={onChange}\n            {...rest}\n        />\n    );\n};\n\ninterface FormTabHeaderProps extends Omit<MuiTabProps, 'children'> {\n    className?: string;\n    count?: ReactNode;\n    hidden?: boolean;\n    icon?: ReactElement;\n    intent?: 'header' | 'content';\n    label: string | ReactElement;\n    margin?: 'none' | 'normal' | 'dense';\n    onChange?: (event: any) => void;\n    path?: string;\n    resource?: string;\n    syncWithLocation?: boolean;\n    value?: string | number;\n    variant?: 'standard' | 'outlined' | 'filled';\n}\n\nFormTabHeader.propTypes = {\n    className: PropTypes.string,\n    contentClassName: PropTypes.string,\n    count: PropTypes.node,\n    children: PropTypes.node,\n    intent: PropTypes.oneOf(['header', 'content']),\n    hidden: PropTypes.bool,\n    icon: PropTypes.element,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n        .isRequired,\n    margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n    path: PropTypes.string,\n    // @ts-ignore\n    record: PropTypes.object,\n    resource: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    variant: PropTypes.oneOf(['standard', 'outlined', 'filled']),\n};\n"]},"metadata":{},"sourceType":"module"}