{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useResourceContext, usePreference } from 'ra-core';\nimport { Configurable } from '../../preferences';\nimport { SimpleList } from './SimpleList';\nimport { SimpleListEditor } from './SimpleListEditor';\nexport var SimpleListConfigurable = function (_a) {\n  var preferenceKey = _a.preferenceKey,\n      props = __rest(_a, [\"preferenceKey\"]);\n\n  var resource = useResourceContext(props);\n  return React.createElement(Configurable, {\n    editor: React.createElement(SimpleListEditor, null),\n    preferenceKey: preferenceKey || \"\".concat(resource, \".SimpleList\"),\n    sx: {\n      display: 'block'\n    }\n  }, React.createElement(SimpleListWithPreferences, __assign({}, props)));\n};\n\nvar SimpleListWithPreferences = function (props) {\n  var primaryTextFromStore = usePreference('primaryText')[0];\n  var secondaryTextFromStore = usePreference('secondaryText')[0];\n  var tertiaryTextFromStore = usePreference('tertiaryText')[0];\n  return React.createElement(SimpleList, __assign({}, props, {\n    primaryText: primaryTextFromStore || props.primaryText,\n    secondaryText: secondaryTextFromStore || props.secondaryText,\n    tertiaryText: tertiaryTextFromStore || props.tertiaryText\n  }));\n};\n\nSimpleListConfigurable.propTypes = SimpleList.propTypes;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,SAAlD;AAEA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,UAAT,QAA4C,cAA5C;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AAEA,OAAO,IAAMC,sBAAsB,GAAG,UAACC,EAAD,EAGS;EAF3C,iBAAa,mBAAb;EAAA,IACGC,KAAK,cAF2B,iBAE3B,CADR;;EAGA,IAAMC,QAAQ,GAAGR,kBAAkB,CAACO,KAAD,CAAnC;EACA,OACIR,oBAACG,YAAD,EAAa;IACTO,MAAM,EAAEV,oBAACK,gBAAD,EAAiB,IAAjB,CADC;IAETM,aAAa,EAAEA,aAAa,IAAI,UAAGF,QAAH,EAAW,aAAX,CAFvB;IAGTG,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAX;EAHK,CAAb,EAKIb,oBAACc,yBAAD,EAA0BC,aAAKP,KAAL,CAA1B,CALJ,CADJ;AASH,CAdM;;AAgBP,IAAMM,yBAAyB,GAAG,UAACN,KAAD,EAAuB;EAC9C,wBAAoB,GAAIN,aAAa,CAAC,aAAD,CAAb,CAA4B,CAA5B,CAAxB;EACA,0BAAsB,GAAIA,aAAa,CAAC,eAAD,CAAb,CAA8B,CAA9B,CAA1B;EACA,yBAAqB,GAAIA,aAAa,CAAC,cAAD,CAAb,CAA6B,CAA7B,CAAzB;EACP,OACIF,oBAACI,UAAD,EAAWW,aACHP,KADG,EACE;IACTQ,WAAW,EAAEC,oBAAoB,IAAIT,KAAK,CAACQ,WADlC;IAETE,aAAa,EAAEC,sBAAsB,IAAIX,KAAK,CAACU,aAFtC;IAGTE,YAAY,EAAEC,qBAAqB,IAAIb,KAAK,CAACY;EAHpC,CADF,CAAX,CADJ;AAQH,CAZD;;AAcAd,sBAAsB,CAACgB,SAAvB,GAAmClB,UAAU,CAACkB,SAA9C","names":["React","useResourceContext","usePreference","Configurable","SimpleList","SimpleListEditor","SimpleListConfigurable","_a","props","resource","editor","preferenceKey","sx","display","SimpleListWithPreferences","__assign","primaryText","primaryTextFromStore","secondaryText","secondaryTextFromStore","tertiaryText","tertiaryTextFromStore","propTypes"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/list/SimpleList/SimpleListConfigurable.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useResourceContext, usePreference } from 'ra-core';\n\nimport { Configurable } from '../../preferences';\nimport { SimpleList, SimpleListProps } from './SimpleList';\nimport { SimpleListEditor } from './SimpleListEditor';\n\nexport const SimpleListConfigurable = ({\n    preferenceKey,\n    ...props\n}: SimpleListProps & { preferenceKey?: string }) => {\n    const resource = useResourceContext(props);\n    return (\n        <Configurable\n            editor={<SimpleListEditor />}\n            preferenceKey={preferenceKey || `${resource}.SimpleList`}\n            sx={{ display: 'block' }}\n        >\n            <SimpleListWithPreferences {...props} />\n        </Configurable>\n    );\n};\n\nconst SimpleListWithPreferences = (props: SimpleListProps) => {\n    const [primaryTextFromStore] = usePreference('primaryText');\n    const [secondaryTextFromStore] = usePreference('secondaryText');\n    const [tertiaryTextFromStore] = usePreference('tertiaryText');\n    return (\n        <SimpleList\n            {...props}\n            primaryText={primaryTextFromStore || props.primaryText}\n            secondaryText={secondaryTextFromStore || props.secondaryText}\n            tertiaryText={tertiaryTextFromStore || props.tertiaryText}\n        />\n    );\n};\n\nSimpleListConfigurable.propTypes = SimpleList.propTypes;\n"]},"metadata":{},"sourceType":"module"}