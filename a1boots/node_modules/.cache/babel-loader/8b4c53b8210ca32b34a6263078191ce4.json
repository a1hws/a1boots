{"ast":null,"code":"import { useCallback } from 'react';\nimport { useStoreContext } from './useStoreContext';\n/**\n * Get a callback to remove an item from the store\n *\n * @example\n * import { useRemoveFromStore } from 'react-admin';\n *\n * const ResetDatagridPrefs = () {\n *    const removeItem = useRemoveFromStore();\n *\n *    const hancleClick = () => {\n *        removeItem('datagrid.prefs');\n *    };\n *\n *    return <Button onClick={hancleClick}>Reset datagrid preferences</Button>;\n * }\n */\n\nexport var useRemoveFromStore = function (hookTimeKey) {\n  var removeItem = useStoreContext().removeItem;\n  return useCallback(function (key) {\n    if (typeof key === 'undefined' && typeof hookTimeKey === 'undefined') {\n      throw new Error('You must provide a key to remove an item from the store');\n    } // @ts-ignore\n\n\n    return removeItem(key !== null && key !== void 0 ? key : hookTimeKey);\n  }, [removeItem, hookTimeKey]);\n};","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,SAASC,eAAT,QAAgC,mBAAhC;AAEA;;;;;;;;;;;;;;;;;AAgBA,OAAO,IAAMC,kBAAkB,GAAG,UAACC,WAAD,EAAqB;EAC3C,cAAU,GAAKF,eAAe,GAAEG,UAAhC;EACR,OAAOJ,WAAW,CACd,UAACK,GAAD,EAAa;IACT,IACI,OAAOA,GAAP,KAAe,WAAf,IACA,OAAOF,WAAP,KAAuB,WAF3B,EAGE;MACE,MAAM,IAAIG,KAAJ,CACF,yDADE,CAAN;IAGH,CARQ,CAST;;;IACA,OAAOF,UAAU,CAACC,GAAG,SAAH,OAAG,WAAH,SAAOF,WAAR,CAAjB;EACH,CAZa,EAad,CAACC,UAAD,EAAaD,WAAb,CAbc,CAAlB;AAeH,CAjBM","names":["useCallback","useStoreContext","useRemoveFromStore","hookTimeKey","removeItem","key","Error"],"sources":["/var/www/a1boots/node_modules/ra-core/src/store/useRemoveFromStore.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nimport { useStoreContext } from './useStoreContext';\n\n/**\n * Get a callback to remove an item from the store\n *\n * @example\n * import { useRemoveFromStore } from 'react-admin';\n *\n * const ResetDatagridPrefs = () {\n *    const removeItem = useRemoveFromStore();\n *\n *    const hancleClick = () => {\n *        removeItem('datagrid.prefs');\n *    };\n *\n *    return <Button onClick={hancleClick}>Reset datagrid preferences</Button>;\n * }\n */\nexport const useRemoveFromStore = (hookTimeKey?: string) => {\n    const { removeItem } = useStoreContext();\n    return useCallback(\n        (key?: string) => {\n            if (\n                typeof key === 'undefined' &&\n                typeof hookTimeKey === 'undefined'\n            ) {\n                throw new Error(\n                    'You must provide a key to remove an item from the store'\n                );\n            }\n            // @ts-ignore\n            return removeItem(key ?? hookTimeKey);\n        },\n        [removeItem, hookTimeKey]\n    );\n};\n"]},"metadata":{},"sourceType":"module"}