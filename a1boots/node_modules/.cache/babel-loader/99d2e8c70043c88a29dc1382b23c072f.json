{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { TextField } from '@mui/material';\nimport { useTranslate, usePreferenceInput, useSetInspectorTitle } from 'ra-core';\n/**\n * A component which provides a configuration UI to tweak the SimpleList\n *\n * @param {SimpleListEditorProps} props\n * @param props.defaultPrimaryText The SimpleList columns\n * @param {String} props.resource The resource\n * @param {String} props.preferenceKey The key of the columns preferences\n */\n\nexport var SimpleListEditor = function SimpleListEditor(props) {\n  var _a = props.defaultPrimaryText,\n      defaultPrimaryText = _a === void 0 ? '' : _a,\n      _b = props.defaultSecondaryText,\n      defaultSecondaryText = _b === void 0 ? '' : _b,\n      _c = props.defaultTertiatyText,\n      defaultTertiatyText = _c === void 0 ? '' : _c;\n  useSetInspectorTitle('ra.inspector.SimpleList.title', {\n    _: 'List'\n  });\n  var translate = useTranslate();\n  var primaryTextField = usePreferenceInput('primaryText', defaultPrimaryText);\n  var secondaryTextField = usePreferenceInput('secondaryText', defaultSecondaryText);\n  var tertiaryTextField = usePreferenceInput('tertiaryText', defaultTertiatyText);\n  return React.createElement(\"form\", null, React.createElement(TextField, __assign({\n    label: translate('ra.configurable.SimpleList.primaryText', {\n      _: 'Primary Text'\n    })\n  }, primaryTextField, {\n    variant: \"filled\",\n    size: \"small\",\n    fullWidth: true,\n    sx: {\n      mb: 1\n    }\n  })), React.createElement(TextField, __assign({\n    label: translate('ra.configurable.SimpleList.secondaryText', {\n      _: 'Secondary Text'\n    })\n  }, secondaryTextField, {\n    variant: \"filled\",\n    size: \"small\",\n    fullWidth: true,\n    sx: {\n      mb: 1\n    }\n  })), React.createElement(TextField, __assign({\n    label: translate('ra.configurable.SimpleList.tertiaryText', {\n      _: 'Tertiary Text'\n    })\n  }, tertiaryTextField, {\n    variant: \"filled\",\n    size: \"small\",\n    fullWidth: true,\n    sx: {\n      mb: 1\n    }\n  })));\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SACIC,YADJ,EAEIC,kBAFJ,EAGIC,oBAHJ,QAIO,SAJP;AAMA;;;;;;;;;AAQA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAA6B;EAErD,SAGAA,KAAK,mBAHL;EAAA,sBAAkB,mBAAG,EAAH,GAAKC,EAAvB;EAAA,IACAC,KAEAF,KAAK,qBAHL;EAAA,IACAG,oBAAoB,mBAAG,EAAH,GAAKD,EADzB;EAAA,IAEAE,KACAJ,KAAK,oBAHL;EAAA,IAEAK,mBAAmB,mBAAG,EAAH,GAAKD,EAFxB;EAKJN,oBAAoB,CAAC,+BAAD,EAAkC;IAAEQ,CAAC,EAAE;EAAL,CAAlC,CAApB;EACA,IAAMC,SAAS,GAAGX,YAAY,EAA9B;EAEA,IAAMY,gBAAgB,GAAGX,kBAAkB,CACvC,aADuC,EAEvCY,kBAFuC,CAA3C;EAIA,IAAMC,kBAAkB,GAAGb,kBAAkB,CACzC,eADyC,EAEzCM,oBAFyC,CAA7C;EAIA,IAAMQ,iBAAiB,GAAGd,kBAAkB,CACxC,cADwC,EAExCQ,mBAFwC,CAA5C;EAKA,OACIX,kCACIA,oBAACC,SAAD,EAAUiB;IACNC,KAAK,EAAEN,SAAS,CAAC,wCAAD,EAA2C;MACvDD,CAAC,EAAE;IADoD,CAA3C;EADV,GAIFE,gBAJE,EAIc;IACpBM,OAAO,EAAC,QADY;IAEpBC,IAAI,EAAC,OAFe;IAGpBC,SAAS,MAHW;IAIpBC,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAN;EAJgB,CAJd,CAAV,CADJ,EAWIxB,oBAACC,SAAD,EAAUiB;IACNC,KAAK,EAAEN,SAAS,CAAC,0CAAD,EAA6C;MACzDD,CAAC,EAAE;IADsD,CAA7C;EADV,GAIFI,kBAJE,EAIgB;IACtBI,OAAO,EAAC,QADc;IAEtBC,IAAI,EAAC,OAFiB;IAGtBC,SAAS,MAHa;IAItBC,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAN;EAJkB,CAJhB,CAAV,CAXJ,EAqBIxB,oBAACC,SAAD,EAAUiB;IACNC,KAAK,EAAEN,SAAS,CAAC,yCAAD,EAA4C;MACxDD,CAAC,EAAE;IADqD,CAA5C;EADV,GAIFK,iBAJE,EAIe;IACrBG,OAAO,EAAC,QADa;IAErBC,IAAI,EAAC,OAFgB;IAGrBC,SAAS,MAHY;IAIrBC,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAN;EAJiB,CAJf,CAAV,CArBJ,CADJ;AAkCH,CAzDM","names":["React","TextField","useTranslate","usePreferenceInput","useSetInspectorTitle","SimpleListEditor","props","_a","_b","defaultSecondaryText","_c","defaultTertiatyText","_","translate","primaryTextField","defaultPrimaryText","secondaryTextField","tertiaryTextField","__assign","label","variant","size","fullWidth","sx","mb"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/list/SimpleList/SimpleListEditor.tsx"],"sourcesContent":["import * as React from 'react';\nimport { TextField } from '@mui/material';\nimport {\n    useTranslate,\n    usePreferenceInput,\n    useSetInspectorTitle,\n} from 'ra-core';\n\n/**\n * A component which provides a configuration UI to tweak the SimpleList\n *\n * @param {SimpleListEditorProps} props\n * @param props.defaultPrimaryText The SimpleList columns\n * @param {String} props.resource The resource\n * @param {String} props.preferenceKey The key of the columns preferences\n */\nexport const SimpleListEditor = (props: SimpleListEditorProps) => {\n    const {\n        defaultPrimaryText = '',\n        defaultSecondaryText = '',\n        defaultTertiatyText = '',\n    } = props;\n\n    useSetInspectorTitle('ra.inspector.SimpleList.title', { _: 'List' });\n    const translate = useTranslate();\n\n    const primaryTextField = usePreferenceInput(\n        'primaryText',\n        defaultPrimaryText\n    );\n    const secondaryTextField = usePreferenceInput(\n        'secondaryText',\n        defaultSecondaryText\n    );\n    const tertiaryTextField = usePreferenceInput(\n        'tertiaryText',\n        defaultTertiatyText\n    );\n\n    return (\n        <form>\n            <TextField\n                label={translate('ra.configurable.SimpleList.primaryText', {\n                    _: 'Primary Text',\n                })}\n                {...primaryTextField}\n                variant=\"filled\"\n                size=\"small\"\n                fullWidth\n                sx={{ mb: 1 }}\n            />\n            <TextField\n                label={translate('ra.configurable.SimpleList.secondaryText', {\n                    _: 'Secondary Text',\n                })}\n                {...secondaryTextField}\n                variant=\"filled\"\n                size=\"small\"\n                fullWidth\n                sx={{ mb: 1 }}\n            />\n            <TextField\n                label={translate('ra.configurable.SimpleList.tertiaryText', {\n                    _: 'Tertiary Text',\n                })}\n                {...tertiaryTextField}\n                variant=\"filled\"\n                size=\"small\"\n                fullWidth\n                sx={{ mb: 1 }}\n            />\n        </form>\n    );\n};\n\nexport interface SimpleListEditorProps {\n    defaultPrimaryText?: string;\n    defaultSecondaryText?: string;\n    defaultTertiatyText?: string;\n}\n"]},"metadata":{},"sourceType":"module"}