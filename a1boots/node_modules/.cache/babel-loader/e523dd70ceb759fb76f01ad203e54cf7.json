{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport { useDeleteWithUndoController, useRecordContext, useResourceContext } from 'ra-core';\nimport { Button } from './Button';\nexport var DeleteWithUndoButton = function DeleteWithUndoButton(props) {\n  var _a = props.label,\n      label = _a === void 0 ? 'ra.action.delete' : _a,\n      className = props.className,\n      _b = props.icon,\n      icon = _b === void 0 ? defaultIcon : _b,\n      onClick = props.onClick,\n      _c = props.redirect,\n      redirect = _c === void 0 ? 'list' : _c,\n      mutationOptions = props.mutationOptions,\n      rest = __rest(props, [\"label\", \"className\", \"icon\", \"onClick\", \"redirect\", \"mutationOptions\"]);\n\n  var record = useRecordContext(props);\n  var resource = useResourceContext(props);\n\n  var _d = useDeleteWithUndoController({\n    record: record,\n    resource: resource,\n    redirect: redirect,\n    onClick: onClick,\n    mutationOptions: mutationOptions\n  }),\n      isLoading = _d.isLoading,\n      handleDelete = _d.handleDelete;\n\n  return React.createElement(StyledButton, __assign({\n    onClick: handleDelete,\n    disabled: isLoading,\n    label: label,\n    className: clsx('ra-delete-button', className),\n    key: \"button\"\n  }, rest), icon);\n};\nvar defaultIcon = React.createElement(ActionDelete, null);\nDeleteWithUndoButton.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  record: PropTypes.any,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  resource: PropTypes.string,\n  icon: PropTypes.element\n};\nvar PREFIX = 'RaDeleteWithUndoButton';\nvar StyledButton = styled(Button, {\n  name: PREFIX,\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    color: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.error.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  };\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAEIC,2BAFJ,EAIIC,gBAJJ,EAKIC,kBALJ,QAOO,SAPP;AASA,SAASC,MAAT,QAAoC,UAApC;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAChCC,KADgC,EACY;EAGxC,SAOAA,KAAK,MAPL;EAAA,SAAK,mBAAG,kBAAH,GAAqBC,EAA1B;EAAA,IACAC,SAAS,GAMTF,KAAK,UAPL;EAAA,IAEAG,KAKAH,KAAK,KAPL;EAAA,IAEAI,IAAI,mBAAGC,WAAH,GAAcF,EAFlB;EAAA,IAGAG,OAAO,GAIPN,KAAK,QAPL;EAAA,IAIAO,KAGAP,KAAK,SAPL;EAAA,IAIAQ,QAAQ,mBAAG,MAAH,GAASD,EAJjB;EAAA,IAKAE,eAAe,GAEfT,KAAK,gBAPL;EAAA,IAMGU,IAAI,UACPV,KADO,EAPL,wEAOK,CANP;;EASJ,IAAMW,MAAM,GAAGf,gBAAgB,CAACI,KAAD,CAA/B;EACA,IAAMY,QAAQ,GAAGf,kBAAkB,CAACG,KAAD,CAAnC;;EACM,SAA8BL,2BAA2B,CAAC;IAC5DgB,MAAM,QADsD;IAE5DC,QAAQ,UAFoD;IAG5DJ,QAAQ,UAHoD;IAI5DF,OAAO,SAJqD;IAK5DG,eAAe;EAL6C,CAAD,CAAzD;EAAA,IAAEI,SAAS,eAAX;EAAA,IAAaC,YAAY,kBAAzB;;EAQN,OACIzB,oBAAC0B,YAAD,EAAaC;IACTV,OAAO,EAAEQ,YADA;IAETG,QAAQ,EAAEJ,SAFD;IAGTK,KAAK,EAAEA,KAHE;IAIThB,SAAS,EAAER,IAAI,CAAC,kBAAD,EAAqBQ,SAArB,CAJN;IAKTiB,GAAG,EAAC;EALK,GAMLT,IANK,CAAb,EAQKN,IARL,CADJ;AAYH,CAnCM;AAqCP,IAAMC,WAAW,GAAGhB,oBAACI,YAAD,EAAa,IAAb,CAApB;AAkBAM,oBAAoB,CAACqB,SAArB,GAAiC;EAC7BlB,SAAS,EAAEX,SAAS,CAAC8B,MADQ;EAE7BH,KAAK,EAAE3B,SAAS,CAAC8B,MAFY;EAG7BV,MAAM,EAAEpB,SAAS,CAAC+B,GAHW;EAI7Bd,QAAQ,EAAEjB,SAAS,CAACgC,SAAV,CAAoB,CAC1BhC,SAAS,CAAC8B,MADgB,EAE1B9B,SAAS,CAACiC,IAFgB,EAG1BjC,SAAS,CAACkC,IAHgB,CAApB,CAJmB;EAS7Bb,QAAQ,EAAErB,SAAS,CAAC8B,MATS;EAU7BjB,IAAI,EAAEb,SAAS,CAACmC;AAVa,CAAjC;AAaA,IAAMC,MAAM,GAAG,wBAAf;AAEA,IAAMZ,YAAY,GAAGzB,MAAM,CAACQ,MAAD,EAAS;EAChC8B,IAAI,EAAED,MAD0B;EAEhCE,iBAAiB,EAAE,2BAAC7B,KAAD,EAAQ8B,MAAR,EAAc;IAAK,aAAM,CAACC,IAAP;EAAW;AAFjB,CAAT,CAAN,CAGlB,UAAC9B,EAAD,EAAU;MAAP+B,KAAK;EAAO,OAAC;IACfC,KAAK,EAAED,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBC,IADZ;IAEf,WAAW;MACPC,eAAe,EAAE7C,KAAK,CAACwC,KAAK,CAACE,OAAN,CAAcC,KAAd,CAAoBC,IAArB,EAA2B,IAA3B,CADf;MAEP;MACA,wBAAwB;QACpBC,eAAe,EAAE;MADG;IAHjB;EAFI,CAAD;AAShB,CAZmB,CAArB","names":["React","styled","PropTypes","alpha","ActionDelete","clsx","useDeleteWithUndoController","useRecordContext","useResourceContext","Button","DeleteWithUndoButton","props","_a","className","_b","icon","defaultIcon","onClick","_c","redirect","mutationOptions","rest","record","resource","isLoading","handleDelete","StyledButton","__assign","disabled","label","key","propTypes","string","any","oneOfType","bool","func","element","PREFIX","name","overridesResolver","styles","root","theme","color","palette","error","main","backgroundColor"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/button/DeleteWithUndoButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement, ReactEventHandler } from 'react';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport { UseMutationOptions } from 'react-query';\nimport {\n    RaRecord,\n    useDeleteWithUndoController,\n    DeleteParams,\n    useRecordContext,\n    useResourceContext,\n    RedirectionSideEffect,\n} from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\nexport const DeleteWithUndoButton = <RecordType extends RaRecord = any>(\n    props: DeleteWithUndoButtonProps<RecordType>\n) => {\n    const {\n        label = 'ra.action.delete',\n        className,\n        icon = defaultIcon,\n        onClick,\n        redirect = 'list',\n        mutationOptions,\n        ...rest\n    } = props;\n\n    const record = useRecordContext(props);\n    const resource = useResourceContext(props);\n    const { isLoading, handleDelete } = useDeleteWithUndoController({\n        record,\n        resource,\n        redirect,\n        onClick,\n        mutationOptions,\n    });\n\n    return (\n        <StyledButton\n            onClick={handleDelete}\n            disabled={isLoading}\n            label={label}\n            className={clsx('ra-delete-button', className)}\n            key=\"button\"\n            {...rest}\n        >\n            {icon}\n        </StyledButton>\n    );\n};\n\nconst defaultIcon = <ActionDelete />;\n\nexport interface DeleteWithUndoButtonProps<\n    RecordType extends RaRecord = any,\n    MutationOptionsError = unknown\n> extends ButtonProps {\n    icon?: ReactElement;\n    onClick?: ReactEventHandler<any>;\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        MutationOptionsError,\n        DeleteParams<RecordType>\n    >;\n    record?: RecordType;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n}\n\nDeleteWithUndoButton.propTypes = {\n    className: PropTypes.string,\n    label: PropTypes.string,\n    record: PropTypes.any,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    icon: PropTypes.element,\n};\n\nconst PREFIX = 'RaDeleteWithUndoButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.error.main,\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n            backgroundColor: 'transparent',\n        },\n    },\n}));\n"]},"metadata":{},"sourceType":"module"}