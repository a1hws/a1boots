{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { BulkDeleteWithConfirmButton } from './BulkDeleteWithConfirmButton';\nimport { BulkDeleteWithUndoButton } from './BulkDeleteWithUndoButton';\n/**\n * Deletes the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = () => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton />\n *     </Fragment>\n * );\n *\n * export const PostList = () => (\n *     <List bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\n\nexport var BulkDeleteButton = function BulkDeleteButton(_a) {\n  var _b = _a.mutationMode,\n      mutationMode = _b === void 0 ? 'undoable' : _b,\n      props = __rest(_a, [\"mutationMode\"]);\n\n  return mutationMode === 'undoable' ? React.createElement(BulkDeleteWithUndoButton, __assign({}, props)) : React.createElement(BulkDeleteWithConfirmButton, __assign({\n    mutationMode: mutationMode\n  }, props));\n};\nBulkDeleteButton.propTypes = {\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n  icon: PropTypes.element\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,2BADJ,QAGO,+BAHP;AAIA,SACIC,wBADJ,QAGO,4BAHP;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,EAAD,EAGR;EAFpB;EAAA,gBAAY,mBAAG,UAAH,GAAaC,EAAzB;EAAA,IACGC,KAAK,cAFqB,gBAErB,CADR;;EAGA,mBAAY,KAAK,UAAjB,GACIP,oBAACG,wBAAD,EAAyBK,aAAKD,KAAL,CAAzB,CADJ,GAGIP,oBAACE,2BAAD,EAA4BM;IAACC,YAAY,EAAEA;EAAf,GAAiCF,KAAjC,CAA5B,CAHJ;AAIC,CARE;AAiBPH,gBAAgB,CAACM,SAAjB,GAA6B;EACzBC,KAAK,EAAEV,SAAS,CAACW,MADQ;EAEzBC,QAAQ,EAAEZ,SAAS,CAACW,MAFK;EAGzBE,WAAW,EAAEb,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,GAA5B,CAHY;EAIzBP,YAAY,EAAER,SAAS,CAACgB,KAAV,CAAgB,CAAC,aAAD,EAAgB,YAAhB,EAA8B,UAA9B,CAAhB,CAJW;EAKzBC,IAAI,EAAEjB,SAAS,CAACkB;AALS,CAA7B","names":["React","PropTypes","BulkDeleteWithConfirmButton","BulkDeleteWithUndoButton","BulkDeleteButton","_a","_b","props","__assign","mutationMode","propTypes","label","string","resource","selectedIds","arrayOf","any","oneOf","icon","element"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/button/BulkDeleteButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    BulkDeleteWithConfirmButton,\n    BulkDeleteWithConfirmButtonProps,\n} from './BulkDeleteWithConfirmButton';\nimport {\n    BulkDeleteWithUndoButton,\n    BulkDeleteWithUndoButtonProps,\n} from './BulkDeleteWithUndoButton';\nimport { MutationMode } from 'ra-core';\n\n/**\n * Deletes the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkDeleteButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = () => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkDeleteButton />\n *     </Fragment>\n * );\n *\n * export const PostList = () => (\n *     <List bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\nexport const BulkDeleteButton = ({\n    mutationMode = 'undoable',\n    ...props\n}: BulkDeleteButtonProps) =>\n    mutationMode === 'undoable' ? (\n        <BulkDeleteWithUndoButton {...props} />\n    ) : (\n        <BulkDeleteWithConfirmButton mutationMode={mutationMode} {...props} />\n    );\n\ninterface Props {\n    mutationMode?: MutationMode;\n}\n\nexport type BulkDeleteButtonProps = Props &\n    (BulkDeleteWithUndoButtonProps | BulkDeleteWithConfirmButtonProps);\n\nBulkDeleteButton.propTypes = {\n    label: PropTypes.string,\n    resource: PropTypes.string,\n    selectedIds: PropTypes.arrayOf(PropTypes.any),\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    icon: PropTypes.element,\n};\n"]},"metadata":{},"sourceType":"module"}