{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton from '@mui/material/IconButton';\nimport NavigationRefresh from '@mui/icons-material/Refresh';\nimport { useRefresh, useTranslate } from 'ra-core';\nexport var RefreshIconButton = function (props) {\n  var _a = props.label,\n      label = _a === void 0 ? 'ra.action.refresh' : _a,\n      _b = props.icon,\n      icon = _b === void 0 ? defaultIcon : _b,\n      onClick = props.onClick,\n      className = props.className,\n      rest = __rest(props, [\"label\", \"icon\", \"onClick\", \"className\"]);\n\n  var refresh = useRefresh();\n  var translate = useTranslate();\n  var handleClick = useCallback(function (event) {\n    event.preventDefault();\n    refresh();\n\n    if (typeof onClick === 'function') {\n      onClick(event);\n    }\n  }, [refresh, onClick]);\n  return React.createElement(Tooltip, {\n    title: label && translate(label, {\n      _: 'Refresh'\n    })\n  }, React.createElement(IconButton, __assign({\n    \"aria-label\": label && translate(label, {\n      _: 'Refresh'\n    }),\n    className: className,\n    color: \"inherit\",\n    onClick: handleClick\n  }, rest), icon));\n};\nvar defaultIcon = React.createElement(NavigationRefresh, null);\nRefreshIconButton.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string,\n  icon: PropTypes.element\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAA4C,0BAA5C;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,SAAzC;AAEA,OAAO,IAAMC,iBAAiB,GAAG,UAACC,KAAD,EAA8B;EAEvD,SAKAA,KAAK,MALL;EAAA,SAAK,mBAAG,mBAAH,GAAsBC,EAA3B;EAAA,IACAC,KAIAF,KAAK,KALL;EAAA,IACAG,IAAI,mBAAGC,WAAH,GAAcF,EADlB;EAAA,IAEAG,OAAO,GAGPL,KAAK,QALL;EAAA,IAGAM,SAAS,GAETN,KAAK,UALL;EAAA,IAIGO,IAAI,UACPP,KADO,EALL,yCAKK,CAJP;;EAMJ,IAAMQ,OAAO,GAAGX,UAAU,EAA1B;EACA,IAAMY,SAAS,GAAGX,YAAY,EAA9B;EACA,IAAMY,WAAW,GAAGlB,WAAW,CAC3B,iBAAK;IACDmB,KAAK,CAACC,cAAN;IACAJ,OAAO;;IACP,IAAI,OAAOH,OAAP,KAAmB,UAAvB,EAAmC;MAC/BA,OAAO,CAACM,KAAD,CAAP;IACH;EACJ,CAP0B,EAQ3B,CAACH,OAAD,EAAUH,OAAV,CAR2B,CAA/B;EAWA,OACId,oBAACG,OAAD,EAAQ;IAACmB,KAAK,EAAEC,KAAK,IAAIL,SAAS,CAACK,KAAD,EAAQ;MAAEC,CAAC,EAAE;IAAL,CAAR;EAA1B,CAAR,EACIxB,oBAACI,UAAD,EAAWqB;IAAA,cACKF,KAAK,IAAIL,SAAS,CAACK,KAAD,EAAQ;MAAEC,CAAC,EAAE;IAAL,CAAR,CADvB;IAEPT,SAAS,EAAEA,SAFJ;IAGPW,KAAK,EAAC,SAHC;IAIPZ,OAAO,EAAEK;EAJF,GAKHH,IALG,CAAX,EAOKJ,IAPL,CADJ,CADJ;AAaH,CAlCM;AAoCP,IAAMC,WAAW,GAAGb,oBAACK,iBAAD,EAAkB,IAAlB,CAApB;AAWAG,iBAAiB,CAACmB,SAAlB,GAA8B;EAC1BZ,SAAS,EAAEb,SAAS,CAAC0B,MADK;EAE1BL,KAAK,EAAErB,SAAS,CAAC0B,MAFS;EAG1BhB,IAAI,EAAEV,SAAS,CAAC2B;AAHU,CAA9B","names":["React","useCallback","PropTypes","Tooltip","IconButton","NavigationRefresh","useRefresh","useTranslate","RefreshIconButton","props","_a","_b","icon","defaultIcon","onClick","className","rest","refresh","translate","handleClick","event","preventDefault","title","label","_","__assign","color","propTypes","string","element"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/button/RefreshIconButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useCallback, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@mui/material/Tooltip';\nimport IconButton, { IconButtonProps } from '@mui/material/IconButton';\nimport NavigationRefresh from '@mui/icons-material/Refresh';\nimport { useRefresh, useTranslate } from 'ra-core';\n\nexport const RefreshIconButton = (props: RefreshIconButtonProps) => {\n    const {\n        label = 'ra.action.refresh',\n        icon = defaultIcon,\n        onClick,\n        className,\n        ...rest\n    } = props;\n    const refresh = useRefresh();\n    const translate = useTranslate();\n    const handleClick = useCallback(\n        event => {\n            event.preventDefault();\n            refresh();\n            if (typeof onClick === 'function') {\n                onClick(event);\n            }\n        },\n        [refresh, onClick]\n    );\n\n    return (\n        <Tooltip title={label && translate(label, { _: 'Refresh' })}>\n            <IconButton\n                aria-label={label && translate(label, { _: 'Refresh' })}\n                className={className}\n                color=\"inherit\"\n                onClick={handleClick}\n                {...rest}\n            >\n                {icon}\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nconst defaultIcon = <NavigationRefresh />;\n\ninterface Props {\n    className?: string;\n    icon?: ReactElement;\n    label?: string;\n    onClick?: (e: MouseEvent) => void;\n}\n\nexport type RefreshIconButtonProps = Props & IconButtonProps;\n\nRefreshIconButton.propTypes = {\n    className: PropTypes.string,\n    label: PropTypes.string,\n    icon: PropTypes.element,\n};\n"]},"metadata":{},"sourceType":"module"}