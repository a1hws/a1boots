{"ast":null,"code":"import * as React from 'react';\nimport { ListContext } from './ListContext';\nimport { ListFilterContext, usePickFilterContext } from './ListFilterContext';\nimport { ListSortContext, usePickSortContext } from './ListSortContext';\nimport { ListPaginationContext, usePickPaginationContext } from './ListPaginationContext';\n/**\n * Create a List Context and several thematic List subcontext.\n *\n * Allows children to subscribe to part of the ListContext, and bail out of\n * rendering when some parts of the context that they don't depend on change\n * (because unfortunately React doesn't allow to use context selectors yet).\n *\n * @example\n *\n * const MyList = (props) => {\n *     const controllerProps = useListController(props);\n *     return (\n *         <ListContextProvider value={controllerProps}>\n *             <MyListView>\n *         </ListContextProvider>\n *     );\n * };\n *\n * const MyListView = () => {\n *     const { data, filterValues, setFilters } = useListContext();\n *     // or, to rerender only when filters change but not data\n *     const { filterValues, setFilters } = useListFilterContext();\n * }\n *\n * @see ListContext\n * @see ListFilterContext\n */\n\nexport var ListContextProvider = function ListContextProvider(_a) {\n  var value = _a.value,\n      children = _a.children;\n  return React.createElement(ListContext.Provider, {\n    value: value\n  }, React.createElement(ListFilterContext.Provider, {\n    value: usePickFilterContext(value)\n  }, React.createElement(ListSortContext.Provider, {\n    value: usePickSortContext(value)\n  }, React.createElement(ListPaginationContext.Provider, {\n    value: usePickPaginationContext(value)\n  }, children))));\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,qBAAxD;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,mBAApD;AACA,SACIC,qBADJ,EAEIC,wBAFJ,QAGO,yBAHP;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,EAAD,EAMlC;MALGC,KAAK;MACLC,QAAQ;EAIN,OACFX,oBAACC,WAAW,CAACW,QAAb,EAAqB;IAACF,KAAK,EAAEA;EAAR,CAArB,EACIV,oBAACE,iBAAiB,CAACU,QAAnB,EAA2B;IAACF,KAAK,EAAEP,oBAAoB,CAACO,KAAD;EAA5B,CAA3B,EACIV,oBAACI,eAAe,CAACQ,QAAjB,EAAyB;IAACF,KAAK,EAAEL,kBAAkB,CAACK,KAAD;EAA1B,CAAzB,EACIV,oBAACM,qBAAqB,CAACM,QAAvB,EAA+B;IAC3BF,KAAK,EAAEH,wBAAwB,CAACG,KAAD;EADJ,CAA/B,EAGKC,QAHL,CADJ,CADJ,CADJ,CADE;AAYL,CAlBM","names":["React","ListContext","ListFilterContext","usePickFilterContext","ListSortContext","usePickSortContext","ListPaginationContext","usePickPaginationContext","ListContextProvider","_a","value","children","Provider"],"sources":["/var/www/a1boots/node_modules/ra-core/src/controller/list/ListContextProvider.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ListContext } from './ListContext';\nimport { ListFilterContext, usePickFilterContext } from './ListFilterContext';\nimport { ListSortContext, usePickSortContext } from './ListSortContext';\nimport {\n    ListPaginationContext,\n    usePickPaginationContext,\n} from './ListPaginationContext';\nimport { ListControllerResult } from './useListController';\n\n/**\n * Create a List Context and several thematic List subcontext.\n *\n * Allows children to subscribe to part of the ListContext, and bail out of\n * rendering when some parts of the context that they don't depend on change\n * (because unfortunately React doesn't allow to use context selectors yet).\n *\n * @example\n *\n * const MyList = (props) => {\n *     const controllerProps = useListController(props);\n *     return (\n *         <ListContextProvider value={controllerProps}>\n *             <MyListView>\n *         </ListContextProvider>\n *     );\n * };\n *\n * const MyListView = () => {\n *     const { data, filterValues, setFilters } = useListContext();\n *     // or, to rerender only when filters change but not data\n *     const { filterValues, setFilters } = useListFilterContext();\n * }\n *\n * @see ListContext\n * @see ListFilterContext\n */\nexport const ListContextProvider = ({\n    value,\n    children,\n}: {\n    value: ListControllerResult;\n    children: React.ReactNode;\n}) => (\n    <ListContext.Provider value={value}>\n        <ListFilterContext.Provider value={usePickFilterContext(value)}>\n            <ListSortContext.Provider value={usePickSortContext(value)}>\n                <ListPaginationContext.Provider\n                    value={usePickPaginationContext(value)}\n                >\n                    {children}\n                </ListPaginationContext.Provider>\n            </ListSortContext.Provider>\n        </ListFilterContext.Provider>\n    </ListContext.Provider>\n);\n"]},"metadata":{},"sourceType":"module"}