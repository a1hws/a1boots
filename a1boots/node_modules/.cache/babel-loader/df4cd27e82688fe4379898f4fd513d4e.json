{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport get from 'lodash/get';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { Typography, Link } from '@mui/material';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport { fieldPropTypes } from './types';\nimport { genericMemo } from './genericMemo';\n\nvar UrlFieldImpl = function UrlFieldImpl(props) {\n  var className = props.className,\n      emptyText = props.emptyText,\n      source = props.source,\n      rest = __rest(props, [\"className\", \"emptyText\", \"source\"]);\n\n  var record = useRecordContext(props);\n  var value = get(record, source);\n  var translate = useTranslate();\n\n  if (value == null) {\n    return React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, {\n      _: emptyText\n    }));\n  }\n\n  return React.createElement(Link, __assign({\n    className: className,\n    href: value,\n    onClick: stopPropagation,\n    variant: \"body2\"\n  }, sanitizeFieldRestProps(rest)), value);\n};\n\nUrlFieldImpl.propTypes = fieldPropTypes;\nUrlFieldImpl.displayName = 'UrlFieldImpl';\nexport var UrlField = genericMemo(UrlFieldImpl); // useful to prevent click bubbling in a Datagrid with rowClick\n\nvar stopPropagation = function stopPropagation(e) {\n  return e.stopPropagation();\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,eAAjC;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,SAA/C;AACA,SAAqBC,cAArB,QAA2C,SAA3C;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAGjBC,KAHiB,EAGe;EAExB,aAAS,GAAiCA,KAAK,UAA/C;EAAA,IAAWC,SAAS,GAAsBD,KAAK,UAA/C;EAAA,IAAsBE,MAAM,GAAcF,KAAK,OAA/C;EAAA,IAAiCG,IAAI,UAAKH,KAAL,EAAvC,oCAAuC,CAArC;;EACR,IAAMI,MAAM,GAAGT,gBAAgB,CAACK,KAAD,CAA/B;EACA,IAAMK,KAAK,GAAGd,GAAG,CAACa,MAAD,EAASF,MAAT,CAAjB;EACA,IAAMI,SAAS,GAAGV,YAAY,EAA9B;;EAEA,IAAIS,KAAK,IAAI,IAAb,EAAmB;IACf,OACIf,oBAACG,UAAD,EAAWc;MACPC,SAAS,EAAC,MADH;MAEPC,OAAO,EAAC,OAFD;MAGPC,SAAS,EAAEA;IAHJ,GAIHlB,sBAAsB,CAACW,IAAD,CAJnB,CAAX,EAMKF,SAAS,IAAIK,SAAS,CAACL,SAAD,EAAY;MAAEU,CAAC,EAAEV;IAAL,CAAZ,CAN3B,CADJ;EAUH;;EAED,OACIX,oBAACI,IAAD,EAAKa;IACDG,SAAS,EAAEA,SADV;IAEDE,IAAI,EAAEP,KAFL;IAGDQ,OAAO,EAAEC,eAHR;IAIDL,OAAO,EAAC;EAJP,GAKGjB,sBAAsB,CAACW,IAAD,CALzB,CAAL,EAOKE,KAPL,CADJ;AAWH,CAlCD;;AAoCAN,YAAY,CAACgB,SAAb,GAAyBlB,cAAzB;AACAE,YAAY,CAACiB,WAAb,GAA2B,cAA3B;AAEA,OAAO,IAAMC,QAAQ,GAAGnB,WAAW,CAACC,YAAD,CAA5B,C,CAOP;;AACA,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,IAAC;EAAI,QAAC,CAACA,eAAF;AAAmB,CAAhD","names":["React","get","sanitizeFieldRestProps","Typography","Link","useRecordContext","useTranslate","fieldPropTypes","genericMemo","UrlFieldImpl","props","emptyText","source","rest","record","value","translate","__assign","component","variant","className","_","href","onClick","stopPropagation","propTypes","displayName","UrlField"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/field/UrlField.tsx"],"sourcesContent":["import * as React from 'react';\nimport { AnchorHTMLAttributes } from 'react';\nimport get from 'lodash/get';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { Typography, Link } from '@mui/material';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport { FieldProps, fieldPropTypes } from './types';\nimport { genericMemo } from './genericMemo';\n\nconst UrlFieldImpl = <\n    RecordType extends Record<string, unknown> = Record<string, any>\n>(\n    props: UrlFieldProps<RecordType>\n) => {\n    const { className, emptyText, source, ...rest } = props;\n    const record = useRecordContext(props);\n    const value = get(record, source);\n    const translate = useTranslate();\n\n    if (value == null) {\n        return (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText && translate(emptyText, { _: emptyText })}\n            </Typography>\n        );\n    }\n\n    return (\n        <Link\n            className={className}\n            href={value}\n            onClick={stopPropagation}\n            variant=\"body2\"\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {value}\n        </Link>\n    );\n};\n\nUrlFieldImpl.propTypes = fieldPropTypes;\nUrlFieldImpl.displayName = 'UrlFieldImpl';\n\nexport const UrlField = genericMemo(UrlFieldImpl);\n\nexport interface UrlFieldProps<\n    RecordType extends Record<string, unknown> = Record<string, any>\n> extends FieldProps<RecordType>,\n        AnchorHTMLAttributes<HTMLAnchorElement> {}\n\n// useful to prevent click bubbling in a Datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n"]},"metadata":{},"sourceType":"module"}