{"ast":null,"code":"import * as React from 'react';\nimport { useCallback } from 'react';\nimport get from 'lodash/get';\nimport { useResourceDefinition } from './useResourceDefinition';\n/**\n * Get default string representation of a record\n *\n * @example // No customization\n * const getRecordRepresentation = useGetRecordRepresentation('posts');\n * getRecordRepresentation({ id: 1, title: 'Hello' }); // => \"#1\"\n *\n * @example // With <Resource name=\"posts\" recordRepresentation=\"title\" />\n * const getRecordRepresentation = useGetRecordRepresentation('posts');\n * getRecordRepresentation({ id: 1, title: 'Hello' }); // => \"Hello\"\n */\n\nexport var useGetRecordRepresentation = function (resource) {\n  var recordRepresentation = useResourceDefinition({\n    resource: resource\n  }).recordRepresentation;\n  return useCallback(function (record) {\n    if (!record) return '';\n\n    if (typeof recordRepresentation === 'function') {\n      return recordRepresentation(record);\n    }\n\n    if (typeof recordRepresentation === 'string') {\n      return get(record, recordRepresentation);\n    }\n\n    if (React.isValidElement(recordRepresentation)) {\n      return recordRepresentation;\n    }\n\n    return \"#\".concat(record.id);\n  }, [recordRepresentation]);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAAuC,OAAvC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA;;;;;;;;;;;;AAWA,OAAO,IAAMC,0BAA0B,GAAG,UACtCC,QADsC,EACtB;EAER,wBAAoB,GAAKF,qBAAqB,CAAC;IAAEE,QAAQ;EAAV,CAAD,CAArB,CAAmCC,oBAA5D;EACR,OAAOL,WAAW,CACd,kBAAM;IACF,IAAI,CAACM,MAAL,EAAa,OAAO,EAAP;;IACb,IAAI,OAAOD,oBAAP,KAAgC,UAApC,EAAgD;MAC5C,OAAOA,oBAAoB,CAACC,MAAD,CAA3B;IACH;;IACD,IAAI,OAAOD,oBAAP,KAAgC,QAApC,EAA8C;MAC1C,OAAOJ,GAAG,CAACK,MAAD,EAASD,oBAAT,CAAV;IACH;;IACD,IAAIN,KAAK,CAACQ,cAAN,CAAqBF,oBAArB,CAAJ,EAAgD;MAC5C,OAAOA,oBAAP;IACH;;IACD,OAAO,WAAIC,MAAM,CAACE,EAAX,CAAP;EACH,CAba,EAcd,CAACH,oBAAD,CAdc,CAAlB;AAgBH,CApBM","names":["React","useCallback","get","useResourceDefinition","useGetRecordRepresentation","resource","recordRepresentation","record","isValidElement","id"],"sources":["/var/www/a1boots/node_modules/ra-core/src/core/useGetRecordRepresentation.ts"],"sourcesContent":["import * as React from 'react';\nimport { useCallback, ReactNode } from 'react';\nimport get from 'lodash/get';\n\nimport { useResourceDefinition } from './useResourceDefinition';\n\n/**\n * Get default string representation of a record\n *\n * @example // No customization\n * const getRecordRepresentation = useGetRecordRepresentation('posts');\n * getRecordRepresentation({ id: 1, title: 'Hello' }); // => \"#1\"\n *\n * @example // With <Resource name=\"posts\" recordRepresentation=\"title\" />\n * const getRecordRepresentation = useGetRecordRepresentation('posts');\n * getRecordRepresentation({ id: 1, title: 'Hello' }); // => \"Hello\"\n */\nexport const useGetRecordRepresentation = (\n    resource: string\n): ((record: any) => ReactNode) => {\n    const { recordRepresentation } = useResourceDefinition({ resource });\n    return useCallback(\n        record => {\n            if (!record) return '';\n            if (typeof recordRepresentation === 'function') {\n                return recordRepresentation(record);\n            }\n            if (typeof recordRepresentation === 'string') {\n                return get(record, recordRepresentation);\n            }\n            if (React.isValidElement(recordRepresentation)) {\n                return recordRepresentation;\n            }\n            return `#${record.id}`;\n        },\n        [recordRepresentation]\n    );\n};\n"]},"metadata":{},"sourceType":"module"}