{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport Queue from '@mui/icons-material/Queue';\nimport { Link } from 'react-router-dom';\nimport { stringify } from 'query-string';\nimport { useResourceContext, useRecordContext, useCreatePath } from 'ra-core';\nimport { Button } from './Button';\nexport var CloneButton = function CloneButton(props) {\n  var _a = props.label,\n      label = _a === void 0 ? 'ra.action.clone' : _a,\n      _b = props.scrollToTop,\n      scrollToTop = _b === void 0 ? true : _b,\n      _c = props.icon,\n      icon = _c === void 0 ? defaultIcon : _c,\n      rest = __rest(props, [\"label\", \"scrollToTop\", \"icon\"]);\n\n  var resource = useResourceContext(props);\n  var record = useRecordContext(props);\n  var createPath = useCreatePath();\n  var pathname = createPath({\n    resource: resource,\n    type: 'create'\n  });\n  return React.createElement(Button, __assign({\n    component: Link,\n    to: record ? {\n      pathname: pathname,\n      search: stringify({\n        source: JSON.stringify(omitId(record))\n      }),\n      state: {\n        _scrollToTop: scrollToTop\n      }\n    } : pathname,\n    label: label,\n    onClick: stopPropagation\n  }, sanitizeRestProps(rest)), icon);\n};\nvar defaultIcon = React.createElement(Queue, null); // useful to prevent click bubbling in a datagrid with rowClick\n\nvar stopPropagation = function stopPropagation(e) {\n  return e.stopPropagation();\n};\n\nvar omitId = function omitId(_a) {\n  var id = _a.id,\n      rest = __rest(_a, [\"id\"]);\n\n  return rest;\n};\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var resource = _a.resource,\n      record = _a.record,\n      rest = __rest(_a, [\"resource\", \"record\"]);\n\n  return rest;\n};\n\nCloneButton.propTypes = {\n  icon: PropTypes.element,\n  label: PropTypes.string,\n  record: PropTypes.any\n};\nexport default memo(CloneButton);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,QAAmC,OAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,EAA+CC,aAA/C,QAAoE,SAApE;AAEA,SAASC,MAAT,QAAoC,UAApC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAwB;EAE3C,SAIAA,KAAK,MAJL;EAAA,SAAK,mBAAG,iBAAH,GAAoBC,EAAzB;EAAA,IACAC,KAGAF,KAAK,YAJL;EAAA,IACAG,WAAW,mBAAG,IAAH,GAAOD,EADlB;EAAA,IAEAE,KAEAJ,KAAK,KAJL;EAAA,IAEAK,IAAI,mBAAGC,WAAH,GAAcF,EAFlB;EAAA,IAGGG,IAAI,UACPP,KADO,EAJL,gCAIK,CAHP;;EAKJ,IAAMQ,QAAQ,GAAGb,kBAAkB,CAACK,KAAD,CAAnC;EACA,IAAMS,MAAM,GAAGb,gBAAgB,CAACI,KAAD,CAA/B;EACA,IAAMU,UAAU,GAAGb,aAAa,EAAhC;EACA,IAAMc,QAAQ,GAAGD,UAAU,CAAC;IAAEF,QAAQ,UAAV;IAAYI,IAAI,EAAE;EAAlB,CAAD,CAA3B;EACA,OACIvB,oBAACS,MAAD,EAAOe;IACHC,SAAS,EAAErB,IADR;IAEHsB,EAAE,EACEN,MAAM,GACA;MACIE,QAAQ,UADZ;MAEIK,MAAM,EAAEtB,SAAS,CAAC;QACduB,MAAM,EAAEC,IAAI,CAACxB,SAAL,CAAeyB,MAAM,CAACV,MAAD,CAArB;MADM,CAAD,CAFrB;MAKIW,KAAK,EAAE;QAAEC,YAAY,EAAElB;MAAhB;IALX,CADA,GAQAQ,QAXP;IAaHW,KAAK,EAAEA,KAbJ;IAcHC,OAAO,EAAEC;EAdN,GAeCC,iBAAiB,CAAClB,IAAD,CAflB,CAAP,EAiBKF,IAjBL,CADJ;AAqBH,CAhCM;AAkCP,IAAMC,WAAW,GAAGjB,oBAACG,KAAD,EAAM,IAAN,CAApB,C,CAEA;;AACA,IAAMgC,eAAe,GAAG,SAAlBA,eAAkB,IAAC;EAAI,QAAC,CAACA,eAAF;AAAmB,CAAhD;;AAEA,IAAML,MAAM,GAAG,SAATA,MAAS,CAAClB,EAAD,EAAqB;EAAlB,MAAE,QAAF;EAAA,IAAOM,IAAI,cAAb,MAAa,CAAX;;EAAuB;AAAI,CAA7C;;AAEA,IAAMkB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACxB,EAAD,EAIiC;EAHvD,YAAQ,cAAR;EAAA,IACAQ,MAAM,YADN;EAAA,IAEGF,IAAI,cAHgB,sBAGhB,CAFP;;EAG4D;AAAI,CAJpE;;AAcAR,WAAW,CAAC2B,SAAZ,GAAwB;EACpBrB,IAAI,EAAEd,SAAS,CAACoC,OADI;EAEpBL,KAAK,EAAE/B,SAAS,CAACqC,MAFG;EAGpBnB,MAAM,EAAElB,SAAS,CAACsC;AAHE,CAAxB;AAMA,eAAevC,IAAI,CAACS,WAAD,CAAnB","names":["React","memo","PropTypes","Queue","Link","stringify","useResourceContext","useRecordContext","useCreatePath","Button","CloneButton","props","_a","_b","scrollToTop","_c","icon","defaultIcon","rest","resource","record","createPath","pathname","type","__assign","component","to","search","source","JSON","omitId","state","_scrollToTop","label","onClick","stopPropagation","sanitizeRestProps","propTypes","element","string","any"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/button/CloneButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { memo, ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Queue from '@mui/icons-material/Queue';\nimport { Link } from 'react-router-dom';\nimport { stringify } from 'query-string';\nimport { useResourceContext, useRecordContext, useCreatePath } from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\nexport const CloneButton = (props: CloneButtonProps) => {\n    const {\n        label = 'ra.action.clone',\n        scrollToTop = true,\n        icon = defaultIcon,\n        ...rest\n    } = props;\n    const resource = useResourceContext(props);\n    const record = useRecordContext(props);\n    const createPath = useCreatePath();\n    const pathname = createPath({ resource, type: 'create' });\n    return (\n        <Button\n            component={Link}\n            to={\n                record\n                    ? {\n                          pathname,\n                          search: stringify({\n                              source: JSON.stringify(omitId(record)),\n                          }),\n                          state: { _scrollToTop: scrollToTop },\n                      }\n                    : pathname\n            }\n            label={label}\n            onClick={stopPropagation}\n            {...sanitizeRestProps(rest)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\nconst defaultIcon = <Queue />;\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\nconst omitId = ({ id, ...rest }: any) => rest;\n\nconst sanitizeRestProps = ({\n    resource,\n    record,\n    ...rest\n}: Omit<CloneButtonProps, 'label' | 'scrollToTop' | 'icon'>) => rest;\n\ninterface Props {\n    record?: any;\n    icon?: ReactElement;\n    scrollToTop?: boolean;\n}\n\nexport type CloneButtonProps = Props & ButtonProps;\n\nCloneButton.propTypes = {\n    icon: PropTypes.element,\n    label: PropTypes.string,\n    record: PropTypes.any,\n};\n\nexport default memo(CloneButton);\n"]},"metadata":{},"sourceType":"module"}