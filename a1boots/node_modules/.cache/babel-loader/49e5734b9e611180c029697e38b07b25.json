{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { Children, cloneElement, isValidElement, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Routes, Route, matchPath, useResolvedPath, useLocation } from 'react-router-dom';\nimport { CardContent, Divider } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useResourceContext } from 'ra-core';\nimport { Toolbar } from './Toolbar';\nimport { TabbedFormTabs, getTabbedFormTabFullPath } from './TabbedFormTabs';\nexport var TabbedFormView = function TabbedFormView(props) {\n  var children = props.children,\n      className = props.className,\n      _a = props.component,\n      Component = _a === void 0 ? DefaultComponent : _a,\n      formRootPathname = props.formRootPathname,\n      _b = props.syncWithLocation,\n      syncWithLocation = _b === void 0 ? true : _b,\n      _c = props.tabs,\n      tabs = _c === void 0 ? DefaultTabs : _c,\n      _d = props.toolbar,\n      toolbar = _d === void 0 ? DefaultToolbar : _d,\n      rest = __rest(props, [\"children\", \"className\", \"component\", \"formRootPathname\", \"syncWithLocation\", \"tabs\", \"toolbar\"]);\n\n  var location = useLocation();\n  var resolvedPath = useResolvedPath('');\n  var resource = useResourceContext(props);\n\n  var _e = useState(0),\n      tabValue = _e[0],\n      setTabValue = _e[1];\n\n  var handleTabChange = function handleTabChange(event, value) {\n    if (!syncWithLocation) {\n      setTabValue(value);\n    }\n  };\n\n  var renderTabHeaders = function renderTabHeaders() {\n    return cloneElement(tabs, {\n      onChange: handleTabChange,\n      syncWithLocation: syncWithLocation,\n      url: formRootPathname,\n      value: tabValue\n    }, children);\n  };\n\n  return React.createElement(Root, __assign({\n    className: clsx('tabbed-form', className)\n  }, sanitizeRestProps(rest)), syncWithLocation ? React.createElement(Routes, null, React.createElement(Route, {\n    path: \"/*\",\n    element: renderTabHeaders()\n  })) : renderTabHeaders(), React.createElement(Divider, null), React.createElement(Component, null, Children.map(children, function (tab, index) {\n    if (!tab) {\n      return null;\n    }\n\n    var tabPath = getTabbedFormTabFullPath(tab, index);\n    var hidden = syncWithLocation ? !matchPath(\"\".concat(resolvedPath.pathname, \"/\").concat(tabPath), location.pathname) : tabValue !== index;\n    return isValidElement(tab) ? React.cloneElement(tab, {\n      intent: 'content',\n      resource: resource,\n      hidden: hidden,\n      value: syncWithLocation ? tabPath : index\n    }) : null;\n  })), toolbar !== false ? toolbar : null);\n};\nTabbedFormView.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  location: PropTypes.object,\n  match: PropTypes.object,\n  // @ts-ignore\n  resource: PropTypes.string,\n  tabs: PropTypes.element,\n  toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.oneOf([false])]),\n  validate: PropTypes.func,\n  value: PropTypes.number\n};\nvar DefaultTabs = React.createElement(TabbedFormTabs, null);\n\nvar DefaultComponent = function DefaultComponent(_a) {\n  var children = _a.children;\n  return React.createElement(CardContent, null, children);\n};\n\nvar DefaultToolbar = React.createElement(Toolbar, null);\nvar PREFIX = 'RaTabbedForm';\nexport var TabbedFormClasses = {\n  errorTabButton: \"\".concat(PREFIX, \"-errorTabButton\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .MuiTab-root.\".concat(TabbedFormClasses.errorTabButton)] = {\n    color: theme.palette.error.main\n  }, _b;\n});\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var record = _a.record,\n      resource = _a.resource,\n      rest = __rest(_a, [\"record\", \"resource\"]);\n\n  return rest;\n};","map":{"version":3,"mappings":"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","names":["React","Children","cloneElement","isValidElement","useState","PropTypes","clsx","Routes","Route","matchPath","useResolvedPath","useLocation","CardContent","Divider","styled","useResourceContext","Toolbar","TabbedFormTabs","getTabbedFormTabFullPath","TabbedFormView","props","className","_a","Component","DefaultComponent","formRootPathname","_b","syncWithLocation","_c","tabs","DefaultTabs","_d","toolbar","DefaultToolbar","rest","location","resolvedPath","resource","tabValue","setTabValue","handleTabChange","event","value","renderTabHeaders","onChange","url","children","Root","__assign","sanitizeRestProps","path","element","map","tab","index","tabPath","hidden","pathname","concat","intent","propTypes","node","string","object","match","oneOfType","oneOf","validate","func","number","PREFIX","TabbedFormClasses","errorTabButton","name","overridesResolver","styles","root","theme","color","palette","error","main"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/form/TabbedFormView.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n    ChangeEvent,\n    Children,\n    ComponentType,\n    cloneElement,\n    isValidElement,\n    ReactElement,\n    ReactNode,\n    useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n    Routes,\n    Route,\n    matchPath,\n    useResolvedPath,\n    useLocation,\n} from 'react-router-dom';\nimport { CardContent, Divider, SxProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useResourceContext } from 'ra-core';\nimport { Toolbar } from './Toolbar';\nimport { TabbedFormTabs, getTabbedFormTabFullPath } from './TabbedFormTabs';\n\nexport const TabbedFormView = (props: TabbedFormViewProps): ReactElement => {\n    const {\n        children,\n        className,\n        component: Component = DefaultComponent,\n        formRootPathname,\n        syncWithLocation = true,\n        tabs = DefaultTabs,\n        toolbar = DefaultToolbar,\n        ...rest\n    } = props;\n    const location = useLocation();\n    const resolvedPath = useResolvedPath('');\n    const resource = useResourceContext(props);\n    const [tabValue, setTabValue] = useState(0);\n\n    const handleTabChange = (event: ChangeEvent<{}>, value: any): void => {\n        if (!syncWithLocation) {\n            setTabValue(value);\n        }\n    };\n\n    const renderTabHeaders = () =>\n        cloneElement(\n            tabs,\n            {\n                onChange: handleTabChange,\n                syncWithLocation,\n                url: formRootPathname,\n                value: tabValue,\n            },\n            children\n        );\n\n    return (\n        <Root\n            className={clsx('tabbed-form', className)}\n            {...sanitizeRestProps(rest)}\n        >\n            {syncWithLocation ? (\n                <Routes>\n                    <Route path=\"/*\" element={renderTabHeaders()} />\n                </Routes>\n            ) : (\n                renderTabHeaders()\n            )}\n            <Divider />\n            <Component>\n                {/* All tabs are rendered (not only the one in focus), to allow validation\n                on tabs not in focus. The tabs receive a `hidden` property, which they'll\n                use to hide the tab using CSS if it's not the one in focus.\n                See https://github.com/marmelab/react-admin/issues/1866 */}\n                {Children.map(children, (tab: ReactElement, index) => {\n                    if (!tab) {\n                        return null;\n                    }\n                    const tabPath = getTabbedFormTabFullPath(tab, index);\n                    const hidden = syncWithLocation\n                        ? !matchPath(\n                              `${resolvedPath.pathname}/${tabPath}`,\n                              location.pathname\n                          )\n                        : tabValue !== index;\n\n                    return isValidElement<any>(tab)\n                        ? React.cloneElement(tab, {\n                              intent: 'content',\n                              resource,\n                              hidden,\n                              value: syncWithLocation ? tabPath : index,\n                          })\n                        : null;\n                })}\n            </Component>\n            {toolbar !== false ? toolbar : null}\n        </Root>\n    );\n};\n\nTabbedFormView.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    location: PropTypes.object,\n    match: PropTypes.object,\n    // @ts-ignore\n    resource: PropTypes.string,\n    tabs: PropTypes.element,\n    toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.oneOf([false])]),\n    validate: PropTypes.func,\n    value: PropTypes.number,\n};\n\nconst DefaultTabs = <TabbedFormTabs />;\nconst DefaultComponent = ({ children }) => (\n    <CardContent>{children}</CardContent>\n);\nconst DefaultToolbar = <Toolbar />;\n\nexport interface TabbedFormViewProps {\n    children?: ReactNode;\n    className?: string;\n    component?: ComponentType<any>;\n    resource?: string;\n    formRootPathname?: string;\n    syncWithLocation?: boolean;\n    tabs?: ReactElement;\n    toolbar?: ReactElement | false;\n    sx?: SxProps;\n}\n\nconst PREFIX = 'RaTabbedForm';\n\nexport const TabbedFormClasses = {\n    errorTabButton: `${PREFIX}-errorTabButton`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .MuiTab-root.${TabbedFormClasses.errorTabButton}`]: {\n        color: theme.palette.error.main,\n    },\n}));\n\nconst sanitizeRestProps = ({ record, resource, ...rest }: any) => rest;\n"]},"metadata":{},"sourceType":"module"}