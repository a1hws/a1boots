{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport get from 'lodash/get';\nimport Typography from '@mui/material/Typography';\nimport { Link } from '@mui/material';\nimport { useRecordContext, useTranslate } from 'ra-core';\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nimport { genericMemo } from './genericMemo';\n\nvar EmailFieldImpl = function (props) {\n  var className = props.className,\n      source = props.source,\n      emptyText = props.emptyText,\n      rest = __rest(props, [\"className\", \"source\", \"emptyText\"]);\n\n  var record = useRecordContext(props);\n  var value = get(record, source);\n  var translate = useTranslate();\n\n  if (value == null) {\n    return emptyText ? React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), emptyText && translate(emptyText, {\n      _: emptyText\n    })) : null;\n  }\n\n  return React.createElement(Link, __assign({\n    className: className,\n    href: \"mailto:\".concat(value),\n    onClick: stopPropagation,\n    variant: \"body2\"\n  }, sanitizeFieldRestProps(rest)), value);\n};\n\nEmailFieldImpl.propTypes = fieldPropTypes;\nEmailFieldImpl.displayName = 'EmailFieldImpl';\nexport var EmailField = genericMemo(EmailFieldImpl); // useful to prevent click bubbling in a Datagrid with rowClick\n\nvar stopPropagation = function (e) {\n  return e.stopPropagation();\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,IAAT,QAAgC,eAAhC;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,SAA/C;AAEA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAAqBC,cAArB,QAA2C,SAA3C;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,IAAMC,cAAc,GAAG,UAGnBC,KAHmB,EAGe;EAE1B,aAAS,GAAiCA,KAAK,UAA/C;EAAA,IAAWC,MAAM,GAAyBD,KAAK,OAA/C;EAAA,IAAmBE,SAAS,GAAcF,KAAK,UAA/C;EAAA,IAAiCG,IAAI,UAAKH,KAAL,EAAvC,oCAAuC,CAArC;;EACR,IAAMI,MAAM,GAAGV,gBAAgB,CAACM,KAAD,CAA/B;EACA,IAAMK,KAAK,GAAGd,GAAG,CAACa,MAAD,EAASH,MAAT,CAAjB;EACA,IAAMK,SAAS,GAAGX,YAAY,EAA9B;;EAEA,IAAIU,KAAK,IAAI,IAAb,EAAmB;IACf,OAAOH,SAAS,GACZZ,oBAACE,UAAD,EAAWe;MACPC,SAAS,EAAC,MADH;MAEPC,OAAO,EAAC,OAFD;MAGPC,SAAS,EAAEA;IAHJ,GAIHd,sBAAsB,CAACO,IAAD,CAJnB,CAAX,EAMKD,SAAS,IAAII,SAAS,CAACJ,SAAD,EAAY;MAAES,CAAC,EAAET;IAAL,CAAZ,CAN3B,CADY,GASZ,IATJ;EAUH;;EAED,OACIZ,oBAACG,IAAD,EAAKc;IACDG,SAAS,EAAEA,SADV;IAEDE,IAAI,EAAE,iBAAUP,KAAV,CAFL;IAGDQ,OAAO,EAAEC,eAHR;IAIDL,OAAO,EAAC;EAJP,GAKGb,sBAAsB,CAACO,IAAD,CALzB,CAAL,EAOKE,KAPL,CADJ;AAWH,CAlCD;;AAoCAN,cAAc,CAACgB,SAAf,GAA2BlB,cAA3B;AACAE,cAAc,CAACiB,WAAf,GAA6B,gBAA7B;AAEA,OAAO,IAAMC,UAAU,GAAGnB,WAAW,CAACC,cAAD,CAA9B,C,CAOP;;AACA,IAAMe,eAAe,GAAG,aAAC;EAAI,QAAC,CAACA,eAAF;AAAmB,CAAhD","names":["React","get","Typography","Link","useRecordContext","useTranslate","sanitizeFieldRestProps","fieldPropTypes","genericMemo","EmailFieldImpl","props","source","emptyText","rest","record","value","translate","__assign","component","variant","className","_","href","onClick","stopPropagation","propTypes","displayName","EmailField"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/field/EmailField.tsx"],"sourcesContent":["import * as React from 'react';\nimport get from 'lodash/get';\nimport Typography from '@mui/material/Typography';\nimport { Link, LinkProps } from '@mui/material';\nimport { useRecordContext, useTranslate } from 'ra-core';\n\nimport { sanitizeFieldRestProps } from './sanitizeFieldRestProps';\nimport { FieldProps, fieldPropTypes } from './types';\nimport { genericMemo } from './genericMemo';\n\nconst EmailFieldImpl = <\n    RecordType extends Record<string, unknown> = Record<string, any>\n>(\n    props: EmailFieldProps<RecordType>\n) => {\n    const { className, source, emptyText, ...rest } = props;\n    const record = useRecordContext(props);\n    const value = get(record, source);\n    const translate = useTranslate();\n\n    if (value == null) {\n        return emptyText ? (\n            <Typography\n                component=\"span\"\n                variant=\"body2\"\n                className={className}\n                {...sanitizeFieldRestProps(rest)}\n            >\n                {emptyText && translate(emptyText, { _: emptyText })}\n            </Typography>\n        ) : null;\n    }\n\n    return (\n        <Link\n            className={className}\n            href={`mailto:${value}`}\n            onClick={stopPropagation}\n            variant=\"body2\"\n            {...sanitizeFieldRestProps(rest)}\n        >\n            {value}\n        </Link>\n    );\n};\n\nEmailFieldImpl.propTypes = fieldPropTypes;\nEmailFieldImpl.displayName = 'EmailFieldImpl';\n\nexport const EmailField = genericMemo(EmailFieldImpl);\n\nexport interface EmailFieldProps<\n    RecordType extends Record<string, unknown> = Record<string, any>\n> extends FieldProps<RecordType>,\n        Omit<LinkProps, 'textAlign'> {}\n\n// useful to prevent click bubbling in a Datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n"]},"metadata":{},"sourceType":"module"}