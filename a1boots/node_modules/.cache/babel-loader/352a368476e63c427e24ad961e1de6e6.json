{"ast":null,"code":"import { useCallback } from 'react';\nimport { useTranslate } from './useTranslate';\nimport { useLabelPrefix, getFieldLabelTranslationArgs } from '../util';\nimport { useResourceContext } from '../core';\nexport var useTranslateLabel = function useTranslateLabel() {\n  var translate = useTranslate();\n  var prefix = useLabelPrefix();\n  var resourceFromContext = useResourceContext();\n  return useCallback(function (_a) {\n    var source = _a.source,\n        label = _a.label,\n        resource = _a.resource;\n\n    if (label === false || label === '') {\n      return null;\n    }\n\n    if (label && typeof label !== 'string') {\n      return label;\n    }\n\n    return translate.apply(void 0, getFieldLabelTranslationArgs({\n      label: label,\n      prefix: prefix,\n      resource: resource,\n      resourceFromContext: resourceFromContext,\n      source: source\n    }));\n  }, [prefix, resourceFromContext, translate]);\n};","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,QAA0C,OAA1C;AAEA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,EAAyBC,4BAAzB,QAA6D,SAA7D;AACA,SAASC,kBAAT,QAAmC,SAAnC;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;EAC7B,IAAMC,SAAS,GAAGL,YAAY,EAA9B;EACA,IAAMM,MAAM,GAAGL,cAAc,EAA7B;EACA,IAAMM,mBAAmB,GAAGJ,kBAAkB,EAA9C;EAEA,OAAOJ,WAAW,CACd,UAACS,EAAD,EAQC;QAPGC,MAAM;QACNC,KAAK;QACLC,QAAQ;;IAMR,IAAID,KAAK,KAAK,KAAV,IAAmBA,KAAK,KAAK,EAAjC,EAAqC;MACjC,OAAO,IAAP;IACH;;IAED,IAAIA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;MACpC,OAAOA,KAAP;IACH;;IAED,OAAOL,SAAS,MAAT,CAAS,MAAT,EACAH,4BAA4B,CAAC;MAC5BQ,KAAK,EAAEA,KADqB;MAE5BJ,MAAM,QAFsB;MAG5BK,QAAQ,UAHoB;MAI5BJ,mBAAmB,qBAJS;MAK5BE,MAAM;IALsB,CAAD,CAD5B,CAAP;EASH,CA3Ba,EA4Bd,CAACH,MAAD,EAASC,mBAAT,EAA8BF,SAA9B,CA5Bc,CAAlB;AA8BH,CAnCM","names":["useCallback","useTranslate","useLabelPrefix","getFieldLabelTranslationArgs","useResourceContext","useTranslateLabel","translate","prefix","resourceFromContext","_a","source","label","resource"],"sources":["/var/www/a1boots/node_modules/ra-core/src/i18n/useTranslateLabel.ts"],"sourcesContent":["import { useCallback, ReactElement } from 'react';\n\nimport { useTranslate } from './useTranslate';\nimport { useLabelPrefix, getFieldLabelTranslationArgs } from '../util';\nimport { useResourceContext } from '../core';\n\nexport const useTranslateLabel = () => {\n    const translate = useTranslate();\n    const prefix = useLabelPrefix();\n    const resourceFromContext = useResourceContext();\n\n    return useCallback(\n        ({\n            source,\n            label,\n            resource,\n        }: {\n            source?: string;\n            label?: string | false | ReactElement;\n            resource?: string;\n        }) => {\n            if (label === false || label === '') {\n                return null;\n            }\n\n            if (label && typeof label !== 'string') {\n                return label;\n            }\n\n            return translate(\n                ...getFieldLabelTranslationArgs({\n                    label: label as string,\n                    prefix,\n                    resource,\n                    resourceFromContext,\n                    source,\n                })\n            );\n        },\n        [prefix, resourceFromContext, translate]\n    );\n};\n"]},"metadata":{},"sourceType":"module"}