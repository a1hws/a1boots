{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTheme } from '@mui/material/styles';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useLoading } from 'ra-core';\nimport { RefreshIconButton } from '../button';\nexport var LoadingIndicator = function LoadingIndicator(props) {\n  var className = props.className,\n      sx = props.sx,\n      rest = __rest(props, [\"className\", \"sx\"]);\n\n  var loading = useLoading();\n  var theme = useTheme();\n  return React.createElement(Root, {\n    className: className,\n    sx: sx\n  }, loading ? React.createElement(CircularProgress, __assign({\n    className: clsx('app-loader', LoadingIndicatorClasses.loader),\n    color: \"inherit\",\n    size: theme.spacing(2),\n    thickness: 6\n  }, rest)) : React.createElement(RefreshIconButton, {\n    className: LoadingIndicatorClasses.loadedIcon\n  }));\n};\nLoadingIndicator.propTypes = {\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  width: PropTypes.string\n};\nvar PREFIX = 'RaLoadingIndicator';\nexport var LoadingIndicatorClasses = {\n  loader: \"\".concat(PREFIX, \"-loader\"),\n  loadedIcon: \"\".concat(PREFIX, \"-loadedIcon\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(LoadingIndicatorClasses.loader)] = {\n    marginLeft: theme.spacing(1.5),\n    marginRight: theme.spacing(1.5)\n  }, _b[\"& .\".concat(LoadingIndicatorClasses.loadedIcon)] = {}, _b;\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,SAASC,iBAAT,QAAkC,WAAlC;AAGA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAA6B;EACjD,aAAS,GAAkBA,KAAK,UAAhC;EAAA,IAAWC,EAAE,GAAcD,KAAK,GAAhC;EAAA,IAAkBE,IAAI,UAAKF,KAAL,EAAxB,mBAAwB,CAAtB;;EACR,IAAMG,OAAO,GAAGN,UAAU,EAA1B;EAEA,IAAMO,KAAK,GAAGT,QAAQ,EAAtB;EACA,OACIJ,oBAACc,IAAD,EAAK;IAACC,SAAS,EAAEA,SAAZ;IAAuBL,EAAE,EAAEA;EAA3B,CAAL,EACKE,OAAO,GACJZ,oBAACK,gBAAD,EAAiBW;IACbD,SAAS,EAAEZ,IAAI,CACX,YADW,EAEXc,uBAAuB,CAACC,MAFb,CADF;IAKbC,KAAK,EAAC,SALO;IAMbC,IAAI,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CANO;IAObC,SAAS,EAAE;EAPE,GAQTX,IARS,CAAjB,CADI,GAYJX,oBAACO,iBAAD,EAAkB;IACdQ,SAAS,EAAEE,uBAAuB,CAACM;EADrB,CAAlB,CAbR,CADJ;AAoBH,CAzBM;AA2BPf,gBAAgB,CAACgB,SAAjB,GAA6B;EACzBC,OAAO,EAAEvB,SAAS,CAACwB,MADM;EAEzBX,SAAS,EAAEb,SAAS,CAACyB,MAFI;EAGzBC,KAAK,EAAE1B,SAAS,CAACyB;AAHQ,CAA7B;AAWA,IAAME,MAAM,GAAG,oBAAf;AAEA,OAAO,IAAMZ,uBAAuB,GAAG;EACnCC,MAAM,EAAE,UAAGW,MAAH,EAAS,SAAT,CAD2B;EAEnCN,UAAU,EAAE,UAAGM,MAAH,EAAS,aAAT;AAFuB,CAAhC;AAKP,IAAMf,IAAI,GAAGb,MAAM,CAAC,KAAD,EAAQ;EACvB6B,IAAI,EAAED,MADiB;EAEvBE,iBAAiB,EAAE,2BAACtB,KAAD,EAAQuB,MAAR,EAAc;IAAK,aAAM,CAACC,IAAP;EAAW;AAF1B,CAAR,CAAN,CAGV,UAACC,EAAD,EAAU;;;MAAPrB,KAAK;EAAO,gBACdsB,GAAC,aAAMlB,uBAAuB,CAACC,MAA9B,CAAD,IAA0C;IACtCkB,UAAU,EAAEvB,KAAK,CAACQ,OAAN,CAAc,GAAd,CAD0B;IAEtCgB,WAAW,EAAExB,KAAK,CAACQ,OAAN,CAAc,GAAd;EAFyB,CAD5B,EAMdc,GAAC,aAAMlB,uBAAuB,CAACM,UAA9B,CAAD,IAA8C,EANhC;AAOhB,CAVW,CAAb","names":["React","styled","PropTypes","clsx","useTheme","CircularProgress","useLoading","RefreshIconButton","LoadingIndicator","props","sx","rest","loading","theme","Root","className","__assign","LoadingIndicatorClasses","loader","color","size","spacing","thickness","loadedIcon","propTypes","classes","object","string","width","PREFIX","name","overridesResolver","styles","root","_a","_b","marginLeft","marginRight"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/layout/LoadingIndicator.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTheme } from '@mui/material/styles';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useLoading } from 'ra-core';\n\nimport { RefreshIconButton } from '../button';\nimport { SxProps } from '@mui/system';\n\nexport const LoadingIndicator = (props: LoadingIndicatorProps) => {\n    const { className, sx, ...rest } = props;\n    const loading = useLoading();\n\n    const theme = useTheme();\n    return (\n        <Root className={className} sx={sx}>\n            {loading ? (\n                <CircularProgress\n                    className={clsx(\n                        'app-loader',\n                        LoadingIndicatorClasses.loader\n                    )}\n                    color=\"inherit\"\n                    size={theme.spacing(2)}\n                    thickness={6}\n                    {...rest}\n                />\n            ) : (\n                <RefreshIconButton\n                    className={LoadingIndicatorClasses.loadedIcon}\n                />\n            )}\n        </Root>\n    );\n};\n\nLoadingIndicator.propTypes = {\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    width: PropTypes.string,\n};\n\ninterface LoadingIndicatorProps {\n    className?: string;\n    sx?: SxProps;\n}\n\nconst PREFIX = 'RaLoadingIndicator';\n\nexport const LoadingIndicatorClasses = {\n    loader: `${PREFIX}-loader`,\n    loadedIcon: `${PREFIX}-loadedIcon`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${LoadingIndicatorClasses.loader}`]: {\n        marginLeft: theme.spacing(1.5),\n        marginRight: theme.spacing(1.5),\n    },\n\n    [`& .${LoadingIndicatorClasses.loadedIcon}`]: {},\n}));\n"]},"metadata":{},"sourceType":"module"}