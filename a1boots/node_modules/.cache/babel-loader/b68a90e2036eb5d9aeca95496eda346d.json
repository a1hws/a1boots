{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children, cloneElement, isValidElement } from 'react';\nimport { FormGroupContextProvider, useTranslatableContext } from 'ra-core';\n/**\n * Default container for a group of translatable inputs inside a TranslatableInputs component.\n * @see TranslatableInputs\n */\n\nexport var TranslatableInputsTabContent = function (props) {\n  var children = props.children,\n      _a = props.groupKey,\n      groupKey = _a === void 0 ? '' : _a,\n      locale = props.locale,\n      margin = props.margin,\n      variant = props.variant,\n      other = __rest(props, [\"children\", \"groupKey\", \"locale\", \"margin\", \"variant\"]);\n\n  var _b = useTranslatableContext(),\n      selectedLocale = _b.selectedLocale,\n      getLabel = _b.getLabel,\n      getSource = _b.getSource;\n\n  return React.createElement(FormGroupContextProvider, {\n    name: \"\".concat(groupKey).concat(locale)\n  }, React.createElement(Root, __assign({\n    role: \"tabpanel\",\n    hidden: selectedLocale !== locale,\n    id: \"translatable-content-\".concat(groupKey).concat(locale),\n    \"aria-labelledby\": \"translatable-header-\".concat(groupKey).concat(locale),\n    className: TranslatableInputsTabContentClasses.root\n  }, other), Children.map(children, function (child) {\n    return isValidElement(child) ? cloneElement(child, __assign(__assign({}, child.props), {\n      label: getLabel(child.props.source, child.props.label),\n      source: getSource(child.props.source, locale)\n    })) : null;\n  })));\n};\nvar PREFIX = 'RaTranslatableInputsTabContent';\nexport var TranslatableInputsTabContentClasses = {\n  root: \"\".concat(PREFIX, \"-root\")\n};\nvar Root = styled('div', {\n  name: PREFIX\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {}, _b[\"&.\".concat(TranslatableInputsTabContentClasses.root)] = {\n    flexGrow: 1,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    borderRadius: 0,\n    borderBottomLeftRadius: theme.shape.borderRadius,\n    borderBottomRightRadius: theme.shape.borderRadius,\n    border: \"1px solid \".concat(theme.palette.divider),\n    borderTop: 0\n  }, _b;\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SACIC,QADJ,EAEIC,YAFJ,EAGIC,cAHJ,QAMO,OANP;AAOA,SACIC,wBADJ,EAGIC,sBAHJ,QAIO,SAJP;AAMA;;;;;AAIA,OAAO,IAAMC,4BAA4B,GAAG,UACxCC,KADwC,EACA;EAGpC,YAAQ,GAMRA,KAAK,SANL;EAAA,IACAC,KAKAD,KAAK,SANL;EAAA,IACAE,QAAQ,mBAAG,EAAH,GAAKD,EADb;EAAA,IAEAE,MAAM,GAINH,KAAK,OANL;EAAA,IAGAI,MAAM,GAGNJ,KAAK,OANL;EAAA,IAIAK,OAAO,GAEPL,KAAK,QANL;EAAA,IAKGM,KAAK,UACRN,KADQ,EANN,uDAMM,CALR;;EAOE,SAA0CF,sBAAsB,EAAhE;EAAA,IAAES,cAAc,oBAAhB;EAAA,IAAkBC,QAAQ,cAA1B;EAAA,IAA4BC,SAAS,eAArC;;EAEN,OACIjB,oBAACK,wBAAD,EAAyB;IAACa,IAAI,EAAE,UAAGR,QAAH,EAAWS,MAAX,CAAcR,MAAd;EAAP,CAAzB,EACIX,oBAACoB,IAAD,EAAKC;IACDC,IAAI,EAAC,UADJ;IAEDC,MAAM,EAAER,cAAc,KAAKJ,MAF1B;IAGDa,EAAE,EAAE,+BAAwBd,QAAxB,EAAgCS,MAAhC,CAAmCR,MAAnC,CAHH;IAG8C,mBAC9B,8BAAuBD,QAAvB,EAA+BS,MAA/B,CAAkCR,MAAlC,CAJhB;IAKDc,SAAS,EAAEC,mCAAmC,CAACC;EAL9C,GAMGb,KANH,CAAL,EAQKZ,QAAQ,CAAC0B,GAAT,CAAaC,QAAb,EAAuB,iBAAK;IACzB,qBAAc,CAACC,KAAD,CAAd,GACM3B,YAAY,CAAC2B,KAAD,EAAMT,sBACXS,KAAK,CAACtB,KADK,GACA;MACduB,KAAK,EAAEf,QAAQ,CACXc,KAAK,CAACtB,KAAN,CAAYwB,MADD,EAEXF,KAAK,CAACtB,KAAN,CAAYuB,KAFD,CADD;MAKdC,MAAM,EAAEf,SAAS,CAACa,KAAK,CAACtB,KAAN,CAAYwB,MAAb,EAAqBrB,MAArB;IALH,CADA,CAAN,CADlB,GASM,IATN;EASU,CAVb,CARL,CADJ,CADJ;AAyBH,CAtCM;AAoDP,IAAMsB,MAAM,GAAG,gCAAf;AAEA,OAAO,IAAMP,mCAAmC,GAAG;EAC/CC,IAAI,EAAE,UAAGM,MAAH,EAAS,OAAT;AADyC,CAA5C;AAIP,IAAMb,IAAI,GAAGnB,MAAM,CAAC,KAAD,EAAQ;EAAEiB,IAAI,EAAEe;AAAR,CAAR,CAAN,CAAgC,UAACxB,EAAD,EAAU;;;MAAPyB,KAAK;EAAO,gBACxDC,GAAC,YAAKT,mCAAmC,CAACC,IAAzC,CAAD,IAAmD;IAC/CS,QAAQ,EAAE,CADqC;IAE/CC,WAAW,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFkC;IAG/CC,YAAY,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd,CAHiC;IAI/CE,UAAU,EAAEN,KAAK,CAACI,OAAN,CAAc,CAAd,CAJmC;IAK/CG,aAAa,EAAEP,KAAK,CAACI,OAAN,CAAc,CAAd,CALgC;IAM/CI,YAAY,EAAE,CANiC;IAO/CC,sBAAsB,EAAET,KAAK,CAACU,KAAN,CAAYF,YAPW;IAQ/CG,uBAAuB,EAAEX,KAAK,CAACU,KAAN,CAAYF,YARU;IAS/CI,MAAM,EAAE,oBAAaZ,KAAK,CAACa,OAAN,CAAcC,OAA3B,CATuC;IAU/CC,SAAS,EAAE;EAVoC,CADK;AAa1D,CAbW,CAAb","names":["React","styled","Children","cloneElement","isValidElement","FormGroupContextProvider","useTranslatableContext","TranslatableInputsTabContent","props","_a","groupKey","locale","margin","variant","other","selectedLocale","getLabel","getSource","name","concat","Root","__assign","role","hidden","id","className","TranslatableInputsTabContentClasses","root","map","children","child","label","source","PREFIX","theme","_b","flexGrow","paddingLeft","spacing","paddingRight","paddingTop","paddingBottom","borderRadius","borderBottomLeftRadius","shape","borderBottomRightRadius","border","palette","divider","borderTop"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/input/TranslatableInputsTabContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport {\n    Children,\n    cloneElement,\n    isValidElement,\n    ReactElement,\n    ReactNode,\n} from 'react';\nimport {\n    FormGroupContextProvider,\n    RaRecord,\n    useTranslatableContext,\n} from 'ra-core';\n\n/**\n * Default container for a group of translatable inputs inside a TranslatableInputs component.\n * @see TranslatableInputs\n */\nexport const TranslatableInputsTabContent = (\n    props: TranslatableInputsTabContentProps\n): ReactElement => {\n    const {\n        children,\n        groupKey = '',\n        locale,\n        margin,\n        variant,\n        ...other\n    } = props;\n    const { selectedLocale, getLabel, getSource } = useTranslatableContext();\n\n    return (\n        <FormGroupContextProvider name={`${groupKey}${locale}`}>\n            <Root\n                role=\"tabpanel\"\n                hidden={selectedLocale !== locale}\n                id={`translatable-content-${groupKey}${locale}`}\n                aria-labelledby={`translatable-header-${groupKey}${locale}`}\n                className={TranslatableInputsTabContentClasses.root}\n                {...other}\n            >\n                {Children.map(children, child =>\n                    isValidElement(child)\n                        ? cloneElement(child, {\n                              ...child.props,\n                              label: getLabel(\n                                  child.props.source,\n                                  child.props.label\n                              ),\n                              source: getSource(child.props.source, locale),\n                          })\n                        : null\n                )}\n            </Root>\n        </FormGroupContextProvider>\n    );\n};\n\nexport type TranslatableInputsTabContentProps<\n    RecordType extends RaRecord | Omit<RaRecord, 'id'> = any\n> = {\n    children: ReactNode;\n    groupKey?: string;\n    locale: string;\n    record?: RecordType;\n    resource?: string;\n    margin?: 'none' | 'normal' | 'dense';\n    variant?: 'standard' | 'outlined' | 'filled';\n};\n\nconst PREFIX = 'RaTranslatableInputsTabContent';\n\nexport const TranslatableInputsTabContentClasses = {\n    root: `${PREFIX}-root`,\n};\n\nconst Root = styled('div', { name: PREFIX })(({ theme }) => ({\n    [`&.${TranslatableInputsTabContentClasses.root}`]: {\n        flexGrow: 1,\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        borderRadius: 0,\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        border: `1px solid ${theme.palette.divider}`,\n        borderTop: 0,\n    },\n}));\n"]},"metadata":{},"sourceType":"module"}