{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport { useBasename } from 'ra-core';\nimport { MenuItemLink } from './MenuItemLink';\nexport var DashboardMenuItem = function DashboardMenuItem(props) {\n  var basename = useBasename();\n\n  var _a = props.leftIcon,\n      leftIcon = _a === void 0 ? React.createElement(DashboardIcon, null) : _a,\n      _b = props.to,\n      to = _b === void 0 ? \"\".concat(basename, \"/\") : _b,\n      _c = props.primaryText,\n      primaryText = _c === void 0 ? 'ra.page.dashboard' : _c,\n      rest = __rest(props, [\"leftIcon\", \"to\", \"primaryText\"]);\n\n  return React.createElement(MenuItemLink, __assign({\n    leftIcon: leftIcon,\n    to: to,\n    primaryText: primaryText\n  }, rest));\n};\nDashboardMenuItem.propTypes = {\n  leftIcon: PropTypes.element,\n  locale: PropTypes.string,\n  onClick: PropTypes.func,\n  dense: PropTypes.bool,\n  sidebarIsOpen: PropTypes.bool\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,SAASC,YAAT,QAAgD,gBAAhD;AAGA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAA8B;EAC3D,IAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;EAEI,SAIAG,KAAK,SAJL;EAAA,YAAQ,mBAAGN,oBAACE,aAAD,EAAc,IAAd,CAAH,GAAoBM,EAA5B;EAAA,IACAC,KAGAH,KAAK,GAJL;EAAA,IACAI,EAAE,mBAAG,UAAGH,QAAH,EAAW,GAAX,CAAH,GAAiBE,EADnB;EAAA,IAEAE,KAEAL,KAAK,YAJL;EAAA,IAEAM,WAAW,mBAAG,mBAAH,GAAsBD,EAFjC;EAAA,IAGGE,IAAI,UACPP,KADO,EAJL,iCAIK,CAHP;;EAMJ,OACIN,oBAACI,YAAD,EAAaU;IACTC,QAAQ,EAAEA,QADD;IAETL,EAAE,EAAEA,EAFK;IAGTE,WAAW,EAAEA;EAHJ,GAILC,IAJK,CAAb,CADJ;AAQH,CAjBM;AA2BPR,iBAAiB,CAACW,SAAlB,GAA8B;EAC1BD,QAAQ,EAAEd,SAAS,CAACgB,OADM;EAE1BC,MAAM,EAAEjB,SAAS,CAACkB,MAFQ;EAG1BC,OAAO,EAAEnB,SAAS,CAACoB,IAHO;EAI1BC,KAAK,EAAErB,SAAS,CAACsB,IAJS;EAK1BC,aAAa,EAAEvB,SAAS,CAACsB;AALC,CAA9B","names":["React","PropTypes","DashboardIcon","useBasename","MenuItemLink","DashboardMenuItem","props","basename","_a","_b","to","_c","primaryText","rest","__assign","leftIcon","propTypes","element","locale","string","onClick","func","dense","bool","sidebarIsOpen"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/layout/DashboardMenuItem.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport { useBasename } from 'ra-core';\n\nimport { MenuItemLink, MenuItemLinkProps } from './MenuItemLink';\nimport { To } from 'history';\n\nexport const DashboardMenuItem = (props: DashboardMenuItemProps) => {\n    const basename = useBasename();\n    const {\n        leftIcon = <DashboardIcon />,\n        to = `${basename}/`,\n        primaryText = 'ra.page.dashboard',\n        ...rest\n    } = props;\n\n    return (\n        <MenuItemLink\n            leftIcon={leftIcon}\n            to={to}\n            primaryText={primaryText}\n            {...rest}\n        />\n    );\n};\n\nexport interface DashboardMenuItemProps extends Omit<MenuItemLinkProps, 'to'> {\n    to?: To;\n    /**\n     * @deprecated\n     */\n    sidebarIsOpen?: boolean;\n}\n\nDashboardMenuItem.propTypes = {\n    leftIcon: PropTypes.element,\n    locale: PropTypes.string,\n    onClick: PropTypes.func,\n    dense: PropTypes.bool,\n    sidebarIsOpen: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}