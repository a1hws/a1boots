{"ast":null,"code":"import { createContext } from 'react';\n/**\n * Context to store the result of the useShowController() hook.\n *\n * Use the useShowContext() hook to read the context. That's what the Show components do in react-admin.\n *\n * @example\n *\n * import { useShowController, ShowContextProvider } from 'ra-core';\n *\n * const Show = props => {\n *     const controllerProps = useShowController(props);\n *     return (\n *         <ShowContextProvider value={controllerProps}>\n *             ...\n *         </ShowContextProvider>\n *     );\n * };\n */\n\nexport var ShowContext = createContext({\n  record: null,\n  defaultTitle: null,\n  isFetching: null,\n  isLoading: null,\n  refetch: null,\n  resource: null\n});\nShowContext.displayName = 'ShowContext';","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AAGA;;;;;;;;;;;;;;;;;;;AAkBA,OAAO,IAAMC,WAAW,GAAGD,aAAa,CAAuB;EAC3DE,MAAM,EAAE,IADmD;EAE3DC,YAAY,EAAE,IAF6C;EAG3DC,UAAU,EAAE,IAH+C;EAI3DC,SAAS,EAAE,IAJgD;EAK3DC,OAAO,EAAE,IALkD;EAM3DC,QAAQ,EAAE;AANiD,CAAvB,CAAjC;AASPN,WAAW,CAACO,WAAZ,GAA0B,aAA1B","names":["createContext","ShowContext","record","defaultTitle","isFetching","isLoading","refetch","resource","displayName"],"sources":["/var/www/a1boots/node_modules/ra-core/src/controller/show/ShowContext.tsx"],"sourcesContent":["import { createContext } from 'react';\nimport { ShowControllerResult } from './useShowController';\n\n/**\n * Context to store the result of the useShowController() hook.\n *\n * Use the useShowContext() hook to read the context. That's what the Show components do in react-admin.\n *\n * @example\n *\n * import { useShowController, ShowContextProvider } from 'ra-core';\n *\n * const Show = props => {\n *     const controllerProps = useShowController(props);\n *     return (\n *         <ShowContextProvider value={controllerProps}>\n *             ...\n *         </ShowContextProvider>\n *     );\n * };\n */\nexport const ShowContext = createContext<ShowControllerResult>({\n    record: null,\n    defaultTitle: null,\n    isFetching: null,\n    isLoading: null,\n    refetch: null,\n    resource: null,\n});\n\nShowContext.displayName = 'ShowContext';\n"]},"metadata":{},"sourceType":"module"}