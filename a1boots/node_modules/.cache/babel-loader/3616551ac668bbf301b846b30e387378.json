{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'ra-core';\nimport { Stack, CardContent } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Toolbar } from './Toolbar';\n/**\n * Form with a one column layout, one input per line.\n *\n * Pass input components as children.\n *\n * @example\n *\n * import * as React from \"react\";\n * import { Create, Edit, SimpleForm, TextInput, DateInput, ReferenceManyField, Datagrid, TextField, DateField, EditButton } from 'react-admin';\n * import RichTextInput from 'ra-input-rich-text';\n *\n * export const PostCreate = (props) => (\n *     <Create {...props}>\n *         <SimpleForm>\n *             <TextInput source=\"title\" />\n *             <TextInput source=\"teaser\" options={{ multiline: true }} />\n *             <RichTextInput source=\"body\" />\n *             <DateInput label=\"Publication date\" source=\"published_at\" defaultValue={new Date()} />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\n * @prop {ReactElement[]} children Input elements\n * @prop {Object} defaultValues\n * @prop {Function} validate\n * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton\n *\n * @param {Props} props\n */\n\nexport var SimpleForm = function (props) {\n  var children = props.children,\n      className = props.className,\n      _a = props.component,\n      Component = _a === void 0 ? DefaultComponent : _a,\n      sx = props.sx,\n      _b = props.toolbar,\n      toolbar = _b === void 0 ? DefaultToolbar : _b,\n      rest = __rest(props, [\"children\", \"className\", \"component\", \"sx\", \"toolbar\"]);\n\n  return React.createElement(Form, __assign({}, rest), React.createElement(Component, {\n    className: className,\n    sx: sx\n  }, React.createElement(Stack, __assign({\n    alignItems: \"flex-start\"\n  }, sanitizeRestProps(props)), children)), toolbar !== false ? toolbar : null);\n};\nSimpleForm.propTypes = {\n  children: PropTypes.node,\n  defaultValues: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n  // @ts-ignore\n  record: PropTypes.object,\n  toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.oneOf([false])]),\n  validate: PropTypes.func\n};\nvar PREFIX = 'RaSimpleForm';\nvar DefaultComponent = styled(CardContent, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {}, _b[theme.breakpoints.down('sm')] = {\n    paddingBottom: '5em'\n  }, _b;\n});\nvar DefaultToolbar = React.createElement(Toolbar, null);\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\nvar sanitizeRestProps = function (_a) {\n  var children = _a.children,\n      className = _a.className,\n      component = _a.component,\n      criteriaMode = _a.criteriaMode,\n      defaultValues = _a.defaultValues,\n      delayError = _a.delayError,\n      onSubmit = _a.onSubmit,\n      record = _a.record,\n      resource = _a.resource,\n      reValidateMode = _a.reValidateMode,\n      sx = _a.sx,\n      toolbar = _a.toolbar,\n      validate = _a.validate,\n      resetOptions = _a.resetOptions,\n      resolver = _a.resolver,\n      sanitizeEmptyValues = _a.sanitizeEmptyValues,\n      shouldFocusError = _a.shouldFocusError,\n      shouldUnregister = _a.shouldUnregister,\n      shouldUseNativeValidation = _a.shouldUseNativeValidation,\n      warnWhenUnsavedChanges = _a.warnWhenUnsavedChanges,\n      props = __rest(_a, [\"children\", \"className\", \"component\", \"criteriaMode\", \"defaultValues\", \"delayError\", \"onSubmit\", \"record\", \"resource\", \"reValidateMode\", \"sx\", \"toolbar\", \"validate\", \"resetOptions\", \"resolver\", \"sanitizeEmptyValues\", \"shouldFocusError\", \"shouldUnregister\", \"shouldUseNativeValidation\", \"warnWhenUnsavedChanges\"]);\n\n  return props;\n};\n/* eslint-enable @typescript-eslint/no-unused-vars */","map":{"version":3,"mappings":"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","names":["React","PropTypes","Form","Stack","CardContent","styled","Toolbar","SimpleForm","props","className","_a","Component","DefaultComponent","sx","_b","toolbar","DefaultToolbar","rest","__assign","alignItems","sanitizeRestProps","children","propTypes","node","defaultValues","oneOfType","object","func","record","element","oneOf","validate","PREFIX","name","overridesResolver","styles","root","theme","breakpoints","down","paddingBottom","component","criteriaMode","delayError","onSubmit","resource","reValidateMode","resetOptions","resolver","sanitizeEmptyValues","shouldFocusError","shouldUnregister","shouldUseNativeValidation","warnWhenUnsavedChanges"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/form/SimpleForm.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, FormProps } from 'ra-core';\nimport { Stack, CardContent, SxProps, StackProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nimport { Toolbar } from './Toolbar';\n\n/**\n * Form with a one column layout, one input per line.\n *\n * Pass input components as children.\n *\n * @example\n *\n * import * as React from \"react\";\n * import { Create, Edit, SimpleForm, TextInput, DateInput, ReferenceManyField, Datagrid, TextField, DateField, EditButton } from 'react-admin';\n * import RichTextInput from 'ra-input-rich-text';\n *\n * export const PostCreate = (props) => (\n *     <Create {...props}>\n *         <SimpleForm>\n *             <TextInput source=\"title\" />\n *             <TextInput source=\"teaser\" options={{ multiline: true }} />\n *             <RichTextInput source=\"body\" />\n *             <DateInput label=\"Publication date\" source=\"published_at\" defaultValue={new Date()} />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by Create or Edit)\n * @prop {ReactElement[]} children Input elements\n * @prop {Object} defaultValues\n * @prop {Function} validate\n * @prop {ReactElement} toolbar The element displayed at the bottom of the form, containing the SaveButton\n *\n * @param {Props} props\n */\nexport const SimpleForm = (props: SimpleFormProps) => {\n    const {\n        children,\n        className,\n        component: Component = DefaultComponent,\n        sx,\n        toolbar = DefaultToolbar,\n        ...rest\n    } = props;\n    return (\n        <Form {...rest}>\n            <Component className={className} sx={sx}>\n                <Stack alignItems=\"flex-start\" {...sanitizeRestProps(props)}>\n                    {children}\n                </Stack>\n            </Component>\n            {toolbar !== false ? toolbar : null}\n        </Form>\n    );\n};\n\nSimpleForm.propTypes = {\n    children: PropTypes.node,\n    defaultValues: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    // @ts-ignore\n    record: PropTypes.object,\n    toolbar: PropTypes.oneOfType([PropTypes.element, PropTypes.oneOf([false])]),\n    validate: PropTypes.func,\n};\n\nexport interface SimpleFormProps\n    extends Omit<FormProps, 'render'>,\n        Omit<StackProps, 'onSubmit'> {\n    children: ReactNode;\n    className?: string;\n    component?: React.ComponentType<any>;\n    defaultValues?: any;\n    toolbar?: ReactElement | false;\n    sx?: SxProps;\n}\n\nconst PREFIX = 'RaSimpleForm';\n\nconst DefaultComponent = styled(CardContent, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [theme.breakpoints.down('sm')]: {\n        paddingBottom: '5em',\n    },\n}));\n\nconst DefaultToolbar = <Toolbar />;\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nconst sanitizeRestProps = ({\n    children,\n    className,\n    component,\n    criteriaMode,\n    defaultValues,\n    delayError,\n    onSubmit,\n    record,\n    resource,\n    reValidateMode,\n    sx,\n    toolbar,\n    validate,\n    resetOptions,\n    resolver,\n    sanitizeEmptyValues,\n    shouldFocusError,\n    shouldUnregister,\n    shouldUseNativeValidation,\n    warnWhenUnsavedChanges,\n    ...props\n}: SimpleFormProps) => props;\n/* eslint-enable @typescript-eslint/no-unused-vars */\n"]},"metadata":{},"sourceType":"module"}