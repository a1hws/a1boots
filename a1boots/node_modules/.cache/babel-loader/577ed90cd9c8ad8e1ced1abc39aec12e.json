{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useCallback, useMemo, useState, useRef, useEffect } from 'react';\nimport lodashDebounce from 'lodash/debounce';\nimport removeEmpty from '../../util/removeEmpty';\nimport { queryReducer, HIDE_FILTER, SET_FILTER, SET_PAGE, SET_PER_PAGE, SET_SORT, SHOW_FILTER, SORT_ASC } from '../list';\n/**\n * Get the reference inputs parameters (page, sort, filters) and modifiers.\n *\n * @returns {Array} A tuple [parameters, modifiers].\n * Destructure as [\n *    { page, perPage, sort, order, filter, filterValues, displayedFilters, requestSignature },\n *    { setFilters, hideFilter, showFilter, setPage, setPerPage, setSort }\n * ]\n *\n * @example\n *\n * const [referenceParams, referenceParamsActions] = useReferenceParams({\n *      resource: 'posts',\n *      filterDefaultValues: {\n *          published: true\n *      },\n *      sort: {\n *          field: 'published_at',\n *          order: 'DESC'\n *      },\n *      perPage: 25\n * });\n *\n * const {\n *      page,\n *      perPage,\n *      sort,\n *      order,\n *      filter,\n *      filterValues,\n *      displayedFilters,\n *      requestSignature\n * } = referenceParams;\n *\n * const {\n *      setFilters,\n *      hideFilter,\n *      showFilter,\n *      setPage,\n *      setPerPage,\n *      setSort,\n * } = referenceParamsActions;\n */\n\nexport var useReferenceParams = function (_a) {\n  var resource = _a.resource,\n      filter = _a.filter,\n      _b = _a.sort,\n      sort = _b === void 0 ? defaultSort : _b,\n      _c = _a.page,\n      page = _c === void 0 ? 1 : _c,\n      _d = _a.perPage,\n      perPage = _d === void 0 ? 10 : _d,\n      _e = _a.debounce,\n      debounce = _e === void 0 ? 500 : _e;\n\n  var _f = useState(defaultParams),\n      params = _f[0],\n      setParams = _f[1];\n\n  var tempParams = useRef();\n  var requestSignature = [resource, JSON.stringify(params), JSON.stringify(filter), JSON.stringify(sort), page, perPage];\n  var query = useMemo(function () {\n    return getQuery({\n      params: params,\n      filterDefaultValues: filter,\n      sort: sort,\n      page: page,\n      perPage: perPage\n    });\n  }, requestSignature // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var changeParams = useCallback(function (action) {\n    if (!tempParams.current) {\n      // no other changeParams action dispatched this tick\n      tempParams.current = queryReducer(query, action); // schedule side effects for next tick\n\n      setTimeout(function () {\n        setParams(tempParams.current);\n        tempParams.current = undefined;\n      }, 0);\n    } else {\n      // side effects already scheduled, just change the params\n      tempParams.current = queryReducer(tempParams.current, action);\n    }\n  }, requestSignature); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var setSort = useCallback(function (sort) {\n    return changeParams({\n      type: SET_SORT,\n      payload: sort\n    });\n  }, requestSignature // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var setPage = useCallback(function (newPage) {\n    return changeParams({\n      type: SET_PAGE,\n      payload: newPage\n    });\n  }, requestSignature // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var setPerPage = useCallback(function (newPerPage) {\n    return changeParams({\n      type: SET_PER_PAGE,\n      payload: newPerPage\n    });\n  }, requestSignature // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var filterValues = query.filter || emptyObject;\n  var displayedFilterValues = query.displayedFilters || emptyObject;\n  var debouncedSetFilters = useRef(lodashDebounce(function (filter, displayedFilters) {\n    changeParams({\n      type: SET_FILTER,\n      payload: {\n        filter: removeEmpty(filter),\n        displayedFilters: displayedFilters\n      }\n    });\n  }, debounce));\n  useEffect(function () {\n    return function () {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      debouncedSetFilters.current.cancel();\n    };\n  }, []);\n  var setFilters = useCallback(function (filter, displayedFilters, debounce) {\n    if (debounce === void 0) {\n      debounce = true;\n    }\n\n    debounce ? debouncedSetFilters.current(filter, displayedFilters) : changeParams({\n      type: SET_FILTER,\n      payload: {\n        filter: removeEmpty(filter),\n        displayedFilters: displayedFilters\n      }\n    });\n  }, requestSignature // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var hideFilter = useCallback(function (filterName) {\n    changeParams({\n      type: HIDE_FILTER,\n      payload: filterName\n    });\n  }, requestSignature); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var showFilter = useCallback(function (filterName, defaultValue) {\n    changeParams({\n      type: SHOW_FILTER,\n      payload: {\n        filterName: filterName,\n        defaultValue: defaultValue\n      }\n    });\n  }, requestSignature); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return [__assign({\n    displayedFilters: displayedFilterValues,\n    filterValues: filterValues,\n    requestSignature: requestSignature\n  }, query), {\n    changeParams: changeParams,\n    setPage: setPage,\n    setPerPage: setPerPage,\n    setSort: setSort,\n    setFilters: setFilters,\n    hideFilter: hideFilter,\n    showFilter: showFilter\n  }];\n};\nexport var validQueryParams = ['page', 'perPage', 'sort', 'order', 'filter', 'displayedFilters'];\n/**\n * Merge list params from 2 different sources:\n *   - the params stored in the local state\n *   - the props passed to the List component (including the filter defaultValues)\n */\n\nexport var getQuery = function (_a) {\n  var params = _a.params,\n      filterDefaultValues = _a.filterDefaultValues,\n      sort = _a.sort,\n      page = _a.page,\n      perPage = _a.perPage;\n  var query = hasCustomParams(params) ? __assign({}, params) : {\n    filter: filterDefaultValues || {}\n  };\n\n  if (!query.sort) {\n    query.sort = sort.field;\n    query.order = sort.order;\n  }\n\n  if (query.page == null) {\n    query.page = page;\n  }\n\n  if (query.perPage == null) {\n    query.perPage = perPage;\n  }\n\n  if (query.page == null) {\n    query.page = 1;\n  }\n\n  return __assign(__assign({}, query), {\n    page: getNumberOrDefault(query.page, 1),\n    perPage: getNumberOrDefault(query.perPage, 10)\n  });\n};\n/**\n * Check if user has already set custom sort, page, or filters for this list\n *\n * User params come from the Redux store as the params props. By default,\n * this object is:\n *\n * { filter: {}, order: null, page: 1, perPage: null, sort: null }\n *\n * To check if the user has custom params, we must compare the params\n * to these initial values.\n *\n * @param {Object} params\n */\n\nexport var hasCustomParams = function (params) {\n  return params && params.filter && (Object.keys(params.filter).length > 0 || params.order != null || params.page !== 1 || params.perPage != null || params.sort != null);\n};\nexport var getNumberOrDefault = function (possibleNumber, defaultValue) {\n  var parsedNumber = typeof possibleNumber === 'string' ? parseInt(possibleNumber, 10) : possibleNumber;\n  return isNaN(parsedNumber) ? defaultValue : parsedNumber;\n};\nvar emptyObject = {};\nvar defaultSort = {\n  field: 'id',\n  order: SORT_ASC\n};\nvar defaultParams = {};","map":{"version":3,"mappings":"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","names":["useCallback","useMemo","useState","useRef","useEffect","lodashDebounce","removeEmpty","queryReducer","HIDE_FILTER","SET_FILTER","SET_PAGE","SET_PER_PAGE","SET_SORT","SHOW_FILTER","SORT_ASC","useReferenceParams","_a","resource","filter","_b","sort","defaultSort","_c","page","_d","perPage","_e","debounce","defaultParams","params","setParams","tempParams","requestSignature","JSON","stringify","query","filterDefaultValues","changeParams","current","action","setTimeout","undefined","setSort","type","payload","setPage","newPage","setPerPage","newPerPage","filterValues","emptyObject","displayedFilterValues","displayedFilters","debouncedSetFilters","cancel","setFilters","hideFilter","filterName","showFilter","defaultValue","validQueryParams","getQuery","hasCustomParams","__assign","field","order","getNumberOrDefault","Object","keys","length","possibleNumber","parsedNumber","parseInt","isNaN"],"sources":["/var/www/a1boots/node_modules/ra-core/src/controller/input/useReferenceParams.ts"],"sourcesContent":["import { useCallback, useMemo, useState, useRef, useEffect } from 'react';\nimport lodashDebounce from 'lodash/debounce';\n\nimport { SortPayload, FilterPayload } from '../../types';\nimport removeEmpty from '../../util/removeEmpty';\nimport {\n    queryReducer,\n    HIDE_FILTER,\n    SET_FILTER,\n    SET_PAGE,\n    SET_PER_PAGE,\n    SET_SORT,\n    SHOW_FILTER,\n    SORT_ASC,\n} from '../list';\n\n/**\n * Get the reference inputs parameters (page, sort, filters) and modifiers.\n *\n * @returns {Array} A tuple [parameters, modifiers].\n * Destructure as [\n *    { page, perPage, sort, order, filter, filterValues, displayedFilters, requestSignature },\n *    { setFilters, hideFilter, showFilter, setPage, setPerPage, setSort }\n * ]\n *\n * @example\n *\n * const [referenceParams, referenceParamsActions] = useReferenceParams({\n *      resource: 'posts',\n *      filterDefaultValues: {\n *          published: true\n *      },\n *      sort: {\n *          field: 'published_at',\n *          order: 'DESC'\n *      },\n *      perPage: 25\n * });\n *\n * const {\n *      page,\n *      perPage,\n *      sort,\n *      order,\n *      filter,\n *      filterValues,\n *      displayedFilters,\n *      requestSignature\n * } = referenceParams;\n *\n * const {\n *      setFilters,\n *      hideFilter,\n *      showFilter,\n *      setPage,\n *      setPerPage,\n *      setSort,\n * } = referenceParamsActions;\n */\nexport const useReferenceParams = ({\n    resource,\n    filter,\n    sort = defaultSort,\n    page = 1,\n    perPage = 10,\n    debounce = 500,\n}: ReferenceParamsOptions): [Parameters, Modifiers] => {\n    const [params, setParams] = useState(defaultParams);\n    const tempParams = useRef<ReferenceParams>();\n\n    const requestSignature = [\n        resource,\n        JSON.stringify(params),\n        JSON.stringify(filter),\n        JSON.stringify(sort),\n        page,\n        perPage,\n    ];\n\n    const query = useMemo(\n        () =>\n            getQuery({\n                params: params,\n                filterDefaultValues: filter,\n                sort,\n                page,\n                perPage,\n            }),\n        requestSignature // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    const changeParams = useCallback(action => {\n        if (!tempParams.current) {\n            // no other changeParams action dispatched this tick\n            tempParams.current = queryReducer(query, action);\n            // schedule side effects for next tick\n            setTimeout(() => {\n                setParams(tempParams.current);\n                tempParams.current = undefined;\n            }, 0);\n        } else {\n            // side effects already scheduled, just change the params\n            tempParams.current = queryReducer(tempParams.current, action);\n        }\n    }, requestSignature); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const setSort = useCallback(\n        (sort: SortPayload) =>\n            changeParams({\n                type: SET_SORT,\n                payload: sort,\n            }),\n        requestSignature // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    const setPage = useCallback(\n        (newPage: number) => changeParams({ type: SET_PAGE, payload: newPage }),\n        requestSignature // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    const setPerPage = useCallback(\n        (newPerPage: number) =>\n            changeParams({ type: SET_PER_PAGE, payload: newPerPage }),\n        requestSignature // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    const filterValues = query.filter || emptyObject;\n    const displayedFilterValues = query.displayedFilters || emptyObject;\n\n    const debouncedSetFilters = useRef(\n        lodashDebounce((filter, displayedFilters) => {\n            changeParams({\n                type: SET_FILTER,\n                payload: {\n                    filter: removeEmpty(filter),\n                    displayedFilters,\n                },\n            });\n        }, debounce)\n    );\n    useEffect(() => {\n        return () => {\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            debouncedSetFilters.current.cancel();\n        };\n    }, []);\n\n    const setFilters = useCallback(\n        (filter, displayedFilters, debounce = true) => {\n            debounce\n                ? debouncedSetFilters.current(filter, displayedFilters)\n                : changeParams({\n                      type: SET_FILTER,\n                      payload: {\n                          filter: removeEmpty(filter),\n                          displayedFilters,\n                      },\n                  });\n        },\n        requestSignature // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    const hideFilter = useCallback((filterName: string) => {\n        changeParams({\n            type: HIDE_FILTER,\n            payload: filterName,\n        });\n    }, requestSignature); // eslint-disable-line react-hooks/exhaustive-deps\n\n    const showFilter = useCallback((filterName: string, defaultValue: any) => {\n        changeParams({\n            type: SHOW_FILTER,\n            payload: {\n                filterName,\n                defaultValue,\n            },\n        });\n    }, requestSignature); // eslint-disable-line react-hooks/exhaustive-deps\n    return [\n        {\n            displayedFilters: displayedFilterValues,\n            filterValues,\n            requestSignature,\n            ...query,\n        },\n        {\n            changeParams,\n            setPage,\n            setPerPage,\n            setSort,\n            setFilters,\n            hideFilter,\n            showFilter,\n        },\n    ];\n};\n\nexport const validQueryParams = [\n    'page',\n    'perPage',\n    'sort',\n    'order',\n    'filter',\n    'displayedFilters',\n];\n\n/**\n * Merge list params from 2 different sources:\n *   - the params stored in the local state\n *   - the props passed to the List component (including the filter defaultValues)\n */\nexport const getQuery = ({\n    params,\n    filterDefaultValues,\n    sort,\n    page,\n    perPage,\n}) => {\n    const query: Partial<ReferenceParams> = hasCustomParams(params)\n        ? { ...params }\n        : { filter: filterDefaultValues || {} };\n\n    if (!query.sort) {\n        query.sort = sort.field;\n        query.order = sort.order;\n    }\n    if (query.page == null) {\n        query.page = page;\n    }\n    if (query.perPage == null) {\n        query.perPage = perPage;\n    }\n    if (query.page == null) {\n        query.page = 1;\n    }\n\n    return {\n        ...query,\n        page: getNumberOrDefault(query.page, 1),\n        perPage: getNumberOrDefault(query.perPage, 10),\n    } as ReferenceParams;\n};\n\n/**\n * Check if user has already set custom sort, page, or filters for this list\n *\n * User params come from the Redux store as the params props. By default,\n * this object is:\n *\n * { filter: {}, order: null, page: 1, perPage: null, sort: null }\n *\n * To check if the user has custom params, we must compare the params\n * to these initial values.\n *\n * @param {Object} params\n */\nexport const hasCustomParams = (params: ReferenceParams) => {\n    return (\n        params &&\n        params.filter &&\n        (Object.keys(params.filter).length > 0 ||\n            params.order != null ||\n            params.page !== 1 ||\n            params.perPage != null ||\n            params.sort != null)\n    );\n};\n\nexport const getNumberOrDefault = (\n    possibleNumber: string | number | undefined,\n    defaultValue: number\n) => {\n    const parsedNumber =\n        typeof possibleNumber === 'string'\n            ? parseInt(possibleNumber, 10)\n            : possibleNumber;\n\n    return isNaN(parsedNumber) ? defaultValue : parsedNumber;\n};\n\nexport interface ReferenceParamsOptions {\n    resource: string;\n    page?: number;\n    perPage?: number;\n    sort?: SortPayload;\n    // default value for a filter when displayed but not yet set\n    filter?: FilterPayload;\n    debounce?: number;\n}\n\nexport interface ReferenceParams {\n    sort: string;\n    order: string;\n    page: number;\n    perPage: number;\n    filter: any;\n    displayedFilters: any;\n}\n\ninterface Parameters extends ReferenceParams {\n    filterValues: object;\n    displayedFilters: {\n        [key: string]: boolean;\n    };\n    requestSignature: any[];\n}\n\ninterface Modifiers {\n    changeParams: (action: any) => void;\n    setPage: (page: number) => void;\n    setPerPage: (pageSize: number) => void;\n    setSort: (sort: SortPayload) => void;\n    setFilters: (filters: any, displayedFilters: any) => void;\n    hideFilter: (filterName: string) => void;\n    showFilter: (filterName: string, defaultValue: any) => void;\n}\n\nconst emptyObject = {};\n\nconst defaultSort = {\n    field: 'id',\n    order: SORT_ASC,\n};\n\nconst defaultParams = {};\n"]},"metadata":{},"sourceType":"module"}