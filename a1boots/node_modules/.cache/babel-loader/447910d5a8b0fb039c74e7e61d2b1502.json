{"ast":null,"code":"import * as React from 'react';\nimport { isValidElement } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { ResourceContextProvider } from './ResourceContextProvider';\nexport var Resource = function (props) {\n  var Create = props.create,\n      Edit = props.edit,\n      List = props.list,\n      name = props.name,\n      Show = props.show;\n  return React.createElement(ResourceContextProvider, {\n    value: name\n  }, React.createElement(Routes, null, Create && React.createElement(Route, {\n    path: \"create/*\",\n    element: isValidElement(Create) ? Create : React.createElement(Create, null)\n  }), Show && React.createElement(Route, {\n    path: \":id/show/*\",\n    element: isValidElement(Show) ? Show : React.createElement(Show, null)\n  }), Edit && React.createElement(Route, {\n    path: \":id/*\",\n    element: isValidElement(Edit) ? Edit : React.createElement(Edit, null)\n  }), List && React.createElement(Route, {\n    path: \"/*\",\n    element: isValidElement(List) ? List : React.createElement(List, null)\n  }), props.children));\n};\nResource.raName = 'Resource';\n\nResource.registerResource = function (_a) {\n  var create = _a.create,\n      edit = _a.edit,\n      icon = _a.icon,\n      list = _a.list,\n      name = _a.name,\n      options = _a.options,\n      show = _a.show,\n      recordRepresentation = _a.recordRepresentation,\n      hasCreate = _a.hasCreate,\n      hasEdit = _a.hasEdit,\n      hasShow = _a.hasShow;\n  return {\n    name: name,\n    options: options,\n    hasList: !!list,\n    hasCreate: !!create || !!hasCreate,\n    hasEdit: !!edit || !!hasEdit,\n    hasShow: !!show || !!hasShow,\n    icon: icon,\n    recordRepresentation: recordRepresentation\n  };\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AAGA,SAASC,uBAAT,QAAwC,2BAAxC;AAEA,OAAO,IAAMC,QAAQ,GAAG,UAACC,KAAD,EAAqB;EACjC,IAAQC,MAAM,GAA+CD,KAAK,OAAlE;EAAA,IAAsBE,IAAI,GAAmCF,KAAK,KAAlE;EAAA,IAAkCG,IAAI,GAAuBH,KAAK,KAAlE;EAAA,IAAwCI,IAAI,GAAiBJ,KAAK,KAAlE;EAAA,IAAoDK,IAAI,GAAKL,KAAK,KAAlE;EAER,OACIN,oBAACI,uBAAD,EAAwB;IAACQ,KAAK,EAAEF;EAAR,CAAxB,EACIV,oBAACG,MAAD,EAAO,IAAP,EACKI,MAAM,IACHP,oBAACE,KAAD,EAAM;IACFW,IAAI,EAAC,UADH;IAEFC,OAAO,EAAEb,cAAc,CAACM,MAAD,CAAd,GAAyBA,MAAzB,GAAkCP,oBAACO,MAAD,EAAO,IAAP;EAFzC,CAAN,CAFR,EAOKI,IAAI,IACDX,oBAACE,KAAD,EAAM;IACFW,IAAI,EAAC,YADH;IAEFC,OAAO,EAAEb,cAAc,CAACU,IAAD,CAAd,GAAuBA,IAAvB,GAA8BX,oBAACW,IAAD,EAAK,IAAL;EAFrC,CAAN,CARR,EAaKH,IAAI,IACDR,oBAACE,KAAD,EAAM;IACFW,IAAI,EAAC,OADH;IAEFC,OAAO,EAAEb,cAAc,CAACO,IAAD,CAAd,GAAuBA,IAAvB,GAA8BR,oBAACQ,IAAD,EAAK,IAAL;EAFrC,CAAN,CAdR,EAmBKC,IAAI,IACDT,oBAACE,KAAD,EAAM;IACFW,IAAI,EAAC,IADH;IAEFC,OAAO,EAAEb,cAAc,CAACQ,IAAD,CAAd,GAAuBA,IAAvB,GAA8BT,oBAACS,IAAD,EAAK,IAAL;EAFrC,CAAN,CApBR,EAyBKH,KAAK,CAACS,QAzBX,CADJ,CADJ;AA+BH,CAlCM;AAoCPV,QAAQ,CAACW,MAAT,GAAkB,UAAlB;;AAEAX,QAAQ,CAACY,gBAAT,GAA4B,UAACC,EAAD,EAYZ;MAXZC,MAAM;MACNC,IAAI;MACJC,IAAI;MACJC,IAAI;MACJZ,IAAI;MACJa,OAAO;MACPC,IAAI;MACJC,oBAAoB;MACpBC,SAAS;MACTC,OAAO;MACPC,OAAO;EACU,OAAC;IAClBlB,IAAI,MADc;IAElBa,OAAO,SAFW;IAGlBM,OAAO,EAAE,CAAC,CAACP,IAHO;IAIlBI,SAAS,EAAE,CAAC,CAACP,MAAF,IAAY,CAAC,CAACO,SAJP;IAKlBC,OAAO,EAAE,CAAC,CAACP,IAAF,IAAU,CAAC,CAACO,OALH;IAMlBC,OAAO,EAAE,CAAC,CAACJ,IAAF,IAAU,CAAC,CAACI,OANH;IAOlBP,IAAI,MAPc;IAQlBI,oBAAoB;EARF,CAAD;AASnB,CArBF","names":["React","isValidElement","Route","Routes","ResourceContextProvider","Resource","props","Create","Edit","List","name","Show","value","path","element","children","raName","registerResource","_a","create","edit","icon","list","options","show","recordRepresentation","hasCreate","hasEdit","hasShow","hasList"],"sources":["/var/www/a1boots/node_modules/ra-core/src/core/Resource.tsx"],"sourcesContent":["import * as React from 'react';\nimport { isValidElement } from 'react';\nimport { Route, Routes } from 'react-router-dom';\n\nimport { ResourceProps } from '../types';\nimport { ResourceContextProvider } from './ResourceContextProvider';\n\nexport const Resource = (props: ResourceProps) => {\n    const { create: Create, edit: Edit, list: List, name, show: Show } = props;\n\n    return (\n        <ResourceContextProvider value={name}>\n            <Routes>\n                {Create && (\n                    <Route\n                        path=\"create/*\"\n                        element={isValidElement(Create) ? Create : <Create />}\n                    />\n                )}\n                {Show && (\n                    <Route\n                        path=\":id/show/*\"\n                        element={isValidElement(Show) ? Show : <Show />}\n                    />\n                )}\n                {Edit && (\n                    <Route\n                        path=\":id/*\"\n                        element={isValidElement(Edit) ? Edit : <Edit />}\n                    />\n                )}\n                {List && (\n                    <Route\n                        path=\"/*\"\n                        element={isValidElement(List) ? List : <List />}\n                    />\n                )}\n                {props.children}\n            </Routes>\n        </ResourceContextProvider>\n    );\n};\n\nResource.raName = 'Resource';\n\nResource.registerResource = ({\n    create,\n    edit,\n    icon,\n    list,\n    name,\n    options,\n    show,\n    recordRepresentation,\n    hasCreate,\n    hasEdit,\n    hasShow,\n}: ResourceProps) => ({\n    name,\n    options,\n    hasList: !!list,\n    hasCreate: !!create || !!hasCreate,\n    hasEdit: !!edit || !!hasEdit,\n    hasShow: !!show || !!hasShow,\n    icon,\n    recordRepresentation,\n});\n"]},"metadata":{},"sourceType":"module"}