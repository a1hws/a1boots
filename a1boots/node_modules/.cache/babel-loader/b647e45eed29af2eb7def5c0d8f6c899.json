{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '@mui/icons-material/GetApp';\nimport { fetchRelatedRecords, useDataProvider, useNotify, useListContext, useResourceContext } from 'ra-core';\nimport { Button } from './Button';\nexport var ExportButton = function (props) {\n  var _a = props.maxResults,\n      maxResults = _a === void 0 ? 1000 : _a,\n      onClick = props.onClick,\n      _b = props.label,\n      label = _b === void 0 ? 'ra.action.export' : _b,\n      _c = props.icon,\n      icon = _c === void 0 ? defaultIcon : _c,\n      customExporter = props.exporter,\n      meta = props.meta,\n      rest = __rest(props, [\"maxResults\", \"onClick\", \"label\", \"icon\", \"exporter\", \"meta\"]);\n\n  var _d = useListContext(props),\n      filter = _d.filter,\n      filterValues = _d.filterValues,\n      sort = _d.sort,\n      exporterFromContext = _d.exporter,\n      total = _d.total;\n\n  var resource = useResourceContext(props);\n  var exporter = customExporter || exporterFromContext;\n  var dataProvider = useDataProvider();\n  var notify = useNotify();\n  var handleClick = useCallback(function (event) {\n    dataProvider.getList(resource, {\n      sort: sort,\n      filter: filter ? __assign(__assign({}, filterValues), filter) : filterValues,\n      pagination: {\n        page: 1,\n        perPage: maxResults\n      },\n      meta: meta\n    }).then(function (_a) {\n      var data = _a.data;\n      return exporter && exporter(data, fetchRelatedRecords(dataProvider), dataProvider, resource);\n    }).catch(function (error) {\n      console.error(error);\n      notify('ra.notification.http_error', {\n        type: 'error'\n      });\n    });\n\n    if (typeof onClick === 'function') {\n      onClick(event);\n    }\n  }, [dataProvider, exporter, filter, filterValues, maxResults, notify, onClick, resource, sort, meta]);\n  return React.createElement(Button, __assign({\n    onClick: handleClick,\n    label: label,\n    disabled: total === 0\n  }, sanitizeRestProps(rest)), icon);\n};\nvar defaultIcon = React.createElement(DownloadIcon, null);\n\nvar sanitizeRestProps = function (_a) {\n  var filterValues = _a.filterValues,\n      resource = _a.resource,\n      rest = __rest(_a, [\"filterValues\", \"resource\"]);\n\n  return rest;\n};\n\nExportButton.propTypes = {\n  exporter: PropTypes.func,\n  filterValues: PropTypes.object,\n  label: PropTypes.string,\n  maxResults: PropTypes.number,\n  resource: PropTypes.string,\n  sort: PropTypes.exact({\n    field: PropTypes.string,\n    order: PropTypes.string\n  }),\n  icon: PropTypes.element,\n  meta: PropTypes.any\n};","map":{"version":3,"mappings":"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","names":["React","useCallback","PropTypes","DownloadIcon","fetchRelatedRecords","useDataProvider","useNotify","useListContext","useResourceContext","Button","ExportButton","props","_a","onClick","_b","label","_c","icon","defaultIcon","customExporter","meta","rest","filter","filterValues","sort","exporterFromContext","total","resource","exporter","dataProvider","notify","handleClick","getList","__assign","pagination","page","perPage","maxResults","then","data","catch","console","error","type","event","disabled","sanitizeRestProps","propTypes","func","object","string","number","exact","field","order","element","any"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/button/ExportButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '@mui/icons-material/GetApp';\nimport {\n    fetchRelatedRecords,\n    useDataProvider,\n    useNotify,\n    useListContext,\n    SortPayload,\n    Exporter,\n    FilterPayload,\n    useResourceContext,\n} from 'ra-core';\nimport { Button, ButtonProps } from './Button';\n\nexport const ExportButton = (props: ExportButtonProps) => {\n    const {\n        maxResults = 1000,\n        onClick,\n        label = 'ra.action.export',\n        icon = defaultIcon,\n        exporter: customExporter,\n        meta,\n        ...rest\n    } = props;\n    const {\n        filter,\n        filterValues,\n        sort,\n        exporter: exporterFromContext,\n        total,\n    } = useListContext(props);\n    const resource = useResourceContext(props);\n    const exporter = customExporter || exporterFromContext;\n    const dataProvider = useDataProvider();\n    const notify = useNotify();\n    const handleClick = useCallback(\n        event => {\n            dataProvider\n                .getList(resource, {\n                    sort,\n                    filter: filter\n                        ? { ...filterValues, ...filter }\n                        : filterValues,\n                    pagination: { page: 1, perPage: maxResults },\n                    meta,\n                })\n                .then(\n                    ({ data }) =>\n                        exporter &&\n                        exporter(\n                            data,\n                            fetchRelatedRecords(dataProvider),\n                            dataProvider,\n                            resource\n                        )\n                )\n                .catch(error => {\n                    console.error(error);\n                    notify('ra.notification.http_error', { type: 'error' });\n                });\n            if (typeof onClick === 'function') {\n                onClick(event);\n            }\n        },\n        [\n            dataProvider,\n            exporter,\n            filter,\n            filterValues,\n            maxResults,\n            notify,\n            onClick,\n            resource,\n            sort,\n            meta,\n        ]\n    );\n\n    return (\n        <Button\n            onClick={handleClick}\n            label={label}\n            disabled={total === 0}\n            {...sanitizeRestProps(rest)}\n        >\n            {icon}\n        </Button>\n    );\n};\n\nconst defaultIcon = <DownloadIcon />;\n\nconst sanitizeRestProps = ({\n    filterValues,\n    resource,\n    ...rest\n}: Omit<\n    ExportButtonProps,\n    'sort' | 'maxResults' | 'label' | 'exporter' | 'meta'\n>) => rest;\n\ninterface Props {\n    exporter?: Exporter;\n    filterValues?: FilterPayload;\n    icon?: JSX.Element;\n    label?: string;\n    maxResults?: number;\n    onClick?: (e: Event) => void;\n    resource?: string;\n    sort?: SortPayload;\n    meta?: any;\n}\n\nexport type ExportButtonProps = Props & ButtonProps;\n\nExportButton.propTypes = {\n    exporter: PropTypes.func,\n    filterValues: PropTypes.object,\n    label: PropTypes.string,\n    maxResults: PropTypes.number,\n    resource: PropTypes.string,\n    sort: PropTypes.exact({\n        field: PropTypes.string,\n        order: PropTypes.string,\n    }),\n    icon: PropTypes.element,\n    meta: PropTypes.any,\n};\n"]},"metadata":{},"sourceType":"module"}