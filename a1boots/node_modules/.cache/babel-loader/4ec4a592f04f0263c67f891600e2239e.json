{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useRecordContext, useTranslate, usePreference } from 'ra-core';\nexport var PageTitle = function PageTitle(_a) {\n  var title = _a.title,\n      defaultTitle = _a.defaultTitle,\n      className = _a.className,\n      rest = __rest(_a, [\"title\", \"defaultTitle\", \"className\"]);\n\n  var titleFromPreferences = usePreference()[0];\n  var translate = useTranslate();\n  var record = useRecordContext();\n  return titleFromPreferences ? React.createElement(\"span\", __assign({\n    className: className\n  }, rest), translate(titleFromPreferences, __assign(__assign({}, record), {\n    _: titleFromPreferences\n  }))) : React.createElement(\"span\", {\n    className: className\n  }, !title ? React.createElement(\"span\", __assign({}, rest), defaultTitle) : typeof title === 'string' ? React.createElement(\"span\", __assign({}, rest), translate(title, {\n    _: title\n  })) : title);\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,YAA3B,EAAyCC,aAAzC,QAA8D,SAA9D;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAiD;EAA9C,SAAK,WAAL;EAAA,IAAOC,YAAY,kBAAnB;EAAA,IAAqBC,SAAS,eAA9B;EAAA,IAAmCC,IAAI,cAAzC,sCAAyC,CAAvC;;EACjB,wBAAoB,GAAIL,aAAa,GAAE,CAAF,CAArC;EACP,IAAMM,SAAS,GAAGP,YAAY,EAA9B;EACA,IAAMQ,MAAM,GAAGT,gBAAgB,EAA/B;EAEA,OAAOU,oBAAoB,GACvBX;IAAMO,SAAS,EAAEA;EAAjB,GAAgCC,IAAhC,GACKC,SAAS,CAACE,oBAAD,EAAqBC,sBACxBF,MADwB,GAClB;IACTG,CAAC,EAAEF;EADM,CADkB,CAArB,CADd,CADuB,GAQvBX;IAAMO,SAAS,EAAEA;EAAjB,GACK,CAACO,KAAD,GACGd,yCAAUQ,IAAV,GAAiBF,YAAjB,CADH,GAEG,OAAOQ,KAAP,KAAiB,QAAjB,GACAd,yCAAUQ,IAAV,GAAiBC,SAAS,CAACK,KAAD,EAAQ;IAAED,CAAC,EAAEC;EAAL,CAAR,CAA1B,CADA,GAGAA,KANR,CARJ;AAkBH,CAvBM","names":["React","useRecordContext","useTranslate","usePreference","PageTitle","_a","defaultTitle","className","rest","translate","record","titleFromPreferences","__assign","_","title"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/layout/PageTitle.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useRecordContext, useTranslate, usePreference } from 'ra-core';\n\nexport const PageTitle = ({ title, defaultTitle, className, ...rest }: any) => {\n    const [titleFromPreferences] = usePreference();\n    const translate = useTranslate();\n    const record = useRecordContext();\n\n    return titleFromPreferences ? (\n        <span className={className} {...rest}>\n            {translate(titleFromPreferences, {\n                ...record,\n                _: titleFromPreferences,\n            })}\n        </span>\n    ) : (\n        <span className={className}>\n            {!title ? (\n                <span {...rest}>{defaultTitle}</span>\n            ) : typeof title === 'string' ? (\n                <span {...rest}>{translate(title, { _: title })}</span>\n            ) : (\n                title\n            )}\n        </span>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}