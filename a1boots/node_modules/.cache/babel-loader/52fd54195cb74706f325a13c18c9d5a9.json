{"ast":null,"code":"import PropTypes from 'prop-types';\nexport var fieldPropTypes = {\n  sortBy: PropTypes.string,\n  sortByOrder: PropTypes.oneOf(['ASC', 'DESC']),\n  source: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element, PropTypes.bool]),\n  sortable: PropTypes.bool,\n  className: PropTypes.string,\n  cellClassName: PropTypes.string,\n  headerClassName: PropTypes.string,\n  textAlign: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n  emptyText: PropTypes.string\n};","map":{"version":3,"mappings":"AACA,OAAOA,SAAP,MAAsB,YAAtB;AAoEA,OAAO,IAAMC,cAAc,GAAG;EAC1BC,MAAM,EAAEF,SAAS,CAACG,MADQ;EAE1BC,WAAW,EAAEJ,SAAS,CAACK,KAAV,CAA2B,CAAC,KAAD,EAAQ,MAAR,CAA3B,CAFa;EAG1BC,MAAM,EAAEN,SAAS,CAACG,MAHQ;EAI1BI,KAAK,EAAEP,SAAS,CAACQ,SAAV,CAAoB,CACvBR,SAAS,CAACG,MADa,EAEvBH,SAAS,CAACS,OAFa,EAGvBT,SAAS,CAACU,IAHa,CAApB,CAJmB;EAS1BC,QAAQ,EAAEX,SAAS,CAACU,IATM;EAU1BE,SAAS,EAAEZ,SAAS,CAACG,MAVK;EAW1BU,aAAa,EAAEb,SAAS,CAACG,MAXC;EAY1BW,eAAe,EAAEd,SAAS,CAACG,MAZD;EAa1BY,SAAS,EAAEf,SAAS,CAACK,KAAV,CAA2B,CAClC,SADkC,EAElC,MAFkC,EAGlC,QAHkC,EAIlC,OAJkC,EAKlC,SALkC,CAA3B,CAbe;EAoB1BW,SAAS,EAAEhB,SAAS,CAACG;AApBK,CAAvB","names":["PropTypes","fieldPropTypes","sortBy","string","sortByOrder","oneOf","source","label","oneOfType","element","bool","sortable","className","cellClassName","headerClassName","textAlign","emptyText"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/field/types.ts"],"sourcesContent":["import { ReactElement } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableCellProps } from '@mui/material/TableCell';\nimport { Call, Objects } from 'hotscript';\n\ntype TextAlign = TableCellProps['align'];\ntype SortOrder = 'ASC' | 'DESC';\ntype AnyString = string & {};\n\nexport interface FieldProps<\n    RecordType extends Record<string, unknown> = Record<string, any>\n> {\n    sortBy?: Call<Objects.AllPaths, RecordType> | AnyString;\n    sortByOrder?: SortOrder;\n    source?: Call<Objects.AllPaths, RecordType> extends never\n        ? AnyString\n        : Call<Objects.AllPaths, RecordType>;\n    label?: string | ReactElement | boolean;\n    sortable?: boolean;\n    className?: string;\n    cellClassName?: string;\n    headerClassName?: string;\n    /*\n     * @deprecated this property is not used anymore\n     */\n    formClassName?: string;\n    textAlign?: TextAlign;\n    emptyText?: string;\n    fullWidth?: boolean;\n    record?: RecordType;\n    resource?: string;\n}\n\n/**\n * @deprecated use FieldProps instead\n */\nexport interface PublicFieldProps<\n    RecordType extends Record<string, unknown> = Record<string, any>,\n    SortByType = unknown\n> {\n    sortBy?: unknown extends SortByType\n        ? Call<Objects.AllPaths, RecordType>\n        : SortByType;\n    sortByOrder?: SortOrder;\n    source?: Call<Objects.AllPaths, RecordType>;\n    label?: string | ReactElement | boolean;\n    sortable?: boolean;\n    className?: string;\n    cellClassName?: string;\n    headerClassName?: string;\n    /*\n     * @deprecated this property is not used anymore\n     */\n    formClassName?: string;\n    textAlign?: TextAlign;\n    emptyText?: string;\n    fullWidth?: boolean;\n    record?: RecordType;\n    resource?: string;\n}\n\n/**\n * @deprecated use FieldProps instead\n */\nexport interface InjectedFieldProps<RecordType = any> {\n    record?: RecordType;\n    resource?: string;\n}\n\nexport const fieldPropTypes = {\n    sortBy: PropTypes.string,\n    sortByOrder: PropTypes.oneOf<SortOrder>(['ASC', 'DESC']),\n    source: PropTypes.string,\n    label: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.element,\n        PropTypes.bool,\n    ]),\n    sortable: PropTypes.bool,\n    className: PropTypes.string,\n    cellClassName: PropTypes.string,\n    headerClassName: PropTypes.string,\n    textAlign: PropTypes.oneOf<TextAlign>([\n        'inherit',\n        'left',\n        'center',\n        'right',\n        'justify',\n    ]),\n    emptyText: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}