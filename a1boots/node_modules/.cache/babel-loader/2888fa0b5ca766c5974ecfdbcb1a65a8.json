{"ast":null,"code":"import * as React from 'react';\nimport { useHandleAuthCallback, useTimeout } from 'ra-core';\nimport { Loading } from '..';\nimport { AuthError } from './AuthError';\n/**\n * A standalone page to be used in a route called by external authentication services (e.g. OAuth)\n * after the user has been authenticated.\n *\n * Copy and adapt this component to implement your own login logic\n * (e.g. to show a different waiting screen, start onboarding procedures, etc.).\n *\n * @example\n *     import MyAuthCallbackPage from './MyAuthCallbackPage';\n *     const App = () => (\n *         <Admin authCallbackPage={MyAuthCallbackPage} authProvider={authProvider}>\n *             ...\n *        </Admin>\n *     );\n */\n\nexport var AuthCallback = function () {\n  var error = useHandleAuthCallback().error;\n  var hasOneSecondPassed = useTimeout(1000);\n\n  if (error) {\n    return React.createElement(AuthError, {\n      message: error ? error.message : undefined\n    });\n  }\n\n  return hasOneSecondPassed ? React.createElement(Loading, null) : null;\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,qBAAT,EAAgCC,UAAhC,QAAkD,SAAlD;AACA,SAASC,OAAT,QAAwB,IAAxB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA;;;;;;;;;;;;;;;;AAeA,OAAO,IAAMC,YAAY,GAAG;EAChB,SAAK,GAAKJ,qBAAqB,GAAEK,KAAjC;EACR,IAAMC,kBAAkB,GAAGL,UAAU,CAAC,IAAD,CAArC;;EAEA,IAAII,KAAJ,EAAW;IACP,OACIN,oBAACI,SAAD,EAAU;MACNI,OAAO,EACFF,KAAe,GAAIA,KAAe,CAACE,OAApB,GAA8BC;IAF5C,CAAV,CADJ;EAOH;;EAED,OAAOF,kBAAkB,GAAGP,oBAACG,OAAD,EAAQ,IAAR,CAAH,GAAiB,IAA1C;AACH,CAfM","names":["React","useHandleAuthCallback","useTimeout","Loading","AuthError","AuthCallback","error","hasOneSecondPassed","message","undefined"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/auth/AuthCallback.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useHandleAuthCallback, useTimeout } from 'ra-core';\nimport { Loading } from '..';\nimport { AuthError } from './AuthError';\n\n/**\n * A standalone page to be used in a route called by external authentication services (e.g. OAuth)\n * after the user has been authenticated.\n *\n * Copy and adapt this component to implement your own login logic\n * (e.g. to show a different waiting screen, start onboarding procedures, etc.).\n *\n * @example\n *     import MyAuthCallbackPage from './MyAuthCallbackPage';\n *     const App = () => (\n *         <Admin authCallbackPage={MyAuthCallbackPage} authProvider={authProvider}>\n *             ...\n *        </Admin>\n *     );\n */\nexport const AuthCallback = () => {\n    const { error } = useHandleAuthCallback();\n    const hasOneSecondPassed = useTimeout(1000);\n\n    if (error) {\n        return (\n            <AuthError\n                message={\n                    (error as Error) ? (error as Error).message : undefined\n                }\n            />\n        );\n    }\n\n    return hasOneSecondPassed ? <Loading /> : null;\n};\n"]},"metadata":{},"sourceType":"module"}