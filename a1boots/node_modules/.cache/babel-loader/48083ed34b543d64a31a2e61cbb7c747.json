{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { useCallback } from 'react';\nimport { useDelete } from '../../dataProvider';\nimport { useUnselect } from '../../controller';\nimport { useRedirect } from '../../routing';\nimport { useNotify } from '../../notification';\nimport { useResourceContext } from '../../core';\n/**\n * Prepare callback for a Delete button with undo support\n *\n * @example\n *\n * import React from 'react';\n * import ActionDelete from '@mui/icons-material/Delete';\n * import { Button, useDeleteWithUndoController } from 'react-admin';\n *\n * const DeleteButton = ({\n *     resource,\n *     record,\n *     redirect,\n *     onClick,\n *     ...rest\n * }) => {\n *     const { isLoading, handleDelete } = useDeleteWithUndoController({\n *         resource,\n *         record,\n *         redirect,\n *         onClick,\n *     });\n *\n *     return (\n *         <Button\n *             onClick={handleDelete}\n *             disabled={isLoading}\n *             label=\"ra.action.delete\"\n *             {...rest}\n *         >\n *             <ActionDelete />\n *         </Button>\n *     );\n * };\n */\n\nvar useDeleteWithUndoController = function (props) {\n  var record = props.record,\n      _a = props.redirect,\n      redirectTo = _a === void 0 ? 'list' : _a,\n      onClick = props.onClick,\n      _b = props.mutationOptions,\n      mutationOptions = _b === void 0 ? {} : _b;\n\n  var mutationMeta = mutationOptions.meta,\n      otherMutationOptions = __rest(mutationOptions, [\"meta\"]);\n\n  var resource = useResourceContext(props);\n  var notify = useNotify();\n  var unselect = useUnselect(resource);\n  var redirect = useRedirect();\n\n  var _c = useDelete(),\n      deleteOne = _c[0],\n      isLoading = _c[1].isLoading;\n\n  var handleDelete = useCallback(function (event) {\n    event.stopPropagation();\n    deleteOne(resource, {\n      id: record.id,\n      previousData: record,\n      meta: mutationMeta\n    }, __assign({\n      onSuccess: function () {\n        notify('ra.notification.deleted', {\n          type: 'info',\n          messageArgs: {\n            smart_count: 1\n          },\n          undoable: true\n        });\n        unselect([record.id]);\n        redirect(redirectTo, resource);\n      },\n      onError: function (error) {\n        notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', {\n          type: 'error',\n          messageArgs: {\n            _: typeof error === 'string' ? error : error && error.message ? error.message : undefined\n          }\n        });\n      },\n      mutationMode: 'undoable'\n    }, otherMutationOptions));\n\n    if (typeof onClick === 'function') {\n      onClick(event);\n    }\n  }, [deleteOne, mutationMeta, otherMutationOptions, notify, onClick, record, redirect, redirectTo, resource, unselect]);\n  return {\n    isLoading: isLoading,\n    handleDelete: handleDelete\n  };\n};\n\nexport default useDeleteWithUndoController;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,WAAT,QAA+C,OAA/C;AAGA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAAmD,eAAnD;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,SAASC,kBAAT,QAAmC,YAAnC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,IAAMC,2BAA2B,GAAG,UAChCC,KADgC,EACoB;EAGhD,UAAM,GAINA,KAAK,OAJL;EAAA,IACAC,KAGAD,KAAK,SAJL;EAAA,IACUE,UAAU,mBAAG,MAAH,GAASD,EAD7B;EAAA,IAEAE,OAAO,GAEPH,KAAK,QAJL;EAAA,IAGAI,KACAJ,KAAK,gBAJL;EAAA,IAGAK,eAAe,mBAAG,EAAH,GAAKD,EAHpB;;EAKI,IAAME,YAAY,GAA8BD,eAAe,KAA/D;EAAA,IAAuBE,oBAAoB,UAAKF,eAAL,EAA7C,QAA6C,CAA3C;;EACR,IAAMG,QAAQ,GAAGV,kBAAkB,CAACE,KAAD,CAAnC;EACA,IAAMS,MAAM,GAAGZ,SAAS,EAAxB;EACA,IAAMa,QAAQ,GAAGf,WAAW,CAACa,QAAD,CAA5B;EACA,IAAMG,QAAQ,GAAGf,WAAW,EAA5B;;EACM,SAA6BF,SAAS,EAAtC;EAAA,IAACkB,SAAS,QAAV;EAAA,IAAcC,SAAS,kBAAvB;;EAEN,IAAMC,YAAY,GAAGrB,WAAW,CAC5B,iBAAK;IACDsB,KAAK,CAACC,eAAN;IACAJ,SAAS,CACLJ,QADK,EAEL;MACIS,EAAE,EAAEC,MAAM,CAACD,EADf;MAEIE,YAAY,EAAED,MAFlB;MAGIE,IAAI,EAAEd;IAHV,CAFK,EAMJe;MAEGC,SAAS,EAAE;QACPb,MAAM,CAAC,yBAAD,EAA4B;UAC9Bc,IAAI,EAAE,MADwB;UAE9BC,WAAW,EAAE;YAAEC,WAAW,EAAE;UAAf,CAFiB;UAG9BC,QAAQ,EAAE;QAHoB,CAA5B,CAAN;QAKAhB,QAAQ,CAAC,CAACQ,MAAM,CAACD,EAAR,CAAD,CAAR;QACAN,QAAQ,CAACT,UAAD,EAAaM,QAAb,CAAR;MACH,CAVJ;MAWGmB,OAAO,EAAE,UAACC,KAAD,EAAa;QAClBnB,MAAM,CACF,OAAOmB,KAAP,KAAiB,QAAjB,GACMA,KADN,GAEMA,KAAK,CAACC,OAAN,IAAiB,4BAHrB,EAIF;UACIN,IAAI,EAAE,OADV;UAEIC,WAAW,EAAE;YACTM,CAAC,EACG,OAAOF,KAAP,KAAiB,QAAjB,GACMA,KADN,GAEMA,KAAK,IAAIA,KAAK,CAACC,OAAf,GACAD,KAAK,CAACC,OADN,GAEAE;UAND;QAFjB,CAJE,CAAN;MAgBH,CA5BJ;MA6BGC,YAAY,EAAE;IA7BjB,GA8BMzB,oBA9BN,CANI,CAAT;;IAuCA,IAAI,OAAOJ,OAAP,KAAmB,UAAvB,EAAmC;MAC/BA,OAAO,CAACY,KAAD,CAAP;IACH;EACJ,CA7C2B,EA8C5B,CACIH,SADJ,EAEIN,YAFJ,EAGIC,oBAHJ,EAIIE,MAJJ,EAKIN,OALJ,EAMIe,MANJ,EAOIP,QAPJ,EAQIT,UARJ,EASIM,QATJ,EAUIE,QAVJ,CA9C4B,CAAhC;EA4DA,OAAO;IAAEG,SAAS,WAAX;IAAaC,YAAY;EAAzB,CAAP;AACH,CA7ED;;AAoGA,eAAef,2BAAf","names":["useCallback","useDelete","useUnselect","useRedirect","useNotify","useResourceContext","useDeleteWithUndoController","props","_a","redirectTo","onClick","_b","mutationOptions","mutationMeta","otherMutationOptions","resource","notify","unselect","redirect","deleteOne","isLoading","handleDelete","event","stopPropagation","id","record","previousData","meta","__assign","onSuccess","type","messageArgs","smart_count","undoable","onError","error","message","_","undefined","mutationMode"],"sources":["/var/www/a1boots/node_modules/ra-core/src/controller/button/useDeleteWithUndoController.tsx"],"sourcesContent":["import { useCallback, ReactEventHandler } from 'react';\nimport { UseMutationOptions } from 'react-query';\n\nimport { useDelete } from '../../dataProvider';\nimport { useUnselect } from '../../controller';\nimport { useRedirect, RedirectionSideEffect } from '../../routing';\nimport { useNotify } from '../../notification';\nimport { RaRecord, DeleteParams } from '../../types';\nimport { useResourceContext } from '../../core';\n\n/**\n * Prepare callback for a Delete button with undo support\n *\n * @example\n *\n * import React from 'react';\n * import ActionDelete from '@mui/icons-material/Delete';\n * import { Button, useDeleteWithUndoController } from 'react-admin';\n *\n * const DeleteButton = ({\n *     resource,\n *     record,\n *     redirect,\n *     onClick,\n *     ...rest\n * }) => {\n *     const { isLoading, handleDelete } = useDeleteWithUndoController({\n *         resource,\n *         record,\n *         redirect,\n *         onClick,\n *     });\n *\n *     return (\n *         <Button\n *             onClick={handleDelete}\n *             disabled={isLoading}\n *             label=\"ra.action.delete\"\n *             {...rest}\n *         >\n *             <ActionDelete />\n *         </Button>\n *     );\n * };\n */\nconst useDeleteWithUndoController = <RecordType extends RaRecord = any>(\n    props: UseDeleteWithUndoControllerParams<RecordType>\n): UseDeleteWithUndoControllerReturn => {\n    const {\n        record,\n        redirect: redirectTo = 'list',\n        onClick,\n        mutationOptions = {},\n    } = props;\n    const { meta: mutationMeta, ...otherMutationOptions } = mutationOptions;\n    const resource = useResourceContext(props);\n    const notify = useNotify();\n    const unselect = useUnselect(resource);\n    const redirect = useRedirect();\n    const [deleteOne, { isLoading }] = useDelete<RecordType>();\n\n    const handleDelete = useCallback(\n        event => {\n            event.stopPropagation();\n            deleteOne(\n                resource,\n                {\n                    id: record.id,\n                    previousData: record,\n                    meta: mutationMeta,\n                },\n                {\n                    onSuccess: () => {\n                        notify('ra.notification.deleted', {\n                            type: 'info',\n                            messageArgs: { smart_count: 1 },\n                            undoable: true,\n                        });\n                        unselect([record.id]);\n                        redirect(redirectTo, resource);\n                    },\n                    onError: (error: Error) => {\n                        notify(\n                            typeof error === 'string'\n                                ? error\n                                : error.message || 'ra.notification.http_error',\n                            {\n                                type: 'error',\n                                messageArgs: {\n                                    _:\n                                        typeof error === 'string'\n                                            ? error\n                                            : error && error.message\n                                            ? error.message\n                                            : undefined,\n                                },\n                            }\n                        );\n                    },\n                    mutationMode: 'undoable',\n                    ...otherMutationOptions,\n                }\n            );\n            if (typeof onClick === 'function') {\n                onClick(event);\n            }\n        },\n        [\n            deleteOne,\n            mutationMeta,\n            otherMutationOptions,\n            notify,\n            onClick,\n            record,\n            redirect,\n            redirectTo,\n            resource,\n            unselect,\n        ]\n    );\n\n    return { isLoading, handleDelete };\n};\n\nexport interface UseDeleteWithUndoControllerParams<\n    RecordType extends RaRecord = any,\n    MutationOptionsError = unknown\n> {\n    record?: RecordType;\n    redirect?: RedirectionSideEffect;\n    // @deprecated. This hook get the resource from the context\n    resource?: string;\n    onClick?: ReactEventHandler<any>;\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        MutationOptionsError,\n        DeleteParams<RecordType>\n    >;\n}\n\nexport interface UseDeleteWithUndoControllerReturn {\n    isLoading: boolean;\n    handleDelete: ReactEventHandler<any>;\n}\n\nexport default useDeleteWithUndoController;\n"]},"metadata":{},"sourceType":"module"}