{"ast":null,"code":"// https://github.com/gregberge/react-merge-refs\nexport function mergeRefs(refs) {\n  return function (value) {\n    refs.forEach(function (ref) {\n      if (typeof ref === 'function') {\n        ref(value);\n      } else if (ref != null) {\n        ref.current = value;\n      }\n    });\n  };\n}","map":{"version":3,"mappings":"AAEA;AACA,OAAM,SAAUA,SAAV,CACFC,IADE,EAC6C;EAE/C,OAAO,iBAAK;IACRA,IAAI,CAACC,OAAL,CAAa,eAAG;MACZ,IAAI,OAAOC,GAAP,KAAe,UAAnB,EAA+B;QAC3BA,GAAG,CAACC,KAAD,CAAH;MACH,CAFD,MAEO,IAAID,GAAG,IAAI,IAAX,EAAiB;QACnBA,GAAkC,CAACE,OAAnC,GAA6CD,KAA7C;MACJ;IACJ,CAND;EAOH,CARD;AASH","names":["mergeRefs","refs","forEach","ref","value","current"],"sources":["/var/www/a1boots/node_modules/ra-core/src/util/mergeRefs.ts"],"sourcesContent":["import { LegacyRef, MutableRefObject, RefCallback } from 'react';\n\n// https://github.com/gregberge/react-merge-refs\nexport function mergeRefs<T = any>(\n    refs: Array<MutableRefObject<T> | LegacyRef<T>>\n): RefCallback<T> {\n    return value => {\n        refs.forEach(ref => {\n            if (typeof ref === 'function') {\n                ref(value);\n            } else if (ref != null) {\n                (ref as MutableRefObject<T | null>).current = value;\n            }\n        });\n    };\n}\n"]},"metadata":{},"sourceType":"module"}