{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Avatar } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { useNavigate } from 'react-router-dom';\nimport { useCheckAuth } from 'ra-core';\nimport { LoginForm as DefaultLoginForm } from './LoginForm';\n/**\n * A standalone login page, to serve as authentication gate to the admin\n *\n * Expects the user to enter a login and a password, which will be checked\n * by the `authProvider.login()` method. Redirects to the root page (/)\n * upon success, otherwise displays an authentication error message.\n *\n * Copy and adapt this component to implement your own login logic\n * (e.g. to authenticate via email or facebook or anything else).\n *\n * @example\n *     import MyLoginPage from './MyLoginPage';\n *     const App = () => (\n *         <Admin loginPage={MyLoginPage} authProvider={authProvider}>\n *             ...\n *        </Admin>\n *     );\n */\n\nexport var Login = function Login(props) {\n  var children = props.children,\n      backgroundImage = props.backgroundImage,\n      rest = __rest(props, [\"children\", \"backgroundImage\"]);\n\n  var containerRef = useRef();\n  var backgroundImageLoaded = false;\n  var checkAuth = useCheckAuth();\n  var navigate = useNavigate();\n  useEffect(function () {\n    checkAuth({}, false).then(function () {\n      // already authenticated, redirect to the home page\n      navigate('/');\n    }).catch(function () {// not authenticated, stay on the login page\n    });\n  }, [checkAuth, navigate]);\n\n  var updateBackgroundImage = function updateBackgroundImage() {\n    if (!backgroundImageLoaded && containerRef.current) {\n      containerRef.current.style.backgroundImage = \"url(\".concat(backgroundImage, \")\");\n      backgroundImageLoaded = true;\n    }\n  }; // Load background image asynchronously to speed up time to interactive\n\n\n  var lazyLoadBackgroundImage = function lazyLoadBackgroundImage() {\n    if (backgroundImage) {\n      var img = new Image();\n      img.onload = updateBackgroundImage;\n      img.src = backgroundImage;\n    }\n  };\n\n  useEffect(function () {\n    if (!backgroundImageLoaded) {\n      lazyLoadBackgroundImage();\n    }\n  });\n  return React.createElement(Root, __assign({}, rest, {\n    ref: containerRef\n  }), React.createElement(Card, {\n    className: LoginClasses.card\n  }, React.createElement(\"div\", {\n    className: LoginClasses.avatar\n  }, React.createElement(Avatar, {\n    className: LoginClasses.icon\n  }, React.createElement(LockIcon, null))), children));\n};\nvar PREFIX = 'RaLogin';\nexport var LoginClasses = {\n  card: \"\".concat(PREFIX, \"-card\"),\n  avatar: \"\".concat(PREFIX, \"-avatar\"),\n  icon: \"\".concat(PREFIX, \"-icon\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    height: '1px',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundImage: 'radial-gradient(circle at 50% 14em, #313264 0%, #00023b 60%, #00023b 100%)'\n  }, _b[\"& .\".concat(LoginClasses.card)] = {\n    minWidth: 300,\n    marginTop: '6em'\n  }, _b[\"& .\".concat(LoginClasses.avatar)] = {\n    margin: '1em',\n    display: 'flex',\n    justifyContent: 'center'\n  }, _b[\"& .\".concat(LoginClasses.icon)] = {\n    backgroundColor: theme.palette.secondary[500]\n  }, _b;\n});\nLogin.propTypes = {\n  backgroundImage: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string\n};\nLogin.defaultProps = {\n  children: React.createElement(DefaultLoginForm, null)\n};","map":{"version":3,"mappings":"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","names":["React","useRef","useEffect","PropTypes","Card","Avatar","styled","LockIcon","useNavigate","useCheckAuth","LoginForm","DefaultLoginForm","Login","props","backgroundImage","rest","containerRef","backgroundImageLoaded","checkAuth","navigate","then","catch","updateBackgroundImage","current","style","lazyLoadBackgroundImage","img","Image","onload","src","Root","__assign","ref","className","LoginClasses","card","avatar","icon","children","PREFIX","name","overridesResolver","styles","root","_a","theme","display","flexDirection","minHeight","height","alignItems","justifyContent","backgroundRepeat","backgroundSize","_b","minWidth","marginTop","margin","backgroundColor","palette","secondary","propTypes","string","node","defaultProps"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/auth/Login.tsx"],"sourcesContent":["import * as React from 'react';\nimport { HtmlHTMLAttributes, ReactNode, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Avatar, SxProps } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { useNavigate } from 'react-router-dom';\nimport { useCheckAuth } from 'ra-core';\n\nimport { LoginForm as DefaultLoginForm } from './LoginForm';\n\n/**\n * A standalone login page, to serve as authentication gate to the admin\n *\n * Expects the user to enter a login and a password, which will be checked\n * by the `authProvider.login()` method. Redirects to the root page (/)\n * upon success, otherwise displays an authentication error message.\n *\n * Copy and adapt this component to implement your own login logic\n * (e.g. to authenticate via email or facebook or anything else).\n *\n * @example\n *     import MyLoginPage from './MyLoginPage';\n *     const App = () => (\n *         <Admin loginPage={MyLoginPage} authProvider={authProvider}>\n *             ...\n *        </Admin>\n *     );\n */\nexport const Login = (props: LoginProps) => {\n    const { children, backgroundImage, ...rest } = props;\n    const containerRef = useRef<HTMLDivElement>();\n    let backgroundImageLoaded = false;\n    const checkAuth = useCheckAuth();\n    const navigate = useNavigate();\n    useEffect(() => {\n        checkAuth({}, false)\n            .then(() => {\n                // already authenticated, redirect to the home page\n                navigate('/');\n            })\n            .catch(() => {\n                // not authenticated, stay on the login page\n            });\n    }, [checkAuth, navigate]);\n\n    const updateBackgroundImage = () => {\n        if (!backgroundImageLoaded && containerRef.current) {\n            containerRef.current.style.backgroundImage = `url(${backgroundImage})`;\n            backgroundImageLoaded = true;\n        }\n    };\n\n    // Load background image asynchronously to speed up time to interactive\n    const lazyLoadBackgroundImage = () => {\n        if (backgroundImage) {\n            const img = new Image();\n            img.onload = updateBackgroundImage;\n            img.src = backgroundImage;\n        }\n    };\n\n    useEffect(() => {\n        if (!backgroundImageLoaded) {\n            lazyLoadBackgroundImage();\n        }\n    });\n    return (\n        <Root {...rest} ref={containerRef}>\n            <Card className={LoginClasses.card}>\n                <div className={LoginClasses.avatar}>\n                    <Avatar className={LoginClasses.icon}>\n                        <LockIcon />\n                    </Avatar>\n                </div>\n                {children}\n            </Card>\n        </Root>\n    );\n};\n\nexport interface LoginProps extends HtmlHTMLAttributes<HTMLDivElement> {\n    backgroundImage?: string;\n    children?: ReactNode;\n    className?: string;\n    sx?: SxProps;\n}\n\nconst PREFIX = 'RaLogin';\nexport const LoginClasses = {\n    card: `${PREFIX}-card`,\n    avatar: `${PREFIX}-avatar`,\n    icon: `${PREFIX}-icon`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n    height: '1px',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundImage:\n        'radial-gradient(circle at 50% 14em, #313264 0%, #00023b 60%, #00023b 100%)',\n\n    [`& .${LoginClasses.card}`]: {\n        minWidth: 300,\n        marginTop: '6em',\n    },\n    [`& .${LoginClasses.avatar}`]: {\n        margin: '1em',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    [`& .${LoginClasses.icon}`]: {\n        backgroundColor: theme.palette.secondary[500],\n    },\n}));\n\nLogin.propTypes = {\n    backgroundImage: PropTypes.string,\n    children: PropTypes.node,\n    className: PropTypes.string,\n};\n\nLogin.defaultProps = {\n    children: <DefaultLoginForm />,\n};\n"]},"metadata":{},"sourceType":"module"}