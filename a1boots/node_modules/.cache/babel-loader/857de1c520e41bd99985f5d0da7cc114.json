{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport React, { Children, isValidElement } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDropzone } from 'react-dropzone';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { useInput, useTranslate, shallowEqual, RecordContextProvider } from 'ra-core';\nimport { Labeled } from '../Labeled';\nimport { FileInputPreview } from './FileInputPreview';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { InputHelperText } from './InputHelperText';\nexport var FileInput = function (props) {\n  var accept = props.accept,\n      children = props.children,\n      className = props.className,\n      format = props.format,\n      helperText = props.helperText,\n      inputPropsOptions = props.inputProps,\n      maxSize = props.maxSize,\n      minSize = props.minSize,\n      _a = props.multiple,\n      multiple = _a === void 0 ? false : _a,\n      label = props.label,\n      _b = props.labelMultiple,\n      labelMultiple = _b === void 0 ? 'ra.input.file.upload_several' : _b,\n      _c = props.labelSingle,\n      labelSingle = _c === void 0 ? 'ra.input.file.upload_single' : _c,\n      _d = props.options,\n      options = _d === void 0 ? {} : _d,\n      onRemoveProp = props.onRemove,\n      parse = props.parse,\n      placeholder = props.placeholder,\n      removeIcon = props.removeIcon,\n      resource = props.resource,\n      source = props.source,\n      validate = props.validate,\n      validateFileRemoval = props.validateFileRemoval,\n      rest = __rest(props, [\"accept\", \"children\", \"className\", \"format\", \"helperText\", \"inputProps\", \"maxSize\", \"minSize\", \"multiple\", \"label\", \"labelMultiple\", \"labelSingle\", \"options\", \"onRemove\", \"parse\", \"placeholder\", \"removeIcon\", \"resource\", \"source\", \"validate\", \"validateFileRemoval\"]);\n\n  var onDropProp = options.onDrop;\n  var translate = useTranslate(); // turn a browser dropped file structure into expected structure\n\n  var transformFile = function (file) {\n    if (!(file instanceof File)) {\n      return file;\n    }\n\n    var preview = URL.createObjectURL(file);\n    var transformedFile = {\n      rawFile: file,\n      src: preview,\n      title: file.name\n    };\n    return transformedFile;\n  };\n\n  var transformFiles = function (files) {\n    if (!files) {\n      return multiple ? [] : null;\n    }\n\n    if (Array.isArray(files)) {\n      return files.map(transformFile);\n    }\n\n    return transformFile(files);\n  };\n\n  var _e = useInput(__assign({\n    format: format || transformFiles,\n    parse: parse || transformFiles,\n    source: source,\n    validate: validate\n  }, rest)),\n      id = _e.id,\n      _f = _e.field,\n      onChange = _f.onChange,\n      value = _f.value,\n      fieldState = _e.fieldState,\n      isSubmitted = _e.formState.isSubmitted,\n      isRequired = _e.isRequired;\n\n  var isTouched = fieldState.isTouched,\n      error = fieldState.error,\n      invalid = fieldState.invalid;\n  var files = value ? Array.isArray(value) ? value : [value] : [];\n\n  var onDrop = function (newFiles, rejectedFiles, event) {\n    var updatedFiles = multiple ? __spreadArray(__spreadArray([], files, true), newFiles, true) : __spreadArray([], newFiles, true);\n\n    if (multiple) {\n      onChange(updatedFiles);\n    } else {\n      onChange(updatedFiles[0]);\n    }\n\n    if (onDropProp) {\n      onDropProp(newFiles, rejectedFiles, event);\n    }\n  };\n\n  var onRemove = function (file) {\n    return function () {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var e_1, filteredFiles;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!validateFileRemoval) return [3\n              /*break*/\n              , 4];\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 3,, 4]);\n\n              return [4\n              /*yield*/\n              , validateFileRemoval(file)];\n\n            case 2:\n              _a.sent();\n\n              return [3\n              /*break*/\n              , 4];\n\n            case 3:\n              e_1 = _a.sent();\n              return [2\n              /*return*/\n              ];\n\n            case 4:\n              if (multiple) {\n                filteredFiles = files.filter(function (stateFile) {\n                  return !shallowEqual(stateFile, file);\n                });\n                onChange(filteredFiles);\n              } else {\n                onChange(null);\n              }\n\n              if (onRemoveProp) {\n                onRemoveProp(file);\n              }\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n  };\n\n  var childrenElement = children && isValidElement(Children.only(children)) ? Children.only(children) : undefined;\n\n  var _g = useDropzone(__assign(__assign({\n    accept: accept,\n    maxSize: maxSize,\n    minSize: minSize,\n    multiple: multiple\n  }, options), {\n    onDrop: onDrop\n  })),\n      getRootProps = _g.getRootProps,\n      getInputProps = _g.getInputProps;\n\n  return React.createElement(StyledLabeled, __assign({\n    htmlFor: id,\n    label: label,\n    className: clsx('ra-input', \"ra-input-\".concat(source), className),\n    source: source,\n    resource: resource,\n    isRequired: isRequired,\n    color: (isTouched || isSubmitted) && invalid ? 'error' : undefined\n  }, sanitizeInputRestProps(rest)), React.createElement(React.Fragment, null, React.createElement(\"div\", __assign({}, getRootProps({\n    className: FileInputClasses.dropZone,\n    'data-testid': 'dropzone'\n  })), React.createElement(\"input\", __assign({\n    id: id,\n    name: id\n  }, getInputProps(__assign({}, inputPropsOptions)))), placeholder ? placeholder : multiple ? React.createElement(\"p\", null, translate(labelMultiple)) : React.createElement(\"p\", null, translate(labelSingle))), React.createElement(FormHelperText, {\n    error: (isTouched || isSubmitted) && invalid\n  }, React.createElement(InputHelperText, {\n    touched: isTouched || isSubmitted,\n    error: error === null || error === void 0 ? void 0 : error.message,\n    helperText: helperText\n  })), children && React.createElement(\"div\", {\n    className: \"previews\"\n  }, files.map(function (file, index) {\n    return React.createElement(FileInputPreview, {\n      key: index,\n      file: file,\n      onRemove: onRemove(file),\n      className: FileInputClasses.removeButton,\n      removeIcon: removeIcon\n    }, React.createElement(RecordContextProvider, {\n      value: file\n    }, childrenElement));\n  }))));\n};\nFileInput.propTypes = {\n  accept: PropTypes.string,\n  children: PropTypes.element,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isRequired: PropTypes.bool,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.element]),\n  labelMultiple: PropTypes.string,\n  labelSingle: PropTypes.string,\n  maxSize: PropTypes.number,\n  minSize: PropTypes.number,\n  multiple: PropTypes.bool,\n  validateFileRemoval: PropTypes.func,\n  options: PropTypes.object,\n  removeIcon: PropTypes.elementType,\n  resource: PropTypes.string,\n  source: PropTypes.string,\n  placeholder: PropTypes.node\n};\nvar PREFIX = 'RaFileInput';\nexport var FileInputClasses = {\n  dropZone: \"\".concat(PREFIX, \"-dropZone\"),\n  removeButton: \"\".concat(PREFIX, \"-removeButton\")\n};\nvar StyledLabeled = styled(Labeled, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {\n    width: '100%'\n  }, _b[\"& .\".concat(FileInputClasses.dropZone)] = {\n    background: theme.palette.background.default,\n    borderRadius: theme.shape.borderRadius,\n    fontFamily: theme.typography.fontFamily,\n    cursor: 'pointer',\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.getContrastText(theme.palette.background.default)\n  }, _b[\"& .\".concat(FileInputClasses.removeButton)] = {}, _b;\n});","map":{"version":3,"mappings":"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","names":["React","Children","isValidElement","styled","PropTypes","clsx","useDropzone","FormHelperText","useInput","useTranslate","shallowEqual","RecordContextProvider","Labeled","FileInputPreview","sanitizeInputRestProps","InputHelperText","FileInput","props","children","className","format","helperText","inputPropsOptions","maxSize","minSize","_a","multiple","label","_b","labelMultiple","_c","labelSingle","_d","options","onRemoveProp","parse","placeholder","removeIcon","resource","source","validate","validateFileRemoval","rest","onDropProp","translate","transformFile","file","File","preview","URL","createObjectURL","transformedFile","rawFile","src","title","name","transformFiles","files","Array","isArray","map","id","_f","onChange","value","fieldState","isSubmitted","isRequired","error","invalid","onDrop","newFiles","rejectedFiles","event","updatedFiles","__spreadArray","onRemove","filteredFiles","filter","stateFile","childrenElement","only","undefined","accept","getRootProps","getInputProps","StyledLabeled","__assign","htmlFor","color","isTouched","FileInputClasses","dropZone","touched","message","index","key","removeButton","propTypes","string","element","bool","oneOfType","number","func","object","elementType","node","PREFIX","overridesResolver","styles","root","theme","width","background","palette","default","borderRadius","shape","fontFamily","typography","cursor","padding","spacing","textAlign","getContrastText"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/input/FileInput.tsx"],"sourcesContent":["import React, {\n    Children,\n    FC,\n    isValidElement,\n    ReactElement,\n    ReactNode,\n} from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDropzone, DropzoneOptions } from 'react-dropzone';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport {\n    useInput,\n    useTranslate,\n    shallowEqual,\n    RecordContextProvider,\n} from 'ra-core';\n\nimport { CommonInputProps } from './CommonInputProps';\nimport { Labeled } from '../Labeled';\nimport { FileInputPreview } from './FileInputPreview';\nimport { sanitizeInputRestProps } from './sanitizeInputRestProps';\nimport { InputHelperText } from './InputHelperText';\nimport { SxProps } from '@mui/system';\nimport { SvgIconProps } from '@mui/material';\n\nexport const FileInput = (props: FileInputProps) => {\n    const {\n        accept,\n        children,\n        className,\n        format,\n        helperText,\n        inputProps: inputPropsOptions,\n        maxSize,\n        minSize,\n        multiple = false,\n        label,\n        labelMultiple = 'ra.input.file.upload_several',\n        labelSingle = 'ra.input.file.upload_single',\n        options = {},\n        onRemove: onRemoveProp,\n        parse,\n        placeholder,\n        removeIcon,\n        resource,\n        source,\n        validate,\n        validateFileRemoval,\n        ...rest\n    } = props;\n    const { onDrop: onDropProp } = options;\n    const translate = useTranslate();\n\n    // turn a browser dropped file structure into expected structure\n    const transformFile = file => {\n        if (!(file instanceof File)) {\n            return file;\n        }\n\n        const preview = URL.createObjectURL(file);\n        const transformedFile = {\n            rawFile: file,\n            src: preview,\n            title: file.name,\n        };\n\n        return transformedFile;\n    };\n\n    const transformFiles = (files: any[]) => {\n        if (!files) {\n            return multiple ? [] : null;\n        }\n\n        if (Array.isArray(files)) {\n            return files.map(transformFile);\n        }\n\n        return transformFile(files);\n    };\n\n    const {\n        id,\n        field: { onChange, value },\n        fieldState,\n        formState: { isSubmitted },\n        isRequired,\n    } = useInput({\n        format: format || transformFiles,\n        parse: parse || transformFiles,\n        source,\n        validate,\n        ...rest,\n    });\n    const { isTouched, error, invalid } = fieldState;\n    const files = value ? (Array.isArray(value) ? value : [value]) : [];\n\n    const onDrop = (newFiles, rejectedFiles, event) => {\n        const updatedFiles = multiple ? [...files, ...newFiles] : [...newFiles];\n\n        if (multiple) {\n            onChange(updatedFiles);\n        } else {\n            onChange(updatedFiles[0]);\n        }\n\n        if (onDropProp) {\n            onDropProp(newFiles, rejectedFiles, event);\n        }\n    };\n\n    const onRemove = file => async () => {\n        if (validateFileRemoval) {\n            try {\n                await validateFileRemoval(file);\n            } catch (e) {\n                return;\n            }\n        }\n        if (multiple) {\n            const filteredFiles = files.filter(\n                stateFile => !shallowEqual(stateFile, file)\n            );\n            onChange(filteredFiles as any);\n        } else {\n            onChange(null);\n        }\n\n        if (onRemoveProp) {\n            onRemoveProp(file);\n        }\n    };\n\n    const childrenElement =\n        children && isValidElement(Children.only(children))\n            ? (Children.only(children) as ReactElement<any>)\n            : undefined;\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept,\n        maxSize,\n        minSize,\n        multiple,\n        ...options,\n        onDrop,\n    });\n\n    return (\n        <StyledLabeled\n            htmlFor={id}\n            label={label}\n            className={clsx('ra-input', `ra-input-${source}`, className)}\n            source={source}\n            resource={resource}\n            isRequired={isRequired}\n            color={(isTouched || isSubmitted) && invalid ? 'error' : undefined}\n            {...sanitizeInputRestProps(rest)}\n        >\n            <>\n                <div\n                    {...getRootProps({\n                        className: FileInputClasses.dropZone,\n                        'data-testid': 'dropzone',\n                    })}\n                >\n                    <input\n                        id={id}\n                        name={id}\n                        {...getInputProps({\n                            ...inputPropsOptions,\n                        })}\n                    />\n                    {placeholder ? (\n                        placeholder\n                    ) : multiple ? (\n                        <p>{translate(labelMultiple)}</p>\n                    ) : (\n                        <p>{translate(labelSingle)}</p>\n                    )}\n                </div>\n                <FormHelperText error={(isTouched || isSubmitted) && invalid}>\n                    <InputHelperText\n                        touched={isTouched || isSubmitted}\n                        error={error?.message}\n                        helperText={helperText}\n                    />\n                </FormHelperText>\n                {children && (\n                    <div className=\"previews\">\n                        {files.map((file, index) => (\n                            <FileInputPreview\n                                key={index}\n                                file={file}\n                                onRemove={onRemove(file)}\n                                className={FileInputClasses.removeButton}\n                                removeIcon={removeIcon}\n                            >\n                                <RecordContextProvider value={file}>\n                                    {childrenElement}\n                                </RecordContextProvider>\n                            </FileInputPreview>\n                        ))}\n                    </div>\n                )}\n            </>\n        </StyledLabeled>\n    );\n};\n\nFileInput.propTypes = {\n    accept: PropTypes.string,\n    children: PropTypes.element,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    isRequired: PropTypes.bool,\n    label: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.element,\n    ]),\n    labelMultiple: PropTypes.string,\n    labelSingle: PropTypes.string,\n    maxSize: PropTypes.number,\n    minSize: PropTypes.number,\n    multiple: PropTypes.bool,\n    validateFileRemoval: PropTypes.func,\n    options: PropTypes.object,\n    removeIcon: PropTypes.elementType,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    placeholder: PropTypes.node,\n};\n\nconst PREFIX = 'RaFileInput';\n\nexport const FileInputClasses = {\n    dropZone: `${PREFIX}-dropZone`,\n    removeButton: `${PREFIX}-removeButton`,\n};\n\nconst StyledLabeled = styled(Labeled, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    width: '100%',\n    [`& .${FileInputClasses.dropZone}`]: {\n        background: theme.palette.background.default,\n        borderRadius: theme.shape.borderRadius,\n        fontFamily: theme.typography.fontFamily,\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    [`& .${FileInputClasses.removeButton}`]: {},\n}));\n\nexport type FileInputProps = CommonInputProps & {\n    accept?: DropzoneOptions['accept'];\n    className?: string;\n    children?: ReactNode;\n    labelMultiple?: string;\n    labelSingle?: string;\n    maxSize?: DropzoneOptions['maxSize'];\n    minSize?: DropzoneOptions['minSize'];\n    multiple?: DropzoneOptions['multiple'];\n    options?: DropzoneOptions;\n    onRemove?: Function;\n    placeholder?: ReactNode;\n    removeIcon?: FC<SvgIconProps>;\n    inputProps?: any;\n    validateFileRemoval?(file): boolean | Promise<boolean>;\n    sx?: SxProps;\n};\n"]},"metadata":{},"sourceType":"module"}