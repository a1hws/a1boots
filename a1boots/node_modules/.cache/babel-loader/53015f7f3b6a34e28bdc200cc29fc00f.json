{"ast":null,"code":"/**\n * Remove empty strings from form state\n *\n * @example\n * sanitizeEmptyValues({ foo: '', bar: 'baz' }) // { bar: 'baz' }\n */\nexport var sanitizeEmptyValues = function sanitizeEmptyValues(values, record) {\n  if (record === void 0) {\n    record = {};\n  }\n\n  var sanitizedValues = {};\n  Object.keys(values).forEach(function (key) {\n    if (values[key] == null || values[key] === '') {\n      if (record.hasOwnProperty(key)) {\n        // user has emptied a field, make the value null\n        sanitizedValues[key] = null;\n      } else {// user has emptied a field, but the initial value was undefined\n        // so we don't include it in the sanitized values\n      }\n    } else {\n      // this is a non-empty value, so we include it in the sanitized values\n      sanitizedValues[key] = values[key];\n    }\n  });\n  return sanitizedValues;\n};","map":{"version":3,"mappings":"AAAA;;;;;;AAMA,OAAO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,MAAD,EAAcC,MAAd,EAA8B;EAAhB;IAAAA;EAAgB;;EAC7D,IAAMC,eAAe,GAAG,EAAxB;EACAC,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,OAApB,CAA4B,eAAG;IAC3B,IAAIL,MAAM,CAACM,GAAD,CAAN,IAAe,IAAf,IAAuBN,MAAM,CAACM,GAAD,CAAN,KAAgB,EAA3C,EAA+C;MAC3C,IAAIL,MAAM,CAACM,cAAP,CAAsBD,GAAtB,CAAJ,EAAgC;QAC5B;QACAJ,eAAe,CAACI,GAAD,CAAf,GAAuB,IAAvB;MACH,CAHD,MAGO,CACH;QACA;MACH;IACJ,CARD,MAQO;MACH;MACAJ,eAAe,CAACI,GAAD,CAAf,GAAuBN,MAAM,CAACM,GAAD,CAA7B;IACH;EACJ,CAbD;EAcA,OAAOJ,eAAP;AACH,CAjBM","names":["sanitizeEmptyValues","values","record","sanitizedValues","Object","keys","forEach","key","hasOwnProperty"],"sources":["/var/www/a1boots/node_modules/ra-core/src/form/sanitizeEmptyValues.ts"],"sourcesContent":["/**\n * Remove empty strings from form state\n *\n * @example\n * sanitizeEmptyValues({ foo: '', bar: 'baz' }) // { bar: 'baz' }\n */\nexport const sanitizeEmptyValues = (values: any, record: any = {}): any => {\n    const sanitizedValues = {};\n    Object.keys(values).forEach(key => {\n        if (values[key] == null || values[key] === '') {\n            if (record.hasOwnProperty(key)) {\n                // user has emptied a field, make the value null\n                sanitizedValues[key] = null;\n            } else {\n                // user has emptied a field, but the initial value was undefined\n                // so we don't include it in the sanitized values\n            }\n        } else {\n            // this is a non-empty value, so we include it in the sanitized values\n            sanitizedValues[key] = values[key];\n        }\n    });\n    return sanitizedValues;\n};\n"]},"metadata":{},"sourceType":"module"}