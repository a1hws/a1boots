{"ast":null,"code":"import { useContext, useMemo } from 'react';\nimport { ArrayInputContext } from './ArrayInputContext';\n/**\n * A hook to access an array input methods as provided by react-hook-form.\n * Useful to create custom array input iterators.\n * @see {ArrayInput}\n * @see https://react-hook-form.com/api/usefieldarray\n */\n\nexport var useArrayInput = function (props) {\n  var context = useContext(ArrayInputContext);\n  var memo = useMemo(function () {\n    return {\n      append: props === null || props === void 0 ? void 0 : props.append,\n      fields: props === null || props === void 0 ? void 0 : props.fields,\n      insert: props === null || props === void 0 ? void 0 : props.insert,\n      move: props === null || props === void 0 ? void 0 : props.move,\n      prepend: props === null || props === void 0 ? void 0 : props.prepend,\n      remove: props === null || props === void 0 ? void 0 : props.remove,\n      replace: props === null || props === void 0 ? void 0 : props.replace,\n      swap: props === null || props === void 0 ? void 0 : props.swap,\n      update: props === null || props === void 0 ? void 0 : props.update\n    };\n  }, [props]);\n\n  if (props === null || props === void 0 ? void 0 : props.fields) {\n    return memo;\n  }\n\n  return context;\n};","map":{"version":3,"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAA0D,qBAA1D;AAEA;;;;;;;AAMA,OAAO,IAAMC,aAAa,GAAG,UACzBC,KADyB,EACc;EAEvC,IAAMC,OAAO,GAAGL,UAAU,CAACE,iBAAD,CAA1B;EACA,IAAMI,IAAI,GAAGL,OAAO,CAChB;IAAM,OAAC;MACHM,MAAM,EAAEH,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEG,MADZ;MAEHC,MAAM,EAAEJ,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEI,MAFZ;MAGHC,MAAM,EAAEL,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEK,MAHZ;MAIHC,IAAI,EAAEN,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEM,IAJV;MAKHC,OAAO,EAAEP,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEO,OALb;MAMHC,MAAM,EAAER,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEQ,MANZ;MAOHC,OAAO,EAAET,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAES,OAPb;MAQHC,IAAI,EAAEV,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEU,IARV;MASHC,MAAM,EAAEX,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEW;IATZ,CAAD;EAUJ,CAXc,EAYhB,CAACX,KAAD,CAZgB,CAApB;;EAeA,IAAIA,KAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEI,MAAX,EAAmB;IACf,OAAOF,IAAP;EACH;;EAED,OAAOD,OAAP;AACH,CAxBM","names":["useContext","useMemo","ArrayInputContext","useArrayInput","props","context","memo","append","fields","insert","move","prepend","remove","replace","swap","update"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/input/ArrayInput/useArrayInput.ts"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport { ArrayInputContext, ArrayInputContextValue } from './ArrayInputContext';\n\n/**\n * A hook to access an array input methods as provided by react-hook-form.\n * Useful to create custom array input iterators.\n * @see {ArrayInput}\n * @see https://react-hook-form.com/api/usefieldarray\n */\nexport const useArrayInput = (\n    props?: Partial<ArrayInputContextValue>\n): ArrayInputContextValue => {\n    const context = useContext(ArrayInputContext);\n    const memo = useMemo(\n        () => ({\n            append: props?.append,\n            fields: props?.fields,\n            insert: props?.insert,\n            move: props?.move,\n            prepend: props?.prepend,\n            remove: props?.remove,\n            replace: props?.replace,\n            swap: props?.swap,\n            update: props?.update,\n        }),\n        [props]\n    );\n\n    if (props?.fields) {\n        return memo;\n    }\n\n    return context;\n};\n"]},"metadata":{},"sourceType":"module"}