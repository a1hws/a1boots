{"ast":null,"code":"import { useCallback } from 'react';\nimport { useI18nProvider } from './useI18nProvider';\n/**\n * Translate a string using the current locale and the translations from the i18nProvider\n *\n * @see Polyglot.t()\n * @link https://airbnb.io/polyglot.js/#polyglotprototypetkey-interpolationoptions\n *\n * @return {Function} A translation function, accepting two arguments\n *   - a string used as key in the translations\n *   - an interpolationOptions object\n *\n * @example\n *\n * import { useTranslate } from 'react-admin';\n *\n * const SettingsMenu = () => {\n *     const translate = useTranslate();\n *     return <MenuItem>{translate('settings')}</MenuItem>;\n * }\n */\n\nexport var useTranslate = function useTranslate() {\n  var i18nProvider = useI18nProvider();\n  var translate = useCallback(function (key, options) {\n    return i18nProvider.translate(key, options);\n  }, // update the hook each time the locale changes\n  [i18nProvider] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  return i18nProvider ? translate : identity;\n};\n\nvar identity = function identity(key) {\n  return key;\n};","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAGA,SAASC,eAAT,QAAgC,mBAAhC;AAEA;;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;EACxB,IAAMC,YAAY,GAAGF,eAAe,EAApC;EACA,IAAMG,SAAS,GAAGJ,WAAW,CACzB,UAACK,GAAD,EAAcC,OAAd,EAA2B;IACvB,mBAAY,CAACF,SAAb,CAAuBC,GAAvB,EAA4BC,OAA5B;EAA8C,CAFzB,EAGzB;EACA,CAACH,YAAD,CAJyB,CAIV;EAJU,CAA7B;EAMA,OAAOA,YAAY,GAAGC,SAAH,GAAeG,QAAlC;AACH,CATM;;AAWP,IAAMA,QAAQ,GAAG,SAAXA,QAAW,MAAG;EAAI;AAAG,CAA3B","names":["useCallback","useI18nProvider","useTranslate","i18nProvider","translate","key","options","identity"],"sources":["/var/www/a1boots/node_modules/ra-core/src/i18n/useTranslate.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nimport { Translate } from '../types';\nimport { useI18nProvider } from './useI18nProvider';\n\n/**\n * Translate a string using the current locale and the translations from the i18nProvider\n *\n * @see Polyglot.t()\n * @link https://airbnb.io/polyglot.js/#polyglotprototypetkey-interpolationoptions\n *\n * @return {Function} A translation function, accepting two arguments\n *   - a string used as key in the translations\n *   - an interpolationOptions object\n *\n * @example\n *\n * import { useTranslate } from 'react-admin';\n *\n * const SettingsMenu = () => {\n *     const translate = useTranslate();\n *     return <MenuItem>{translate('settings')}</MenuItem>;\n * }\n */\nexport const useTranslate = (): Translate => {\n    const i18nProvider = useI18nProvider();\n    const translate = useCallback(\n        (key: string, options?: any) =>\n            i18nProvider.translate(key, options) as string,\n        // update the hook each time the locale changes\n        [i18nProvider] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n    return i18nProvider ? translate : identity;\n};\n\nconst identity = key => key;\n"]},"metadata":{},"sourceType":"module"}