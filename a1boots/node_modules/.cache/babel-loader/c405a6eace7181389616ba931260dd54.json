{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n/**\n * @deprecated use useCreatePath instead\n */\n\n\nexport var resolveRedirectTo = function resolveRedirectTo(redirectTo, resource, id, data, basename) {\n  if (basename === void 0) {\n    basename = '';\n  }\n\n  if (typeof redirectTo === 'function') {\n    var target = redirectTo(resource, id, data);\n    return typeof target === 'string' ? removeDoubleSlashes(\"\".concat(basename, \"/\").concat(target)) : __assign({\n      pathname: removeDoubleSlashes(\"\".concat(basename, \"/\").concat(target.pathname))\n    }, target);\n  }\n\n  switch (redirectTo) {\n    case 'list':\n      return removeDoubleSlashes(\"\".concat(basename, \"/\").concat(resource));\n\n    case 'create':\n      return removeDoubleSlashes(\"\".concat(basename, \"/\").concat(resource, \"/create\"));\n\n    case 'edit':\n      return removeDoubleSlashes(\"\".concat(basename, \"/\").concat(resource, \"/\").concat(encodeURIComponent(id)));\n\n    case 'show':\n      return removeDoubleSlashes(\"\".concat(basename, \"/\").concat(resource, \"/\").concat(encodeURIComponent(id), \"/show\"));\n\n    default:\n      return redirectTo;\n  }\n};\n\nvar removeDoubleSlashes = function removeDoubleSlashes(path) {\n  return path.replace('//', '/');\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAEA;;;;;AAGA,OAAO,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAC7BC,UAD6B,EAE7BC,QAF6B,EAG7BC,EAH6B,EAI7BC,IAJ6B,EAK7BC,QAL6B,EAKR;EAArB;IAAAA;EAAqB;;EAErB,IAAI,OAAOJ,UAAP,KAAsB,UAA1B,EAAsC;IAClC,IAAMK,MAAM,GAAOL,UAAU,CAACC,QAAD,EAAWC,EAAX,EAAeC,IAAf,CAA7B;IACA,OAAO,OAAOE,MAAP,KAAkB,QAAlB,GACDC,mBAAmB,CAAC,UAAGF,QAAH,EAAW,GAAX,EAAWG,MAAX,CAAeF,MAAf,CAAD,CADlB,GAEFG;MACKC,QAAQ,EAAEH,mBAAmB,CACzB,UAAGF,QAAH,EAAW,GAAX,EAAWG,MAAX,CAAeF,MAAM,CAACI,QAAtB,CADyB;IADlC,GAIQJ,MAJR,CAFL;EAQH;;EACD,QAAQL,UAAR;IACI,KAAK,MAAL;MACI,OAAOM,mBAAmB,CAAC,UAAGF,QAAH,EAAW,GAAX,EAAWG,MAAX,CAAeN,QAAf,CAAD,CAA1B;;IACJ,KAAK,QAAL;MACI,OAAOK,mBAAmB,CAAC,UAAGF,QAAH,EAAW,GAAX,EAAWG,MAAX,CAAeN,QAAf,EAAuB,SAAvB,CAAD,CAA1B;;IACJ,KAAK,MAAL;MACI,OAAOK,mBAAmB,CACtB,UAAGF,QAAH,EAAW,GAAX,EAAWG,MAAX,CAAeN,QAAf,EAAuB,GAAvB,EAAuBM,MAAvB,CAA2BG,kBAAkB,CAACR,EAAD,CAA7C,CADsB,CAA1B;;IAGJ,KAAK,MAAL;MACI,OAAOI,mBAAmB,CACtB,UAAGF,QAAH,EAAW,GAAX,EAAWG,MAAX,CAAeN,QAAf,EAAuB,GAAvB,EAAuBM,MAAvB,CAA2BG,kBAAkB,CAACR,EAAD,CAA7C,EAAiD,OAAjD,CADsB,CAA1B;;IAGJ;MACI,OAAOF,UAAP;EAdR;AAgBH,CAlCM;;AAoCP,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACK,IAAD,EAAa;EAAK,WAAI,CAACC,OAAL,CAAa,IAAb,EAAmB,GAAnB;AAAuB,CAArE","names":["resolveRedirectTo","redirectTo","resource","id","data","basename","target","removeDoubleSlashes","concat","__assign","pathname","encodeURIComponent","path","replace"],"sources":["/var/www/a1boots/node_modules/ra-core/src/routing/resolveRedirectTo.ts"],"sourcesContent":["import { To } from 'react-router-dom';\n\n/**\n * @deprecated use useCreatePath instead\n */\nexport const resolveRedirectTo = (\n    redirectTo,\n    resource: string,\n    id?,\n    data?,\n    basename: string = ''\n): To => {\n    if (typeof redirectTo === 'function') {\n        const target: To = redirectTo(resource, id, data);\n        return typeof target === 'string'\n            ? removeDoubleSlashes(`${basename}/${target}`)\n            : {\n                  pathname: removeDoubleSlashes(\n                      `${basename}/${target.pathname}`\n                  ),\n                  ...target,\n              };\n    }\n    switch (redirectTo) {\n        case 'list':\n            return removeDoubleSlashes(`${basename}/${resource}`);\n        case 'create':\n            return removeDoubleSlashes(`${basename}/${resource}/create`);\n        case 'edit':\n            return removeDoubleSlashes(\n                `${basename}/${resource}/${encodeURIComponent(id)}`\n            );\n        case 'show':\n            return removeDoubleSlashes(\n                `${basename}/${resource}/${encodeURIComponent(id)}/show`\n            );\n        default:\n            return redirectTo;\n    }\n};\n\nconst removeDoubleSlashes = (path: string) => path.replace('//', '/');\n"]},"metadata":{},"sourceType":"module"}