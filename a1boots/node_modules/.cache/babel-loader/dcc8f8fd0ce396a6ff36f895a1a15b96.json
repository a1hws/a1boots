{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router';\n/**\n * A hook to use inside the component passed to FallbackComponent\n * of react-error-boundary. It resets the error boundary state whenever\n * the location changes\n * @param {Function} resetErrorBoundary\n */\n\nexport var useResetErrorBoundaryOnLocationChange = function (resetErrorBoundary) {\n  var pathname = useLocation().pathname;\n  var originalPathname = useRef(pathname);\n  useEffect(function () {\n    if (pathname !== originalPathname.current) {\n      resetErrorBoundary();\n    }\n  }, [pathname, resetErrorBoundary]);\n};","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA;;;;;;;AAMA,OAAO,IAAMC,qCAAqC,GAAG,UACjDC,kBADiD,EACnB;EAEtB,YAAQ,GAAKF,WAAW,GAAEG,QAA1B;EACR,IAAMC,gBAAgB,GAAGL,MAAM,CAACI,QAAD,CAA/B;EAEAL,SAAS,CAAC;IACN,IAAIK,QAAQ,KAAKC,gBAAgB,CAACC,OAAlC,EAA2C;MACvCH,kBAAkB;IACrB;EACJ,CAJQ,EAIN,CAACC,QAAD,EAAWD,kBAAX,CAJM,CAAT;AAKH,CAXM","names":["useEffect","useRef","useLocation","useResetErrorBoundaryOnLocationChange","resetErrorBoundary","pathname","originalPathname","current"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/layout/useResetErrorBoundaryOnLocationChange.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router';\n\n/**\n * A hook to use inside the component passed to FallbackComponent\n * of react-error-boundary. It resets the error boundary state whenever\n * the location changes\n * @param {Function} resetErrorBoundary\n */\nexport const useResetErrorBoundaryOnLocationChange = (\n    resetErrorBoundary: () => void\n) => {\n    const { pathname } = useLocation();\n    const originalPathname = useRef(pathname);\n\n    useEffect(() => {\n        if (pathname !== originalPathname.current) {\n            resetErrorBoundary();\n        }\n    }, [pathname, resetErrorBoundary]);\n};\n"]},"metadata":{},"sourceType":"module"}