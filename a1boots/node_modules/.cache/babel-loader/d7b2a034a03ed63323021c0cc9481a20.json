{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { Children, cloneElement, isValidElement, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { lighten } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useTranslate, sanitizeListRestProps, useListContext } from 'ra-core';\nimport TopToolbar from '../layout/TopToolbar';\nexport var BulkActionsToolbar = function BulkActionsToolbar(props) {\n  var _a;\n\n  var _b = props.label,\n      label = _b === void 0 ? 'ra.action.bulk_actions' : _b,\n      children = props.children,\n      className = props.className,\n      rest = __rest(props, [\"label\", \"children\", \"className\"]);\n\n  var _c = useListContext(props),\n      filterValues = _c.filterValues,\n      resource = _c.resource,\n      _d = _c.selectedIds,\n      selectedIds = _d === void 0 ? [] : _d,\n      onUnselectItems = _c.onUnselectItems;\n\n  var translate = useTranslate();\n  var handleUnselectAllClick = useCallback(function () {\n    onUnselectItems();\n  }, [onUnselectItems]);\n  return React.createElement(Root, {\n    className: className\n  }, React.createElement(Toolbar, __assign({\n    \"data-test\": \"bulk-actions-toolbar\",\n    className: clsx(BulkActionsToolbarClasses.toolbar, (_a = {}, _a[BulkActionsToolbarClasses.collapsed] = selectedIds.length === 0, _a))\n  }, sanitizeListRestProps(rest)), React.createElement(\"div\", {\n    className: BulkActionsToolbarClasses.title\n  }, React.createElement(IconButton, {\n    className: BulkActionsToolbarClasses.icon,\n    \"aria-label\": translate('ra.action.unselect'),\n    title: translate('ra.action.unselect'),\n    onClick: handleUnselectAllClick,\n    size: \"small\"\n  }, React.createElement(CloseIcon, {\n    fontSize: \"small\"\n  })), React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\"\n  }, translate(label, {\n    _: label,\n    smart_count: selectedIds.length\n  }))), React.createElement(TopToolbar, {\n    className: BulkActionsToolbarClasses.topToolbar\n  }, Children.map(children, function (child) {\n    return isValidElement(child) ? cloneElement(child, {\n      filterValues: filterValues,\n      resource: resource,\n      selectedIds: selectedIds\n    }) : null;\n  }))));\n};\nBulkActionsToolbar.propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string\n};\nvar PREFIX = 'RaBulkActionsToolbar';\nexport var BulkActionsToolbarClasses = {\n  toolbar: \"\".concat(PREFIX, \"-toolbar\"),\n  topToolbar: \"\".concat(PREFIX, \"-topToolbar\"),\n  buttons: \"\".concat(PREFIX, \"-buttons\"),\n  collapsed: \"\".concat(PREFIX, \"-collapsed\"),\n  title: \"\".concat(PREFIX, \"-title\"),\n  icon: \"\".concat(PREFIX, \"-icon\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {\n    position: 'relative'\n  }, _b[\"& .\".concat(BulkActionsToolbarClasses.toolbar)] = {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    zIndex: 3,\n    color: theme.palette.mode === 'light' ? theme.palette.primary.main : theme.palette.text.primary,\n    justifyContent: 'space-between',\n    backgroundColor: theme.palette.mode === 'light' ? lighten(theme.palette.primary.light, 0.8) : theme.palette.primary.dark,\n    minHeight: theme.spacing(6),\n    height: theme.spacing(6),\n    transform: \"translateY(-\".concat(theme.spacing(6), \")\"),\n    transition: \"\".concat(theme.transitions.create('height'), \", \").concat(theme.transitions.create('min-height'), \", \").concat(theme.transitions.create('transform')),\n    borderTopLeftRadius: theme.shape.borderRadius,\n    borderTopRightRadius: theme.shape.borderRadius\n  }, _b[\"& .\".concat(BulkActionsToolbarClasses.topToolbar)] = {\n    paddingBottom: theme.spacing(1),\n    minHeight: 'auto'\n  }, _b[\"& .\".concat(BulkActionsToolbarClasses.buttons)] = {}, _b[\"& .\".concat(BulkActionsToolbarClasses.collapsed)] = {\n    minHeight: 0,\n    height: 0,\n    transform: \"translateY(0)\",\n    overflowY: 'hidden'\n  }, _b[\"& .\".concat(BulkActionsToolbarClasses.title)] = {\n    display: 'flex',\n    flex: '0 0 auto'\n  }, _b[\"& .\".concat(BulkActionsToolbarClasses.icon)] = {\n    marginLeft: '-0.5em',\n    marginRight: '0.5em'\n  }, _b;\n});","map":{"version":3,"mappings":"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","names":["React","Children","cloneElement","isValidElement","useCallback","PropTypes","styled","clsx","Toolbar","Typography","lighten","IconButton","CloseIcon","useTranslate","sanitizeListRestProps","useListContext","TopToolbar","BulkActionsToolbar","props","_b","children","className","rest","filterValues","resource","_d","selectedIds","onUnselectItems","translate","handleUnselectAllClick","Root","__assign","BulkActionsToolbarClasses","toolbar","_a","collapsed","length","title","icon","onClick","size","fontSize","color","variant","label","_","smart_count","topToolbar","map","child","propTypes","node","string","PREFIX","buttons","name","overridesResolver","styles","root","theme","position","left","right","zIndex","palette","mode","primary","main","text","justifyContent","backgroundColor","light","dark","minHeight","spacing","height","transform","transition","transitions","create","concat","borderTopLeftRadius","shape","borderRadius","borderTopRightRadius","paddingBottom","overflowY","display","flex","marginLeft","marginRight"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/list/BulkActionsToolbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n    Children,\n    ReactNode,\n    cloneElement,\n    isValidElement,\n    useCallback,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { lighten } from '@mui/material/styles';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport {\n    useTranslate,\n    sanitizeListRestProps,\n    useListContext,\n    Identifier,\n} from 'ra-core';\n\nimport TopToolbar from '../layout/TopToolbar';\n\nexport const BulkActionsToolbar = (props: BulkActionsToolbarProps) => {\n    const {\n        label = 'ra.action.bulk_actions',\n        children,\n        className,\n        ...rest\n    } = props;\n    const {\n        filterValues,\n        resource,\n        selectedIds = [],\n        onUnselectItems,\n    } = useListContext(props);\n\n    const translate = useTranslate();\n\n    const handleUnselectAllClick = useCallback(() => {\n        onUnselectItems();\n    }, [onUnselectItems]);\n\n    return (\n        <Root className={className}>\n            <Toolbar\n                data-test=\"bulk-actions-toolbar\"\n                className={clsx(BulkActionsToolbarClasses.toolbar, {\n                    [BulkActionsToolbarClasses.collapsed]:\n                        selectedIds.length === 0,\n                })}\n                {...sanitizeListRestProps(rest)}\n            >\n                <div className={BulkActionsToolbarClasses.title}>\n                    <IconButton\n                        className={BulkActionsToolbarClasses.icon}\n                        aria-label={translate('ra.action.unselect')}\n                        title={translate('ra.action.unselect')}\n                        onClick={handleUnselectAllClick}\n                        size=\"small\"\n                    >\n                        <CloseIcon fontSize=\"small\" />\n                    </IconButton>\n                    <Typography color=\"inherit\" variant=\"subtitle1\">\n                        {translate(label, {\n                            _: label,\n                            smart_count: selectedIds.length,\n                        })}\n                    </Typography>\n                </div>\n                <TopToolbar className={BulkActionsToolbarClasses.topToolbar}>\n                    {Children.map(children, child =>\n                        isValidElement<any>(child)\n                            ? cloneElement(child, {\n                                  filterValues,\n                                  resource,\n                                  selectedIds,\n                              })\n                            : null\n                    )}\n                </TopToolbar>\n            </Toolbar>\n        </Root>\n    );\n};\n\nBulkActionsToolbar.propTypes = {\n    children: PropTypes.node,\n    label: PropTypes.string,\n};\n\nexport interface BulkActionsToolbarProps {\n    children?: ReactNode;\n    label?: string;\n    selectedIds?: Identifier[];\n    className?: string;\n}\n\nconst PREFIX = 'RaBulkActionsToolbar';\n\nexport const BulkActionsToolbarClasses = {\n    toolbar: `${PREFIX}-toolbar`,\n    topToolbar: `${PREFIX}-topToolbar`,\n    buttons: `${PREFIX}-buttons`,\n    collapsed: `${PREFIX}-collapsed`,\n    title: `${PREFIX}-title`,\n    icon: `${PREFIX}-icon`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    position: 'relative',\n    [`& .${BulkActionsToolbarClasses.toolbar}`]: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        zIndex: 3,\n        color:\n            theme.palette.mode === 'light'\n                ? theme.palette.primary.main\n                : theme.palette.text.primary,\n        justifyContent: 'space-between',\n        backgroundColor:\n            theme.palette.mode === 'light'\n                ? lighten(theme.palette.primary.light, 0.8)\n                : theme.palette.primary.dark,\n        minHeight: theme.spacing(6),\n        height: theme.spacing(6),\n        transform: `translateY(-${theme.spacing(6)})`,\n        transition: `${theme.transitions.create(\n            'height'\n        )}, ${theme.transitions.create(\n            'min-height'\n        )}, ${theme.transitions.create('transform')}`,\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius,\n    },\n\n    [`& .${BulkActionsToolbarClasses.topToolbar}`]: {\n        paddingBottom: theme.spacing(1),\n        minHeight: 'auto',\n    },\n\n    [`& .${BulkActionsToolbarClasses.buttons}`]: {},\n\n    [`& .${BulkActionsToolbarClasses.collapsed}`]: {\n        minHeight: 0,\n        height: 0,\n        transform: `translateY(0)`,\n        overflowY: 'hidden',\n    },\n\n    [`& .${BulkActionsToolbarClasses.title}`]: {\n        display: 'flex',\n        flex: '0 0 auto',\n    },\n\n    [`& .${BulkActionsToolbarClasses.icon}`]: {\n        marginLeft: '-0.5em',\n        marginRight: '0.5em',\n    },\n}));\n"]},"metadata":{},"sourceType":"module"}