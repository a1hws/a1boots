{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useParams } from 'react-router-dom';\nexport var TabbedShowLayoutTabs = function TabbedShowLayoutTabs(_a) {\n  var children = _a.children,\n      syncWithLocation = _a.syncWithLocation,\n      value = _a.value,\n      rest = __rest(_a, [\"children\", \"syncWithLocation\", \"value\"]);\n\n  var params = useParams(); // params will include eventual parameters from the root pathname and * for the remaining part\n  // which should match the tabs paths\n\n  var tabValue = params['*'];\n  return React.createElement(Tabs, __assign({\n    indicatorColor: \"primary\",\n    value: syncWithLocation ? tabValue : value\n  }, rest), Children.map(children, function (tab, index) {\n    if (!tab || !isValidElement(tab)) return null; // Builds the full tab which is the concatenation of the last matched route in the\n    // TabbedShowLayout hierarchy (ex: '/posts/create', '/posts/12', , '/posts/12/show')\n    // and the tab path.\n    // This will be used as the Tab's value\n\n    var tabPath = getShowLayoutTabFullPath(tab, index);\n    return cloneElement(tab, {\n      context: 'header',\n      value: syncWithLocation ? tabPath : index,\n      syncWithLocation: syncWithLocation\n    });\n  }));\n};\nexport var getShowLayoutTabFullPath = function getShowLayoutTabFullPath(tab, index) {\n  return \"\".concat(tab.props.path ? \"\".concat(tab.props.path) : index > 0 ? index : '');\n};\nTabbedShowLayoutTabs.propTypes = {\n  children: PropTypes.node\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAA+CC,cAA/C,QAAqE,OAArE;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAgC,oBAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAGA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,EAAD,EAKR;EAJxB,YAAQ,cAAR;EAAA,IACAC,gBAAgB,sBADhB;EAAA,IAEAC,KAAK,WAFL;EAAA,IAGGC,IAAI,cAJ0B,yCAI1B,CAHP;;EAKA,IAAMC,MAAM,GAAGN,SAAS,EAAxB,CADwB,CAGxB;EACA;;EACA,IAAMO,QAAQ,GAAGD,MAAM,CAAC,GAAD,CAAvB;EAEA,OACIZ,oBAACK,IAAD,EAAKS;IACDC,cAAc,EAAC,SADd;IAEDL,KAAK,EAAED,gBAAgB,GAAGI,QAAH,GAAcH;EAFpC,GAGGC,IAHH,CAAL,EAKKV,QAAQ,CAACe,GAAT,CAAaC,QAAb,EAAuB,UAACC,GAAD,EAAMC,KAAN,EAAW;IAC/B,IAAI,CAACD,GAAD,IAAQ,CAACf,cAAc,CAACe,GAAD,CAA3B,EAAkC,OAAO,IAAP,CADH,CAE/B;IACA;IACA;IACA;;IACA,IAAME,OAAO,GAAGC,wBAAwB,CAACH,GAAD,EAAMC,KAAN,CAAxC;IAEA,OAAOjB,YAAY,CAACgB,GAAD,EAAM;MACrBI,OAAO,EAAE,QADY;MAErBZ,KAAK,EAAED,gBAAgB,GAAGW,OAAH,GAAaD,KAFf;MAGrBV,gBAAgB;IAHK,CAAN,CAAnB;EAKH,CAbA,CALL,CADJ;AAsBH,CAlCM;AAoCP,OAAO,IAAMY,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACH,GAAD,EAAMC,KAAN,EAAW;EAC/C,iBAAGD,GAAG,CAACK,KAAJ,CAAUC,IAAV,GAAiB,UAAGN,GAAG,CAACK,KAAJ,CAAUC,IAAb,CAAjB,GAAuCL,KAAK,GAAG,CAAR,GAAYA,KAAZ,GAAoB,EAA9D;AAAkE,CAD/D;AAQPZ,oBAAoB,CAACkB,SAArB,GAAiC;EAC7BR,QAAQ,EAAEb,SAAS,CAACsB;AADS,CAAjC","names":["React","Children","cloneElement","isValidElement","PropTypes","Tabs","useParams","TabbedShowLayoutTabs","_a","syncWithLocation","value","rest","params","tabValue","__assign","indicatorColor","map","children","tab","index","tabPath","getShowLayoutTabFullPath","context","props","path","propTypes","node"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/detail/TabbedShowLayoutTabs.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Children, cloneElement, ReactElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs, { TabsProps } from '@mui/material/Tabs';\nimport { useParams } from 'react-router-dom';\nimport { TabProps } from './Tab';\n\nexport const TabbedShowLayoutTabs = ({\n    children,\n    syncWithLocation,\n    value,\n    ...rest\n}: TabbedShowLayoutTabsProps) => {\n    const params = useParams();\n\n    // params will include eventual parameters from the root pathname and * for the remaining part\n    // which should match the tabs paths\n    const tabValue = params['*'];\n\n    return (\n        <Tabs\n            indicatorColor=\"primary\"\n            value={syncWithLocation ? tabValue : value}\n            {...rest}\n        >\n            {Children.map(children, (tab, index) => {\n                if (!tab || !isValidElement(tab)) return null;\n                // Builds the full tab which is the concatenation of the last matched route in the\n                // TabbedShowLayout hierarchy (ex: '/posts/create', '/posts/12', , '/posts/12/show')\n                // and the tab path.\n                // This will be used as the Tab's value\n                const tabPath = getShowLayoutTabFullPath(tab, index);\n\n                return cloneElement(tab, {\n                    context: 'header',\n                    value: syncWithLocation ? tabPath : index,\n                    syncWithLocation,\n                });\n            })}\n        </Tabs>\n    );\n};\n\nexport const getShowLayoutTabFullPath = (tab, index) =>\n    `${tab.props.path ? `${tab.props.path}` : index > 0 ? index : ''}`;\n\nexport interface TabbedShowLayoutTabsProps extends TabsProps {\n    children?: ReactElement<TabProps>;\n    syncWithLocation?: boolean;\n}\n\nTabbedShowLayoutTabs.propTypes = {\n    children: PropTypes.node,\n};\n"]},"metadata":{},"sourceType":"module"}