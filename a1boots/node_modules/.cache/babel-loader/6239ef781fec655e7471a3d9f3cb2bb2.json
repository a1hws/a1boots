{"ast":null,"code":"import { fetchActionsWithRecordResponse, fetchActionsWithArrayOfIdentifiedRecordsResponse, fetchActionsWithArrayOfRecordsResponse, fetchActionsWithTotalResponse } from './dataFetchActions';\n\nfunction validateResponseFormat(response, type, logger // eslint-disable-line no-console\n) {\n  if (logger === void 0) {\n    logger = console.error;\n  }\n\n  if (!response) {\n    logger(\"The dataProvider returned an empty response for '\".concat(type, \"'.\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n\n  if (!response.hasOwnProperty('data')) {\n    logger(\"The response to '\".concat(type, \"' must be like { data: ... }, but the received response does not have a 'data' key. The dataProvider is probably wrong for '\").concat(type, \"'.\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n\n  if (fetchActionsWithArrayOfRecordsResponse.includes(type) && !Array.isArray(response.data)) {\n    logger(\"The response to '\".concat(type, \"' must be like { data : [...] }, but the received data is not an array. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n\n  if (fetchActionsWithArrayOfIdentifiedRecordsResponse.includes(type) && Array.isArray(response.data) && response.data.length > 0 && !response.data[0].hasOwnProperty('id')) {\n    logger(\"The response to '\".concat(type, \"' must be like { data : [{ id: 123, ...}, ...] }, but the received data items do not have an 'id' key. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n\n  if (fetchActionsWithRecordResponse.includes(type) && !response.data.hasOwnProperty('id')) {\n    logger(\"The response to '\".concat(type, \"' must be like { data: { id: 123, ... } }, but the received data does not have an 'id' key. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n\n  if (fetchActionsWithTotalResponse.includes(type) && !response.hasOwnProperty('total') && !response.hasOwnProperty('pageInfo')) {\n    logger(\"The response to '\".concat(type, \"' must be like  { data: [...], total: 123 }, but the received response does not have a 'total' key. The dataProvider is probably wrong for '\").concat(type, \"'\"));\n    throw new Error('ra.notification.data_provider_error');\n  }\n}\n\nexport default validateResponseFormat;","map":{"version":3,"mappings":"AAAA,SACIA,8BADJ,EAEIC,gDAFJ,EAGIC,sCAHJ,EAIIC,6BAJJ,QAKO,oBALP;;AAOA,SAASC,sBAAT,CACIC,QADJ,EAEIC,IAFJ,EAGIC,MAHJ,CAG2B;AAH3B;EAGI;IAAAA,SAASC,OAAO,CAACC,KAAjB;EAAsB;;EAEtB,IAAI,CAACJ,QAAL,EAAe;IACXE,MAAM,CAAC,2DAAoDD,IAApD,EAAwD,IAAxD,CAAD,CAAN;IACA,MAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;EACH;;EACD,IAAI,CAACL,QAAQ,CAACM,cAAT,CAAwB,MAAxB,CAAL,EAAsC;IAClCJ,MAAM,CACF,2BAAoBD,IAApB,EAAwB,8HAAxB,EAAwBM,MAAxB,CAAuJN,IAAvJ,EAA2J,IAA3J,CADE,CAAN;IAGA,MAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;EACH;;EACD,IACIR,sCAAsC,CAACW,QAAvC,CAAgDP,IAAhD,KACA,CAACQ,KAAK,CAACC,OAAN,CAAcV,QAAQ,CAACW,IAAvB,CAFL,EAGE;IACET,MAAM,CACF,2BAAoBD,IAApB,EAAwB,kHAAxB,EAAwBM,MAAxB,CAA2IN,IAA3I,EAA+I,GAA/I,CADE,CAAN;IAGA,MAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;EACH;;EACD,IACIT,gDAAgD,CAACY,QAAjD,CAA0DP,IAA1D,KACAQ,KAAK,CAACC,OAAN,CAAcV,QAAQ,CAACW,IAAvB,CADA,IAEAX,QAAQ,CAACW,IAAT,CAAcC,MAAd,GAAuB,CAFvB,IAGA,CAACZ,QAAQ,CAACW,IAAT,CAAc,CAAd,EAAiBL,cAAjB,CAAgC,IAAhC,CAJL,EAKE;IACEJ,MAAM,CACF,2BAAoBD,IAApB,EAAwB,iJAAxB,EAAwBM,MAAxB,CAA0KN,IAA1K,EAA8K,GAA9K,CADE,CAAN;IAGA,MAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;EACH;;EACD,IACIV,8BAA8B,CAACa,QAA/B,CAAwCP,IAAxC,KACA,CAACD,QAAQ,CAACW,IAAT,CAAcL,cAAd,CAA6B,IAA7B,CAFL,EAGE;IACEJ,MAAM,CACF,2BAAoBD,IAApB,EAAwB,sIAAxB,EAAwBM,MAAxB,CAA+JN,IAA/J,EAAmK,GAAnK,CADE,CAAN;IAGA,MAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;EACH;;EACD,IACIP,6BAA6B,CAACU,QAA9B,CAAuCP,IAAvC,KACA,CAACD,QAAQ,CAACM,cAAT,CAAwB,OAAxB,CADD,IAEA,CAACN,QAAQ,CAACM,cAAT,CAAwB,UAAxB,CAHL,EAIE;IACEJ,MAAM,CACF,2BAAoBD,IAApB,EAAwB,8IAAxB,EAAwBM,MAAxB,CAAuKN,IAAvK,EAA2K,GAA3K,CADE,CAAN;IAGA,MAAM,IAAII,KAAJ,CAAU,qCAAV,CAAN;EACH;AACJ;;AAED,eAAeN,sBAAf","names":["fetchActionsWithRecordResponse","fetchActionsWithArrayOfIdentifiedRecordsResponse","fetchActionsWithArrayOfRecordsResponse","fetchActionsWithTotalResponse","validateResponseFormat","response","type","logger","console","error","Error","hasOwnProperty","concat","includes","Array","isArray","data","length"],"sources":["/var/www/a1boots/node_modules/ra-core/src/dataProvider/validateResponseFormat.ts"],"sourcesContent":["import {\n    fetchActionsWithRecordResponse,\n    fetchActionsWithArrayOfIdentifiedRecordsResponse,\n    fetchActionsWithArrayOfRecordsResponse,\n    fetchActionsWithTotalResponse,\n} from './dataFetchActions';\n\nfunction validateResponseFormat(\n    response,\n    type,\n    logger = console.error // eslint-disable-line no-console\n) {\n    if (!response) {\n        logger(`The dataProvider returned an empty response for '${type}'.`);\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (!response.hasOwnProperty('data')) {\n        logger(\n            `The response to '${type}' must be like { data: ... }, but the received response does not have a 'data' key. The dataProvider is probably wrong for '${type}'.`\n        );\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (\n        fetchActionsWithArrayOfRecordsResponse.includes(type) &&\n        !Array.isArray(response.data)\n    ) {\n        logger(\n            `The response to '${type}' must be like { data : [...] }, but the received data is not an array. The dataProvider is probably wrong for '${type}'`\n        );\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (\n        fetchActionsWithArrayOfIdentifiedRecordsResponse.includes(type) &&\n        Array.isArray(response.data) &&\n        response.data.length > 0 &&\n        !response.data[0].hasOwnProperty('id')\n    ) {\n        logger(\n            `The response to '${type}' must be like { data : [{ id: 123, ...}, ...] }, but the received data items do not have an 'id' key. The dataProvider is probably wrong for '${type}'`\n        );\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (\n        fetchActionsWithRecordResponse.includes(type) &&\n        !response.data.hasOwnProperty('id')\n    ) {\n        logger(\n            `The response to '${type}' must be like { data: { id: 123, ... } }, but the received data does not have an 'id' key. The dataProvider is probably wrong for '${type}'`\n        );\n        throw new Error('ra.notification.data_provider_error');\n    }\n    if (\n        fetchActionsWithTotalResponse.includes(type) &&\n        !response.hasOwnProperty('total') &&\n        !response.hasOwnProperty('pageInfo')\n    ) {\n        logger(\n            `The response to '${type}' must be like  { data: [...], total: 123 }, but the received response does not have a 'total' key. The dataProvider is probably wrong for '${type}'`\n        );\n        throw new Error('ra.notification.data_provider_error');\n    }\n}\n\nexport default validateResponseFormat;\n"]},"metadata":{},"sourceType":"module"}