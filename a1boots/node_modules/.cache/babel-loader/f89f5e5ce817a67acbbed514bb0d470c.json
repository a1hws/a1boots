{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport * as React from 'react';\nimport { createContext, isValidElement, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslate } from 'ra-core';\nimport set from 'lodash/set';\n/**\n * This hook provides support for suggestion creation in inputs which have choices.\n *\n * @param options The hook option\n * @param {ReactElement} options.create A react element which will be rendered when users choose to create a new choice. This component must call the `useCreateSuggestionContext` hook which provides `onCancel`, `onCreate` and `filter`. See the examples.\n * @param {String} options.createLabel Optional. The label for the choice item allowing users to create a new choice. Can be a translation key. Defaults to `ra.action.create`.\n * @param {String} options.createItemLabel Optional. The label for the choice item allowing users to create a new choice when they already entered a filter. Can be a translation key. The translation will receive an `item` parameter. Defaults to `ra.action.create_item`.\n * @param {any} options.createValue Optional. The value for the choice item allowing users to create a new choice. Defaults to `@@ra-create`.\n * @param {String} options.filter Optional. The filter users may have already entered. Useful for autocomplete inputs for example.\n * @param {OnCreateHandler} options.onCreate Optional. A function which will be called when users choose to create a new choice, if the `create` option wasn't provided.\n * @param {Function} options.handleChange A function to pass to the input. Receives the same parameter as the original event handler and an additional newItem parameter if a new item was create.\n * @returns {UseSupportCreateValue} An object with the following properties:\n * - getCreateItem: a function which will return the label of the choice for create a new choice.\n * - createElement: a React element to render after the input. It will be rendered when users choose to create a new choice. It renders null otherwise.\n */\n\nexport var useSupportCreateSuggestion = function (options) {\n  var create = options.create,\n      _a = options.createLabel,\n      createLabel = _a === void 0 ? 'ra.action.create' : _a,\n      _b = options.createItemLabel,\n      createItemLabel = _b === void 0 ? 'ra.action.create_item' : _b,\n      _c = options.createValue,\n      createValue = _c === void 0 ? '@@ra-create' : _c,\n      _d = options.optionText,\n      optionText = _d === void 0 ? 'name' : _d,\n      filter = options.filter,\n      handleChange = options.handleChange,\n      onCreate = options.onCreate;\n  var translate = useTranslate();\n\n  var _e = useState(false),\n      renderOnCreate = _e[0],\n      setRenderOnCreate = _e[1];\n\n  var filterRef = useRef(filter);\n  useEffect(function () {\n    if (filterRef.current !== filter && filter !== '') {\n      filterRef.current = filter;\n    }\n  }, [filter]);\n  var context = useMemo(function () {\n    return {\n      filter: filterRef.current,\n      onCancel: function () {\n        return setRenderOnCreate(false);\n      },\n      onCreate: function (item) {\n        setRenderOnCreate(false);\n        handleChange(item);\n      }\n    };\n  }, [handleChange]);\n  return {\n    createId: createValue,\n    getCreateItem: function () {\n      if (typeof optionText !== 'string') {\n        return {\n          id: createValue,\n          name: filter && createItemLabel ? translate(createItemLabel, {\n            item: filter,\n            _: createItemLabel\n          }) : translate(createLabel, {\n            _: createLabel\n          })\n        };\n      }\n\n      return set({\n        id: createValue\n      }, optionText, filter && createItemLabel ? translate(createItemLabel, {\n        item: filter,\n        _: createItemLabel\n      }) : translate(createLabel, {\n        _: createLabel\n      }));\n    },\n    handleChange: function (eventOrValue) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var value, finalValue, newSuggestion;\n\n        var _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              value = ((_a = eventOrValue === null || eventOrValue === void 0 ? void 0 : eventOrValue.target) === null || _a === void 0 ? void 0 : _a.value) || eventOrValue;\n              finalValue = Array.isArray(value) ? __spreadArray([], value, true).pop() : value;\n              if (!((finalValue === null || finalValue === void 0 ? void 0 : finalValue.id) === createValue || finalValue === createValue)) return [3\n              /*break*/\n              , 3];\n              if (!!isValidElement(create)) return [3\n              /*break*/\n              , 2];\n              return [4\n              /*yield*/\n              , onCreate(filter)];\n\n            case 1:\n              newSuggestion = _b.sent();\n\n              if (newSuggestion) {\n                handleChange(newSuggestion);\n                return [2\n                /*return*/\n                ];\n              }\n\n              return [3\n              /*break*/\n              , 3];\n\n            case 2:\n              setRenderOnCreate(true);\n              return [2\n              /*return*/\n              ];\n\n            case 3:\n              handleChange(eventOrValue);\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    },\n    createElement: renderOnCreate && isValidElement(create) ? React.createElement(CreateSuggestionContext.Provider, {\n      value: context\n    }, create) : null\n  };\n};\nvar CreateSuggestionContext = createContext(undefined);\nexport var useCreateSuggestionContext = function () {\n  return useContext(CreateSuggestionContext);\n};","map":{"version":3,"mappings":"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","names":["React","createContext","isValidElement","useContext","useEffect","useMemo","useRef","useState","useTranslate","set","useSupportCreateSuggestion","options","_a","createLabel","_b","createItemLabel","_c","createValue","_d","optionText","filter","handleChange","onCreate","translate","renderOnCreate","setRenderOnCreate","filterRef","current","context","onCancel","item","createId","getCreateItem","id","name","_","eventOrValue","value","target","finalValue","Array","isArray","__spreadArray","pop","create","newSuggestion","createElement","CreateSuggestionContext","Provider","undefined","useCreateSuggestionContext"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/input/useSupportCreateSuggestion.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n    ChangeEvent,\n    createContext,\n    isValidElement,\n    ReactElement,\n    useContext,\n    useEffect,\n    useMemo,\n    useRef,\n    useState,\n} from 'react';\nimport { Identifier, OptionText, useTranslate } from 'ra-core';\nimport set from 'lodash/set';\n\n/**\n * This hook provides support for suggestion creation in inputs which have choices.\n *\n * @param options The hook option\n * @param {ReactElement} options.create A react element which will be rendered when users choose to create a new choice. This component must call the `useCreateSuggestionContext` hook which provides `onCancel`, `onCreate` and `filter`. See the examples.\n * @param {String} options.createLabel Optional. The label for the choice item allowing users to create a new choice. Can be a translation key. Defaults to `ra.action.create`.\n * @param {String} options.createItemLabel Optional. The label for the choice item allowing users to create a new choice when they already entered a filter. Can be a translation key. The translation will receive an `item` parameter. Defaults to `ra.action.create_item`.\n * @param {any} options.createValue Optional. The value for the choice item allowing users to create a new choice. Defaults to `@@ra-create`.\n * @param {String} options.filter Optional. The filter users may have already entered. Useful for autocomplete inputs for example.\n * @param {OnCreateHandler} options.onCreate Optional. A function which will be called when users choose to create a new choice, if the `create` option wasn't provided.\n * @param {Function} options.handleChange A function to pass to the input. Receives the same parameter as the original event handler and an additional newItem parameter if a new item was create.\n * @returns {UseSupportCreateValue} An object with the following properties:\n * - getCreateItem: a function which will return the label of the choice for create a new choice.\n * - createElement: a React element to render after the input. It will be rendered when users choose to create a new choice. It renders null otherwise.\n */\nexport const useSupportCreateSuggestion = (\n    options: SupportCreateSuggestionOptions\n): UseSupportCreateValue => {\n    const {\n        create,\n        createLabel = 'ra.action.create',\n        createItemLabel = 'ra.action.create_item',\n        createValue = '@@ra-create',\n        optionText = 'name',\n        filter,\n        handleChange,\n        onCreate,\n    } = options;\n    const translate = useTranslate();\n    const [renderOnCreate, setRenderOnCreate] = useState(false);\n    const filterRef = useRef(filter);\n\n    useEffect(() => {\n        if (filterRef.current !== filter && filter !== '') {\n            filterRef.current = filter;\n        }\n    }, [filter]);\n\n    const context = useMemo(\n        () => ({\n            filter: filterRef.current,\n            onCancel: () => setRenderOnCreate(false),\n            onCreate: item => {\n                setRenderOnCreate(false);\n                handleChange(item);\n            },\n        }),\n        [handleChange]\n    );\n\n    return {\n        createId: createValue,\n        getCreateItem: () => {\n            if (typeof optionText !== 'string') {\n                return {\n                    id: createValue,\n                    name:\n                        filter && createItemLabel\n                            ? translate(createItemLabel, {\n                                  item: filter,\n                                  _: createItemLabel,\n                              })\n                            : translate(createLabel, { _: createLabel }),\n                };\n            }\n            return set(\n                {\n                    id: createValue,\n                },\n                optionText,\n                filter && createItemLabel\n                    ? translate(createItemLabel, {\n                          item: filter,\n                          _: createItemLabel,\n                      })\n                    : translate(createLabel, { _: createLabel })\n            );\n        },\n        handleChange: async (eventOrValue: MouseEvent | any) => {\n            const value = eventOrValue?.target?.value || eventOrValue;\n            const finalValue = Array.isArray(value) ? [...value].pop() : value;\n\n            if (finalValue?.id === createValue || finalValue === createValue) {\n                if (!isValidElement(create)) {\n                    const newSuggestion = await onCreate(filter);\n                    if (newSuggestion) {\n                        handleChange(newSuggestion);\n                        return;\n                    }\n                } else {\n                    setRenderOnCreate(true);\n                    return;\n                }\n            }\n            handleChange(eventOrValue);\n        },\n        createElement:\n            renderOnCreate && isValidElement(create) ? (\n                <CreateSuggestionContext.Provider value={context}>\n                    {create}\n                </CreateSuggestionContext.Provider>\n            ) : null,\n    };\n};\n\nexport interface SupportCreateSuggestionOptions {\n    create?: ReactElement;\n    createValue?: string;\n    createLabel?: string;\n    createItemLabel?: string;\n    filter?: string;\n    handleChange: (value: any) => void;\n    onCreate?: OnCreateHandler;\n    optionText?: OptionText;\n}\n\nexport interface UseSupportCreateValue {\n    createId: string;\n    getCreateItem: (\n        filterValue?: string\n    ) => { id: Identifier; [key: string]: any };\n    handleChange: (eventOrValue: ChangeEvent | any) => Promise<void>;\n    createElement: ReactElement | null;\n}\n\nconst CreateSuggestionContext = createContext<CreateSuggestionContextValue>(\n    undefined\n);\n\ninterface CreateSuggestionContextValue {\n    filter?: string;\n    onCreate: (choice: any) => void;\n    onCancel: () => void;\n}\nexport const useCreateSuggestionContext = () =>\n    useContext(CreateSuggestionContext);\n\nexport type OnCreateHandler = (filter?: string) => any | Promise<any>;\n"]},"metadata":{},"sourceType":"module"}