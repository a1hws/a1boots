{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useCreateController } from './useCreateController';\nimport { CreateContextProvider } from './CreateContextProvider';\nimport { ResourceContextProvider } from '../../core';\n/**\n * Call useCreateController and put the value in a CreateContext\n *\n * Base class for <Create> components, without UI.\n *\n * Accepts any props accepted by useCreateController:\n * - id: The record identifier\n * - resource: The resource\n *\n * @example // Custom edit layout\n *\n * const PostCreate = props => (\n *     <CreateBase {...props}>\n *         <Grid container>\n *             <Grid item xs={8}>\n *                 <SimpleForm>\n *                     ...\n *                 </SimpleForm>\n *             </Grid>\n *             <Grid item xs={4}>\n *                 Create instructions...\n *             </Grid>\n *         </Grid>\n *         <div>\n *             Post related links...\n *         </div>\n *     </CreateBase>\n * );\n */\n\nexport var CreateBase = function (_a) {\n  var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n\n  var controllerProps = useCreateController(props);\n  var body = React.createElement(CreateContextProvider, {\n    value: controllerProps\n  }, children);\n  return props.resource ? // support resource override via props\n  React.createElement(ResourceContextProvider, {\n    value: props.resource\n  }, body) : body;\n};","map":{"version":3,"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SACIC,mBADJ,QAGO,uBAHP;AAIA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA,SAASC,uBAAT,QAAwC,YAAxC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,OAAO,IAAMC,UAAU,GAAG,UAGxBC,EAHwB,EAQzB;EAJG,YAAQ,cAAR;EAAA,IACGC,KAAK,cAFV,YAEU,CADR;;EAKA,IAAMC,eAAe,GAAGN,mBAAmB,CAIzCK,KAJyC,CAA3C;EAKA,IAAME,IAAI,GACNR,oBAACE,qBAAD,EAAsB;IAACO,KAAK,EAAEF;EAAR,CAAtB,EACKG,QADL,CADJ;EAKA,OAAOJ,KAAK,CAACK,QAAN,GACH;EACAX,oBAACG,uBAAD,EAAwB;IAACM,KAAK,EAAEH,KAAK,CAACK;EAAd,CAAxB,EACKH,IADL,CAFG,GAMHA,IANJ;AAQH,CA3BM","names":["React","useCreateController","CreateContextProvider","ResourceContextProvider","CreateBase","_a","props","controllerProps","body","value","children","resource"],"sources":["/var/www/a1boots/node_modules/ra-core/src/controller/create/CreateBase.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactNode } from 'react';\nimport {\n    useCreateController,\n    CreateControllerProps,\n} from './useCreateController';\nimport { CreateContextProvider } from './CreateContextProvider';\nimport { Identifier, RaRecord } from '../../types';\nimport { ResourceContextProvider } from '../../core';\n\n/**\n * Call useCreateController and put the value in a CreateContext\n *\n * Base class for <Create> components, without UI.\n *\n * Accepts any props accepted by useCreateController:\n * - id: The record identifier\n * - resource: The resource\n *\n * @example // Custom edit layout\n *\n * const PostCreate = props => (\n *     <CreateBase {...props}>\n *         <Grid container>\n *             <Grid item xs={8}>\n *                 <SimpleForm>\n *                     ...\n *                 </SimpleForm>\n *             </Grid>\n *             <Grid item xs={4}>\n *                 Create instructions...\n *             </Grid>\n *         </Grid>\n *         <div>\n *             Post related links...\n *         </div>\n *     </CreateBase>\n * );\n */\nexport const CreateBase = <\n    RecordType extends Omit<RaRecord, 'id'> = any,\n    ResultRecordType extends RaRecord = RecordType & { id: Identifier }\n>({\n    children,\n    ...props\n}: CreateControllerProps<RecordType, Error, ResultRecordType> & {\n    children: ReactNode;\n}) => {\n    const controllerProps = useCreateController<\n        RecordType,\n        Error,\n        ResultRecordType\n    >(props);\n    const body = (\n        <CreateContextProvider value={controllerProps}>\n            {children}\n        </CreateContextProvider>\n    );\n    return props.resource ? (\n        // support resource override via props\n        <ResourceContextProvider value={props.resource}>\n            {body}\n        </ResourceContextProvider>\n    ) : (\n        body\n    );\n};\n"]},"metadata":{},"sourceType":"module"}