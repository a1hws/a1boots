{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroupContextProvider } from 'ra-core';\nimport { Stack } from '@mui/material';\nimport { FormTabHeader } from './FormTabHeader';\nexport var FormTab = function (props) {\n  var children = props.children,\n      className = props.className,\n      contentClassName = props.contentClassName,\n      count = props.count,\n      hidden = props.hidden,\n      icon = props.icon,\n      intent = props.intent,\n      label = props.label,\n      onChange = props.onChange,\n      path = props.path,\n      resource = props.resource,\n      syncWithLocation = props.syncWithLocation,\n      value = props.value,\n      rest = __rest(props, [\"children\", \"className\", \"contentClassName\", \"count\", \"hidden\", \"icon\", \"intent\", \"label\", \"onChange\", \"path\", \"resource\", \"syncWithLocation\", \"value\"]);\n\n  var renderHeader = function () {\n    return React.createElement(FormTabHeader, __assign({\n      label: label,\n      count: count,\n      value: value,\n      icon: icon,\n      className: className,\n      syncWithLocation: syncWithLocation,\n      onChange: onChange\n    }, sanitizeRestProps(rest)));\n  };\n\n  var renderContent = function () {\n    return React.createElement(FormGroupContextProvider, {\n      name: value.toString()\n    }, React.createElement(Stack, __assign({\n      alignItems: \"flex-start\",\n      style: hidden ? hiddenStyle : null,\n      className: contentClassName,\n      id: \"tabpanel-\".concat(value),\n      \"aria-labelledby\": \"tabheader-\".concat(value),\n      \"aria-hidden\": hidden || undefined\n    }, rest), children));\n  };\n\n  return intent === 'header' ? renderHeader() : renderContent();\n};\nFormTab.propTypes = {\n  className: PropTypes.string,\n  contentClassName: PropTypes.string,\n  children: PropTypes.node,\n  count: PropTypes.node,\n  intent: PropTypes.oneOf(['header', 'content']),\n  hidden: PropTypes.bool,\n  icon: PropTypes.element,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  path: PropTypes.string,\n  // @ts-ignore\n  resource: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nFormTab.displayName = 'FormTab';\nvar hiddenStyle = {\n  display: 'none'\n};\n\nvar sanitizeRestProps = function (_a) {\n  var classes = _a.classes,\n      ref = _a.ref,\n      margin = _a.margin,\n      rest = __rest(_a, [\"classes\", \"ref\", \"margin\"]);\n\n  return rest;\n};","map":{"version":3,"mappings":"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","names":["React","PropTypes","FormGroupContextProvider","Stack","FormTabHeader","FormTab","props","className","contentClassName","count","hidden","icon","intent","label","onChange","path","resource","syncWithLocation","value","rest","renderHeader","__assign","sanitizeRestProps","renderContent","name","toString","alignItems","style","hiddenStyle","id","undefined","children","propTypes","string","node","oneOf","bool","element","oneOfType","isRequired","number","displayName","display","_a","ref","margin"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/form/FormTab.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroupContextProvider } from 'ra-core';\nimport { Stack, StackProps, TabProps as MuiTabProps } from '@mui/material';\n\nimport { FormTabHeader } from './FormTabHeader';\n\nexport const FormTab = (props: FormTabProps) => {\n    const {\n        children,\n        className,\n        contentClassName,\n        count,\n        hidden,\n        icon,\n        intent,\n        label,\n        onChange,\n        path,\n        resource,\n        syncWithLocation,\n        value,\n        ...rest\n    } = props;\n\n    const renderHeader = () => (\n        <FormTabHeader\n            label={label}\n            count={count}\n            value={value}\n            icon={icon}\n            className={className}\n            syncWithLocation={syncWithLocation}\n            onChange={onChange}\n            {...sanitizeRestProps(rest)}\n        />\n    );\n\n    const renderContent = () => (\n        <FormGroupContextProvider name={value.toString()}>\n            <Stack\n                alignItems=\"flex-start\"\n                style={hidden ? hiddenStyle : null}\n                className={contentClassName}\n                id={`tabpanel-${value}`}\n                aria-labelledby={`tabheader-${value}`}\n                // Set undefined instead of false because WAI-ARIA Authoring Practices 1.1\n                // notes that aria-hidden=\"false\" currently behaves inconsistently across browsers.\n                aria-hidden={hidden || undefined}\n                {...rest}\n            >\n                {children}\n            </Stack>\n        </FormGroupContextProvider>\n    );\n\n    return intent === 'header' ? renderHeader() : renderContent();\n};\n\nFormTab.propTypes = {\n    className: PropTypes.string,\n    contentClassName: PropTypes.string,\n    children: PropTypes.node,\n    count: PropTypes.node,\n    intent: PropTypes.oneOf(['header', 'content']),\n    hidden: PropTypes.bool,\n    icon: PropTypes.element,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n        .isRequired,\n    path: PropTypes.string,\n    // @ts-ignore\n    resource: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nexport interface FormTabProps\n    extends Omit<StackProps, 'color'>,\n        Omit<MuiTabProps, 'children' | 'classes' | 'ref'> {\n    className?: string;\n    children?: ReactNode;\n    contentClassName?: string;\n    count?: ReactNode;\n    hidden?: boolean;\n    icon?: ReactElement;\n    intent?: 'header' | 'content';\n    label: string | ReactElement;\n    path?: string;\n    resource?: string;\n    syncWithLocation?: boolean;\n    value?: string | number;\n}\n\nFormTab.displayName = 'FormTab';\n\nconst hiddenStyle = { display: 'none' };\n\nconst sanitizeRestProps = ({\n    classes,\n    ref,\n    margin,\n    ...rest\n}: Omit<\n    FormTabProps,\n    | 'className'\n    | 'contentClassName'\n    | 'children'\n    | 'hidden'\n    | 'icon'\n    | 'intent'\n    | 'label'\n    | 'onChange'\n    | 'path'\n    | 'resource'\n    | 'syncWithLocation'\n    | 'value'\n>) => rest;\n"]},"metadata":{},"sourceType":"module"}