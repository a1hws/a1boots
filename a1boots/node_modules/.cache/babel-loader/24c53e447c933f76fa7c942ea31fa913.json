{"ast":null,"code":"var RA_STORE = 'RaStore'; // localStorage isn't available in incognito mode. We need to detect it\n\nvar testLocalStorage = function testLocalStorage() {\n  // eslint-disable-next-line eqeqeq\n  if (typeof window === 'undefined' || window.localStorage == undefined) {\n    return false;\n  }\n\n  try {\n    window.localStorage.setItem('test', 'test');\n    window.localStorage.removeItem('test');\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nvar localStorageAvailable = testLocalStorage();\n/**\n * Store using localStorage, or memory storage in incognito mode\n *\n * @example\n *\n * import { localStorageStore } from 'react-admin';\n *\n * const App = () => (\n *    <Admin store={localStorageStore()}>\n *       ...\n *   </Admin>\n * );\n */\n\nexport var localStorageStore = function localStorageStore(version, appKey) {\n  if (version === void 0) {\n    version = '1';\n  }\n\n  if (appKey === void 0) {\n    appKey = '';\n  }\n\n  var prefix = \"\".concat(RA_STORE).concat(appKey);\n  var prefixLength = prefix.length;\n  var subscriptions = {};\n\n  var publish = function publish(key, value) {\n    Object.keys(subscriptions).forEach(function (id) {\n      if (!subscriptions[id]) return; // may happen if a component unmounts after a first subscriber was notified\n\n      if (subscriptions[id].key === key) {\n        subscriptions[id].callback(value);\n      }\n    });\n  }; // Whenever the local storage changes in another document, look for matching subscribers.\n  // This allows to synchronize state across tabs\n\n\n  var onLocalStorageChange = function onLocalStorageChange(event) {\n    var _a;\n\n    if (((_a = event.key) === null || _a === void 0 ? void 0 : _a.substring(0, prefixLength)) !== prefix) {\n      return;\n    }\n\n    var key = event.key.substring(prefixLength + 1);\n    var value = event.newValue ? tryParse(event.newValue) : undefined;\n    Object.keys(subscriptions).forEach(function (id) {\n      if (!subscriptions[id]) return; // may happen if a component unmounts after a first subscriber was notified\n\n      if (subscriptions[id].key === key) {\n        if (value === null) {\n          // an event with a null value is sent when the key is deleted.\n          // to enable default value, we need to call setValue(undefined) instead of setValue(null)\n          subscriptions[id].callback(undefined);\n        } else {\n          subscriptions[id].callback(value == null ? undefined : value);\n        }\n      }\n    });\n  };\n\n  return {\n    setup: function setup() {\n      if (localStorageAvailable) {\n        var storedVersion = getStorage().getItem(\"\".concat(prefix, \".version\"));\n\n        if (storedVersion && storedVersion !== version) {\n          var storage_1 = getStorage();\n          Object.keys(storage_1).forEach(function (key) {\n            if (key.startsWith(prefix)) {\n              storage_1.removeItem(key);\n            }\n          });\n        }\n\n        getStorage().setItem(\"\".concat(prefix, \".version\"), version);\n        window.addEventListener('storage', onLocalStorageChange);\n      }\n    },\n    teardown: function teardown() {\n      if (localStorageAvailable) {\n        window.removeEventListener('storage', onLocalStorageChange);\n      }\n    },\n    getItem: function getItem(key, defaultValue) {\n      var valueFromStorage = getStorage().getItem(\"\".concat(prefix, \".\").concat(key)); // eslint-disable-next-line eqeqeq\n\n      return valueFromStorage == null ? defaultValue : tryParse(valueFromStorage);\n    },\n    setItem: function setItem(key, value) {\n      if (value === undefined) {\n        getStorage().removeItem(\"\".concat(prefix, \".\").concat(key));\n      } else {\n        getStorage().setItem(\"\".concat(prefix, \".\").concat(key), JSON.stringify(value));\n      }\n\n      publish(key, value);\n    },\n    removeItem: function removeItem(key) {\n      getStorage().removeItem(\"\".concat(prefix, \".\").concat(key));\n      publish(key, undefined);\n    },\n    removeItems: function removeItems(keyPrefix) {\n      var storage = getStorage();\n      Object.keys(storage).forEach(function (key) {\n        if (key.startsWith(\"\".concat(prefix, \".\").concat(keyPrefix))) {\n          storage.removeItem(key);\n          var publishKey = key.substring(prefixLength + 1);\n          publish(publishKey, undefined);\n        }\n      });\n    },\n    reset: function reset() {\n      var storage = getStorage();\n      Object.keys(storage).forEach(function (key) {\n        if (key.startsWith(prefix)) {\n          storage.removeItem(key);\n          var publishKey = key.substring(prefixLength + 1);\n          publish(publishKey, undefined);\n        }\n      });\n    },\n    subscribe: function subscribe(key, callback) {\n      var id = Math.random().toString();\n      subscriptions[id] = {\n        key: key,\n        callback: callback\n      };\n      return function () {\n        delete subscriptions[id];\n      };\n    }\n  };\n};\n\nvar tryParse = function tryParse(value) {\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    return value;\n  }\n};\n\nvar LocalStorageShim =\n/** @class */\nfunction () {\n  function LocalStorageShim() {\n    this.valuesMap = new Map();\n  }\n\n  LocalStorageShim.prototype.getItem = function (key) {\n    if (this.valuesMap.has(key)) {\n      return String(this.valuesMap.get(key));\n    }\n\n    return null;\n  };\n\n  LocalStorageShim.prototype.setItem = function (key, value) {\n    this.valuesMap.set(key, value);\n  };\n\n  LocalStorageShim.prototype.removeItem = function (key) {\n    this.valuesMap.delete(key);\n  };\n\n  LocalStorageShim.prototype.removeItems = function (keyPrefix) {\n    var _this = this;\n\n    this.valuesMap.forEach(function (value, key) {\n      if (key.startsWith(keyPrefix)) {\n        _this.valuesMap.delete(key);\n      }\n    });\n  };\n\n  LocalStorageShim.prototype.clear = function () {\n    this.valuesMap.clear();\n  };\n\n  LocalStorageShim.prototype.key = function (i) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'key' on 'Storage': 1 argument required, but only 0 present.\"); // this is a TypeError implemented on Chrome, Firefox throws Not enough arguments to Storage.key.\n    }\n\n    var arr = Array.from(this.valuesMap.keys());\n    return arr[i];\n  };\n\n  Object.defineProperty(LocalStorageShim.prototype, \"length\", {\n    get: function get() {\n      return this.valuesMap.size;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return LocalStorageShim;\n}();\n\nvar memoryStorage = new LocalStorageShim();\nexport var getStorage = function getStorage() {\n  return localStorageAvailable ? window.localStorage : memoryStorage;\n};","map":{"version":3,"mappings":"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","names":["RA_STORE","testLocalStorage","window","localStorage","undefined","setItem","removeItem","e","localStorageAvailable","localStorageStore","version","appKey","prefix","concat","prefixLength","length","subscriptions","publish","key","value","Object","keys","forEach","id","callback","onLocalStorageChange","event","_a","substring","newValue","tryParse","setup","storedVersion","getStorage","getItem","storage_1","startsWith","addEventListener","teardown","removeEventListener","defaultValue","valueFromStorage","JSON","stringify","removeItems","keyPrefix","storage","publishKey","reset","subscribe","Math","random","toString","parse","Map","LocalStorageShim","valuesMap","has","String","get","set","delete","_this","clear","i","arguments","TypeError","arr","Array","from","size","memoryStorage"],"sources":["/var/www/a1boots/node_modules/ra-core/src/store/localStorageStore.ts"],"sourcesContent":["import { Store } from './types';\n\ntype Subscription = {\n    key: string;\n    callback: (value: any) => void;\n};\n\nconst RA_STORE = 'RaStore';\n\n// localStorage isn't available in incognito mode. We need to detect it\nconst testLocalStorage = () => {\n    // eslint-disable-next-line eqeqeq\n    if (typeof window === 'undefined' || window.localStorage == undefined) {\n        return false;\n    }\n\n    try {\n        window.localStorage.setItem('test', 'test');\n        window.localStorage.removeItem('test');\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nlet localStorageAvailable = testLocalStorage();\n\n/**\n * Store using localStorage, or memory storage in incognito mode\n *\n * @example\n *\n * import { localStorageStore } from 'react-admin';\n *\n * const App = () => (\n *    <Admin store={localStorageStore()}>\n *       ...\n *   </Admin>\n * );\n */\nexport const localStorageStore = (\n    version: string = '1',\n    appKey: string = ''\n): Store => {\n    const prefix = `${RA_STORE}${appKey}`;\n    const prefixLength = prefix.length;\n    const subscriptions: { [key: string]: Subscription } = {};\n    const publish = (key: string, value: any) => {\n        Object.keys(subscriptions).forEach(id => {\n            if (!subscriptions[id]) return; // may happen if a component unmounts after a first subscriber was notified\n            if (subscriptions[id].key === key) {\n                subscriptions[id].callback(value);\n            }\n        });\n    };\n\n    // Whenever the local storage changes in another document, look for matching subscribers.\n    // This allows to synchronize state across tabs\n    const onLocalStorageChange = (event: StorageEvent): void => {\n        if (event.key?.substring(0, prefixLength) !== prefix) {\n            return;\n        }\n        const key = event.key.substring(prefixLength + 1);\n        const value = event.newValue ? tryParse(event.newValue) : undefined;\n        Object.keys(subscriptions).forEach(id => {\n            if (!subscriptions[id]) return; // may happen if a component unmounts after a first subscriber was notified\n            if (subscriptions[id].key === key) {\n                if (value === null) {\n                    // an event with a null value is sent when the key is deleted.\n                    // to enable default value, we need to call setValue(undefined) instead of setValue(null)\n                    subscriptions[id].callback(undefined);\n                } else {\n                    subscriptions[id].callback(\n                        value == null ? undefined : value\n                    );\n                }\n            }\n        });\n    };\n\n    return {\n        setup: () => {\n            if (localStorageAvailable) {\n                const storedVersion = getStorage().getItem(`${prefix}.version`);\n                if (storedVersion && storedVersion !== version) {\n                    const storage = getStorage();\n                    Object.keys(storage).forEach(key => {\n                        if (key.startsWith(prefix)) {\n                            storage.removeItem(key);\n                        }\n                    });\n                }\n                getStorage().setItem(`${prefix}.version`, version);\n                window.addEventListener('storage', onLocalStorageChange);\n            }\n        },\n        teardown: () => {\n            if (localStorageAvailable) {\n                window.removeEventListener('storage', onLocalStorageChange);\n            }\n        },\n        getItem<T = any>(key: string, defaultValue?: T): T {\n            const valueFromStorage = getStorage().getItem(`${prefix}.${key}`);\n\n            // eslint-disable-next-line eqeqeq\n            return valueFromStorage == null\n                ? defaultValue\n                : tryParse(valueFromStorage);\n        },\n        setItem<T = any>(key: string, value: T): void {\n            if (value === undefined) {\n                getStorage().removeItem(`${prefix}.${key}`);\n            } else {\n                getStorage().setItem(`${prefix}.${key}`, JSON.stringify(value));\n            }\n            publish(key, value);\n        },\n        removeItem(key: string): void {\n            getStorage().removeItem(`${prefix}.${key}`);\n            publish(key, undefined);\n        },\n        removeItems(keyPrefix: string): void {\n            const storage = getStorage();\n            Object.keys(storage).forEach(key => {\n                if (key.startsWith(`${prefix}.${keyPrefix}`)) {\n                    storage.removeItem(key);\n                    const publishKey = key.substring(prefixLength + 1);\n                    publish(publishKey, undefined);\n                }\n            });\n        },\n        reset(): void {\n            const storage = getStorage();\n            Object.keys(storage).forEach(key => {\n                if (key.startsWith(prefix)) {\n                    storage.removeItem(key);\n                    const publishKey = key.substring(prefixLength + 1);\n                    publish(publishKey, undefined);\n                }\n            });\n        },\n        subscribe: (key: string, callback: (value: string) => void) => {\n            const id = Math.random().toString();\n            subscriptions[id] = {\n                key,\n                callback,\n            };\n            return () => {\n                delete subscriptions[id];\n            };\n        },\n    };\n};\n\nconst tryParse = (value: string): any => {\n    try {\n        return JSON.parse(value);\n    } catch (e) {\n        return value;\n    }\n};\nclass LocalStorageShim {\n    valuesMap: any = new Map();\n\n    getItem(key: string) {\n        if (this.valuesMap.has(key)) {\n            return String(this.valuesMap.get(key));\n        }\n        return null;\n    }\n\n    setItem(key: string, value: string) {\n        this.valuesMap.set(key, value);\n    }\n\n    removeItem(key: string) {\n        this.valuesMap.delete(key);\n    }\n\n    removeItems(keyPrefix: string) {\n        this.valuesMap.forEach((value, key) => {\n            if (key.startsWith(keyPrefix)) {\n                this.valuesMap.delete(key);\n            }\n        });\n    }\n\n    clear() {\n        this.valuesMap.clear();\n    }\n\n    key(i): string {\n        if (arguments.length === 0) {\n            throw new TypeError(\n                \"Failed to execute 'key' on 'Storage': 1 argument required, but only 0 present.\"\n            ); // this is a TypeError implemented on Chrome, Firefox throws Not enough arguments to Storage.key.\n        }\n        const arr = Array.from(this.valuesMap.keys()) as string[];\n        return arr[i];\n    }\n\n    get length() {\n        return this.valuesMap.size;\n    }\n}\nconst memoryStorage = new LocalStorageShim();\n\nexport const getStorage = () => {\n    return localStorageAvailable ? window.localStorage : memoryStorage;\n};\n"]},"metadata":{},"sourceType":"module"}