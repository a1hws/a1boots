{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { Toolbar as MuiToolbar, useMediaQuery } from '@mui/material';\nimport clsx from 'clsx';\nimport { SaveButton, DeleteButton } from '../button';\n/**\n * The Toolbar displayed at the bottom of forms.\n *\n * @example Always enable the <SaveButton />\n *\n * import * as React from 'react';\n * import {\n *     Create,\n *     DateInput,\n *     TextInput,\n *     SimpleForm,\n *     Toolbar,\n *     SaveButton,\n *     required,\n * } from 'react-admin';\n *\n * const now = new Date();\n * const defaultSort = { field: 'title', order: 'ASC' };\n *\n * const MyToolbar = props => (\n *     <Toolbar {...props} >\n *         <SaveButton alwaysEnable />\n *     </Toolbar>\n * );\n *\n * const CommentCreate = () => (\n *     <Create>\n *         <SimpleForm redirect={false} toolbar={<MyToolbar />}>\n *             <TextInput\n *                 source=\"author.name\"\n *                 fullWidth\n *             />\n *             <DateInput source=\"created_at\" defaultValue={now} />\n *             <TextInput source=\"body\" fullWidth={true} multiline={true} />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by the <SimpleForm>)\n * @prop {ReactElement[]} children Customize the buttons you want to display in the <Toolbar>.\n *\n */\n\nexport var Toolbar = function Toolbar(props) {\n  var _a;\n\n  var children = props.children,\n      className = props.className,\n      resource = props.resource,\n      rest = __rest(props, [\"children\", \"className\", \"resource\"]);\n\n  var isXs = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('sm');\n  });\n  return React.createElement(StyledToolbar, __assign({\n    className: clsx((_a = {}, _a[ToolbarClasses.mobileToolbar] = isXs, _a[ToolbarClasses.desktopToolbar] = !isXs, _a), className),\n    role: \"toolbar\"\n  }, rest), Children.count(children) === 0 ? React.createElement(\"div\", {\n    className: ToolbarClasses.defaultToolbar\n  }, React.createElement(SaveButton, null), React.createElement(DeleteButton, {\n    resource: resource\n  })) : children);\n};\nToolbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  resource: PropTypes.string\n};\nvar PREFIX = 'RaToolbar';\nexport var ToolbarClasses = {\n  desktopToolbar: \"\".concat(PREFIX, \"-desktopToolbar\"),\n  mobileToolbar: \"\".concat(PREFIX, \"-mobileToolbar\"),\n  defaultToolbar: \"\".concat(PREFIX, \"-defaultToolbar\")\n};\nvar StyledToolbar = styled(MuiToolbar, {\n  name: PREFIX,\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {\n    backgroundColor: theme.palette.mode === 'light' ? theme.palette.grey[100] : theme.palette.grey[900]\n  }, _b[\"&.\".concat(ToolbarClasses.desktopToolbar)] = {}, _b[\"&.\".concat(ToolbarClasses.mobileToolbar)] = {\n    position: 'fixed',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: '16px',\n    width: '100%',\n    boxSizing: 'border-box',\n    flexShrink: 0,\n    zIndex: 2\n  }, _b[\"& .\".concat(ToolbarClasses.defaultToolbar)] = {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'space-between'\n  }, _b;\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACIC,OAAO,IAAIC,UADf,EAGIC,aAHJ,QAKO,eALP;AAMA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA,OAAO,IAAML,OAAO,GAAG,SAAVA,OAAU,CAACM,KAAD,EAAoB;;;EAC/B,YAAQ,GAAmCA,KAAK,SAAhD;EAAA,IAAUC,SAAS,GAAwBD,KAAK,UAAhD;EAAA,IAAqBE,QAAQ,GAAcF,KAAK,SAAhD;EAAA,IAAkCG,IAAI,UAAKH,KAAL,EAAxC,qCAAwC,CAAtC;;EAER,IAAMI,IAAI,GAAGR,aAAa,CAAQ,iBAAK;IAAI,YAAK,CAACS,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB;EAA4B,CAA7C,CAA1B;EAEA,OACIhB,oBAACiB,aAAD,EAAcC;IACVP,SAAS,EAAEJ,IAAI,WAEPY,GAACC,cAAc,CAACC,aAAhB,IAAgCP,IAFzB,EAGPK,GAACC,cAAc,CAACE,cAAhB,IAAiC,CAACR,IAH3B,OAKXH,SALW,CADL;IAQVY,IAAI,EAAC;EARK,GASNV,IATM,CAAd,EAWKX,QAAQ,CAACsB,KAAT,CAAeC,QAAf,MAA6B,CAA7B,GACGzB;IAAKW,SAAS,EAAES,cAAc,CAACM;EAA/B,GACI1B,oBAACQ,UAAD,EAAW,IAAX,CADJ,EAEIR,oBAACS,YAAD,EAAa;IAACG,QAAQ,EAAEA;EAAX,CAAb,CAFJ,CADH,GAMGa,QAjBR,CADJ;AAsBH,CA3BM;AAmCPrB,OAAO,CAACuB,SAAR,GAAoB;EAChBF,QAAQ,EAAEtB,SAAS,CAACyB,IADJ;EAEhBjB,SAAS,EAAER,SAAS,CAAC0B,MAFL;EAIhBjB,QAAQ,EAAET,SAAS,CAAC0B;AAJJ,CAApB;AAOA,IAAMC,MAAM,GAAG,WAAf;AAEA,OAAO,IAAMV,cAAc,GAAG;EAC1BE,cAAc,EAAE,UAAGQ,MAAH,EAAS,iBAAT,CADU;EAE1BT,aAAa,EAAE,UAAGS,MAAH,EAAS,gBAAT,CAFW;EAG1BJ,cAAc,EAAE,UAAGI,MAAH,EAAS,iBAAT;AAHU,CAAvB;AAMP,IAAMb,aAAa,GAAGhB,MAAM,CAACI,UAAD,EAAa;EACrC0B,IAAI,EAAED,MAD+B;EAErCE,iBAAiB,EAAE,2BAACtB,KAAD,EAAQuB,MAAR,EAAc;IAAK,aAAM,CAACC,IAAP;EAAW;AAFZ,CAAb,CAAN,CAGnB,UAACf,EAAD,EAAU;;;MAAPgB,KAAK;EAAO;IACdC,eAAe,EACXD,KAAK,CAACE,OAAN,CAAcC,IAAd,KAAuB,OAAvB,GACMH,KAAK,CAACE,OAAN,CAAcE,IAAd,CAAmB,GAAnB,CADN,GAEMJ,KAAK,CAACE,OAAN,CAAcE,IAAd,CAAmB,GAAnB;EAJI,GAMdC,GAAC,YAAKpB,cAAc,CAACE,cAApB,CAAD,IAAwC,EAN1B,EAQdkB,GAAC,YAAKpB,cAAc,CAACC,aAApB,CAAD,IAAuC;IACnCoB,QAAQ,EAAE,OADyB;IAEnCC,MAAM,EAAE,CAF2B;IAGnCC,IAAI,EAAE,CAH6B;IAInCC,KAAK,EAAE,CAJ4B;IAKnCC,OAAO,EAAE,MAL0B;IAMnCC,KAAK,EAAE,MAN4B;IAOnCC,SAAS,EAAE,YAPwB;IAQnCC,UAAU,EAAE,CARuB;IASnCC,MAAM,EAAE;EAT2B,CARzB,EAoBdT,GAAC,aAAMpB,cAAc,CAACM,cAArB,CAAD,IAAyC;IACrCwB,IAAI,EAAE,CAD+B;IAErCC,OAAO,EAAE,MAF4B;IAGrCC,cAAc,EAAE;EAHqB,CApB3B;AAyBhB,CA5BoB,CAAtB","names":["React","styled","Children","PropTypes","Toolbar","MuiToolbar","useMediaQuery","clsx","SaveButton","DeleteButton","props","className","resource","rest","isXs","breakpoints","down","StyledToolbar","__assign","_a","ToolbarClasses","mobileToolbar","desktopToolbar","role","count","children","defaultToolbar","propTypes","node","string","PREFIX","name","overridesResolver","styles","root","theme","backgroundColor","palette","mode","grey","_b","position","bottom","left","right","padding","width","boxSizing","flexShrink","zIndex","flex","display","justifyContent"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/form/Toolbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Children, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Toolbar as MuiToolbar,\n    ToolbarProps as MuiToolbarProps,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\nimport clsx from 'clsx';\n\nimport { SaveButton, DeleteButton } from '../button';\n\n/**\n * The Toolbar displayed at the bottom of forms.\n *\n * @example Always enable the <SaveButton />\n *\n * import * as React from 'react';\n * import {\n *     Create,\n *     DateInput,\n *     TextInput,\n *     SimpleForm,\n *     Toolbar,\n *     SaveButton,\n *     required,\n * } from 'react-admin';\n *\n * const now = new Date();\n * const defaultSort = { field: 'title', order: 'ASC' };\n *\n * const MyToolbar = props => (\n *     <Toolbar {...props} >\n *         <SaveButton alwaysEnable />\n *     </Toolbar>\n * );\n *\n * const CommentCreate = () => (\n *     <Create>\n *         <SimpleForm redirect={false} toolbar={<MyToolbar />}>\n *             <TextInput\n *                 source=\"author.name\"\n *                 fullWidth\n *             />\n *             <DateInput source=\"created_at\" defaultValue={now} />\n *             <TextInput source=\"body\" fullWidth={true} multiline={true} />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * @typedef {Object} Props the props you can use (other props are injected by the <SimpleForm>)\n * @prop {ReactElement[]} children Customize the buttons you want to display in the <Toolbar>.\n *\n */\nexport const Toolbar = (props: ToolbarProps) => {\n    const { children, className, resource, ...rest } = props;\n\n    const isXs = useMediaQuery<Theme>(theme => theme.breakpoints.down('sm'));\n\n    return (\n        <StyledToolbar\n            className={clsx(\n                {\n                    [ToolbarClasses.mobileToolbar]: isXs,\n                    [ToolbarClasses.desktopToolbar]: !isXs,\n                },\n                className\n            )}\n            role=\"toolbar\"\n            {...rest}\n        >\n            {Children.count(children) === 0 ? (\n                <div className={ToolbarClasses.defaultToolbar}>\n                    <SaveButton />\n                    <DeleteButton resource={resource} />\n                </div>\n            ) : (\n                children\n            )}\n        </StyledToolbar>\n    );\n};\n\nexport interface ToolbarProps extends Omit<MuiToolbarProps, 'classes'> {\n    children?: ReactNode;\n    className?: string;\n    resource?: string;\n}\n\nToolbar.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n\n    resource: PropTypes.string,\n};\n\nconst PREFIX = 'RaToolbar';\n\nexport const ToolbarClasses = {\n    desktopToolbar: `${PREFIX}-desktopToolbar`,\n    mobileToolbar: `${PREFIX}-mobileToolbar`,\n    defaultToolbar: `${PREFIX}-defaultToolbar`,\n};\n\nconst StyledToolbar = styled(MuiToolbar, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    backgroundColor:\n        theme.palette.mode === 'light'\n            ? theme.palette.grey[100]\n            : theme.palette.grey[900],\n\n    [`&.${ToolbarClasses.desktopToolbar}`]: {},\n\n    [`&.${ToolbarClasses.mobileToolbar}`]: {\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        padding: '16px',\n        width: '100%',\n        boxSizing: 'border-box',\n        flexShrink: 0,\n        zIndex: 2,\n    },\n\n    [`& .${ToolbarClasses.defaultToolbar}`]: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n}));\n"]},"metadata":{},"sourceType":"module"}