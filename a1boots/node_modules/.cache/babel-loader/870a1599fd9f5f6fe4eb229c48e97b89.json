{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useEffect, useReducer, useCallback, useRef } from 'react';\n\nvar paginationReducer = function paginationReducer(prevState, nextState) {\n  return __assign(__assign({}, prevState), nextState);\n};\n\nvar defaultPagination = {\n  page: 1,\n  perPage: 25\n};\n/**\n * Hooks to provide pagination state (page and perPage)\n *\n * @example\n *\n * const { page, setPage, perPage, setPerPage } = usePagination(initialPerPage);\n *\n * @param {number} initialPagination the initial value per page\n * @returns {PaginationHookResult} The pagination props\n */\n\nexport default (function (initialPagination) {\n  if (initialPagination === void 0) {\n    initialPagination = {};\n  }\n\n  var _a = useReducer(paginationReducer, __assign(__assign({}, defaultPagination), initialPagination)),\n      pagination = _a[0],\n      setPagination = _a[1];\n\n  var isFirstRender = useRef(true);\n  var setPerPage = useCallback(function (perPage) {\n    return setPagination({\n      perPage: perPage,\n      page: 1\n    });\n  }, []);\n  var setPage = useCallback(function (page) {\n    return setPagination({\n      page: page\n    });\n  }, []);\n  useEffect(function () {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n\n    setPerPage(initialPagination.perPage || 25);\n  }, [initialPagination.perPage, setPerPage]);\n  return {\n    page: pagination.page,\n    perPage: pagination.perPage,\n    pagination: pagination,\n    setPage: setPage,\n    setPerPage: setPerPage,\n    setPagination: setPagination\n  };\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,WAAhC,EAA6CC,MAA7C,QAA2D,OAA3D;;AAqBA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CACtBC,SADsB,EAEtBC,SAFsB,EAEe;EAErC,6BACOD,SADP,GAEOC,SAFP;AAIH,CARD;;AAUA,IAAMC,iBAAiB,GAAG;EACtBC,IAAI,EAAE,CADgB;EAEtBC,OAAO,EAAE;AAFa,CAA1B;AAKA;;;;;;;;;;;AAUA,gBAAe,UACXC,iBADW,EACgD;EAA3D;IAAAA;EAA2D;;EAErD,SAA8BT,UAAU,CAACG,iBAAD,EAAkBO,sBACzDJ,iBADyD,GAEzDG,iBAFyD,CAAlB,CAAxC;EAAA,IAACE,UAAU,QAAX;EAAA,IAAaC,aAAa,QAA1B;;EAIN,IAAMC,aAAa,GAAGX,MAAM,CAAC,IAAD,CAA5B;EAEA,IAAMY,UAAU,GAAGb,WAAW,CAC1B,mBAAO;IAAI,oBAAa,CAAC;MAAEO,OAAO,SAAT;MAAWD,IAAI,EAAE;IAAjB,CAAD,CAAb;EAAmC,CADpB,EAE1B,EAF0B,CAA9B;EAIA,IAAMQ,OAAO,GAAGd,WAAW,CAAC,gBAAI;IAAI,oBAAa,CAAC;MAAEM,IAAI;IAAN,CAAD,CAAb;EAAuB,CAAhC,EAAkC,EAAlC,CAA3B;EAEAR,SAAS,CAAC;IACN,IAAIc,aAAa,CAACG,OAAlB,EAA2B;MACvBH,aAAa,CAACG,OAAd,GAAwB,KAAxB;MACA;IACH;;IACDF,UAAU,CAACL,iBAAiB,CAACD,OAAlB,IAA6B,EAA9B,CAAV;EACH,CANQ,EAMN,CAACC,iBAAiB,CAACD,OAAnB,EAA4BM,UAA5B,CANM,CAAT;EAQA,OAAO;IACHP,IAAI,EAAEI,UAAU,CAACJ,IADd;IAEHC,OAAO,EAAEG,UAAU,CAACH,OAFjB;IAGHG,UAAU,YAHP;IAIHI,OAAO,SAJJ;IAKHD,UAAU,YALP;IAMHF,aAAa;EANV,CAAP;AAQH,CA/BD","names":["useEffect","useReducer","useCallback","useRef","paginationReducer","prevState","nextState","defaultPagination","page","perPage","initialPagination","__assign","pagination","setPagination","isFirstRender","setPerPage","setPage","current"],"sources":["/var/www/a1boots/node_modules/ra-core/src/controller/usePaginationState.ts"],"sourcesContent":["import { useEffect, useReducer, useCallback, useRef } from 'react';\nimport { PaginationPayload } from '../types';\n\n/**\n * @typedef PaginationProps\n * @type {Object}\n * @property {number} page: The page number.\n * @property {number} perPage: The number of item per page.\n * @property {Function} setPage: Set the page number\n * @property {Function} setPerPage: Set the per page number\n * @property {Function} setPagination: Set page and perPage pagination numbers\n */\nexport interface PaginationHookResult {\n    page: number;\n    perPage: number;\n    pagination: PaginationPayload;\n    setPage: (page: number) => void;\n    setPerPage: (perPage: number) => void;\n    setPagination: (pagination: PaginationPayload) => void;\n}\n\nconst paginationReducer = (\n    prevState: PaginationPayload,\n    nextState: Partial<PaginationPayload>\n): PaginationPayload => {\n    return {\n        ...prevState,\n        ...nextState,\n    };\n};\n\nconst defaultPagination = {\n    page: 1,\n    perPage: 25,\n};\n\n/**\n * Hooks to provide pagination state (page and perPage)\n *\n * @example\n *\n * const { page, setPage, perPage, setPerPage } = usePagination(initialPerPage);\n *\n * @param {number} initialPagination the initial value per page\n * @returns {PaginationHookResult} The pagination props\n */\nexport default (\n    initialPagination: { perPage?: number; page?: number } = {}\n): PaginationHookResult => {\n    const [pagination, setPagination] = useReducer(paginationReducer, {\n        ...defaultPagination,\n        ...initialPagination,\n    });\n    const isFirstRender = useRef(true);\n\n    const setPerPage = useCallback(\n        perPage => setPagination({ perPage, page: 1 }),\n        []\n    );\n    const setPage = useCallback(page => setPagination({ page }), []);\n\n    useEffect(() => {\n        if (isFirstRender.current) {\n            isFirstRender.current = false;\n            return;\n        }\n        setPerPage(initialPagination.perPage || 25);\n    }, [initialPagination.perPage, setPerPage]);\n\n    return {\n        page: pagination.page,\n        perPage: pagination.perPage,\n        pagination,\n        setPage,\n        setPerPage,\n        setPagination,\n    };\n};\n"]},"metadata":{},"sourceType":"module"}