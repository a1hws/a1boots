{"ast":null,"code":"import { createContext } from 'react';\n/**\n * Context to store the result of the useEditController() hook.\n *\n * Use the useEditContext() hook to read the context. That's what the Edit components do in react-admin.\n *\n * @example\n *\n * import { useEditController, EditContextProvider } from 'ra-core';\n *\n * const Edit = props => {\n *     const controllerProps = useEditController(props);\n *     return (\n *         <EditContextProvider value={controllerProps}>\n *             ...\n *         </EditContextProvider>\n *     );\n * };\n */\n\nexport var EditContext = createContext({\n  record: null,\n  defaultTitle: null,\n  isFetching: null,\n  isLoading: null,\n  mutationMode: null,\n  redirect: null,\n  refetch: null,\n  resource: null,\n  save: null,\n  saving: null,\n  registerMutationMiddleware: null,\n  unregisterMutationMiddleware: null\n});\nEditContext.displayName = 'EditContext';","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AAGA;;;;;;;;;;;;;;;;;;;AAkBA,OAAO,IAAMC,WAAW,GAAGD,aAAa,CAAuB;EAC3DE,MAAM,EAAE,IADmD;EAE3DC,YAAY,EAAE,IAF6C;EAG3DC,UAAU,EAAE,IAH+C;EAI3DC,SAAS,EAAE,IAJgD;EAK3DC,YAAY,EAAE,IAL6C;EAM3DC,QAAQ,EAAE,IANiD;EAO3DC,OAAO,EAAE,IAPkD;EAQ3DC,QAAQ,EAAE,IARiD;EAS3DC,IAAI,EAAE,IATqD;EAU3DC,MAAM,EAAE,IAVmD;EAW3DC,0BAA0B,EAAE,IAX+B;EAY3DC,4BAA4B,EAAE;AAZ6B,CAAvB,CAAjC;AAePZ,WAAW,CAACa,WAAZ,GAA0B,aAA1B","names":["createContext","EditContext","record","defaultTitle","isFetching","isLoading","mutationMode","redirect","refetch","resource","save","saving","registerMutationMiddleware","unregisterMutationMiddleware","displayName"],"sources":["/var/www/a1boots/node_modules/ra-core/src/controller/edit/EditContext.tsx"],"sourcesContent":["import { createContext } from 'react';\nimport { EditControllerResult } from './useEditController';\n\n/**\n * Context to store the result of the useEditController() hook.\n *\n * Use the useEditContext() hook to read the context. That's what the Edit components do in react-admin.\n *\n * @example\n *\n * import { useEditController, EditContextProvider } from 'ra-core';\n *\n * const Edit = props => {\n *     const controllerProps = useEditController(props);\n *     return (\n *         <EditContextProvider value={controllerProps}>\n *             ...\n *         </EditContextProvider>\n *     );\n * };\n */\nexport const EditContext = createContext<EditControllerResult>({\n    record: null,\n    defaultTitle: null,\n    isFetching: null,\n    isLoading: null,\n    mutationMode: null,\n    redirect: null,\n    refetch: null,\n    resource: null,\n    save: null,\n    saving: null,\n    registerMutationMiddleware: null,\n    unregisterMutationMiddleware: null,\n});\n\nEditContext.displayName = 'EditContext';\n"]},"metadata":{},"sourceType":"module"}