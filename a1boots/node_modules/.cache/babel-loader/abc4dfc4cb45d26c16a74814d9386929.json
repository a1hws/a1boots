{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button as MuiButton, Tooltip, IconButton, useMediaQuery } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useTranslate } from 'ra-core';\n/**\n * A generic Button with side icon. Only the icon is displayed on small screens.\n *\n * The component translates the label. Pass the icon as child.\n * The icon displays on the left side of the button by default. Set alignIcon prop to 'right' to inverse.\n *\n * @example\n *\n * <Button label=\"Edit\" color=\"secondary\" onClick={doEdit}>\n *   <ContentCreate />\n * </Button>\n *\n */\n\nexport var Button = function Button(props) {\n  var _a = props.alignIcon,\n      alignIcon = _a === void 0 ? 'left' : _a,\n      children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      label = props.label,\n      _b = props.color,\n      color = _b === void 0 ? 'primary' : _b,\n      _c = props.size,\n      size = _c === void 0 ? 'small' : _c,\n      locationDescriptor = props.to,\n      rest = __rest(props, [\"alignIcon\", \"children\", \"className\", \"disabled\", \"label\", \"color\", \"size\", \"to\"]);\n\n  var translate = useTranslate();\n  var translatedLabel = label ? translate(label, {\n    _: label\n  }) : undefined;\n  var linkParams = getLinkParams(locationDescriptor);\n  var isXSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('sm');\n  });\n  return isXSmall ? label && !disabled ? React.createElement(Tooltip, {\n    title: translatedLabel\n  }, React.createElement(IconButton, __assign({\n    \"aria-label\": translatedLabel,\n    className: className,\n    color: color,\n    size: \"large\"\n  }, rest, linkParams), children)) : React.createElement(IconButton, __assign({\n    className: className,\n    color: color,\n    disabled: disabled,\n    size: \"large\"\n  }, rest, linkParams), children) : React.createElement(StyledButton, __assign({\n    className: className,\n    color: color,\n    size: size,\n    \"aria-label\": translatedLabel,\n    disabled: disabled,\n    startIcon: alignIcon === 'left' && children ? children : undefined,\n    endIcon: alignIcon === 'right' && children ? children : undefined\n  }, rest, linkParams), translatedLabel);\n};\nButton.propTypes = {\n  alignIcon: PropTypes.oneOf(['left', 'right']),\n  children: PropTypes.element,\n  className: PropTypes.string,\n  color: PropTypes.oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  disabled: PropTypes.bool,\n  label: PropTypes.string,\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\n};\nvar PREFIX = 'RaButton';\nvar StyledButton = styled(MuiButton, {\n  name: PREFIX,\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})({\n  '&.MuiButton-sizeSmall': {\n    // fix for icon misalignment on small buttons, see https://github.com/mui/material-ui/pull/30240\n    lineHeight: 1.5\n  }\n});\n\nvar getLinkParams = function getLinkParams(locationDescriptor) {\n  // eslint-disable-next-line eqeqeq\n  if (locationDescriptor == undefined) {\n    return undefined;\n  }\n\n  if (typeof locationDescriptor === 'string') {\n    return {\n      to: locationDescriptor\n    };\n  }\n\n  var redirect = locationDescriptor.redirect,\n      replace = locationDescriptor.replace,\n      state = locationDescriptor.state,\n      to = __rest(locationDescriptor, [\"redirect\", \"replace\", \"state\"]);\n\n  return {\n    to: to,\n    redirect: redirect,\n    replace: replace,\n    state: state\n  };\n};","map":{"version":3,"mappings":"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","names":["React","PropTypes","Button","MuiButton","Tooltip","IconButton","useMediaQuery","styled","useTranslate","props","_a","children","className","disabled","label","_b","color","_c","size","locationDescriptor","rest","translate","translatedLabel","_","undefined","linkParams","getLinkParams","isXSmall","theme","breakpoints","down","title","__assign","StyledButton","startIcon","alignIcon","endIcon","propTypes","oneOf","element","string","oneOfType","bool","PREFIX","name","overridesResolver","styles","root","lineHeight","to","replace","state","redirect"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/button/Button.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, ElementType } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button as MuiButton,\n    ButtonProps as MuiButtonProps,\n    Tooltip,\n    IconButton,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useTranslate } from 'ra-core';\nimport { Path } from 'react-router';\n\n/**\n * A generic Button with side icon. Only the icon is displayed on small screens.\n *\n * The component translates the label. Pass the icon as child.\n * The icon displays on the left side of the button by default. Set alignIcon prop to 'right' to inverse.\n *\n * @example\n *\n * <Button label=\"Edit\" color=\"secondary\" onClick={doEdit}>\n *   <ContentCreate />\n * </Button>\n *\n */\nexport const Button = (props: ButtonProps) => {\n    const {\n        alignIcon = 'left',\n        children,\n        className,\n        disabled,\n        label,\n        color = 'primary',\n        size = 'small',\n        to: locationDescriptor,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n    const translatedLabel = label ? translate(label, { _: label }) : undefined;\n    const linkParams = getLinkParams(locationDescriptor);\n\n    const isXSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('sm')\n    );\n\n    return isXSmall ? (\n        label && !disabled ? (\n            <Tooltip title={translatedLabel}>\n                <IconButton\n                    aria-label={translatedLabel}\n                    className={className}\n                    color={color}\n                    size=\"large\"\n                    {...rest}\n                    {...linkParams}\n                >\n                    {children}\n                </IconButton>\n            </Tooltip>\n        ) : (\n            <IconButton\n                className={className}\n                color={color}\n                disabled={disabled}\n                size=\"large\"\n                {...rest}\n                {...linkParams}\n            >\n                {children}\n            </IconButton>\n        )\n    ) : (\n        <StyledButton\n            className={className}\n            color={color}\n            size={size}\n            aria-label={translatedLabel}\n            disabled={disabled}\n            startIcon={alignIcon === 'left' && children ? children : undefined}\n            endIcon={alignIcon === 'right' && children ? children : undefined}\n            {...rest}\n            {...linkParams}\n        >\n            {translatedLabel}\n        </StyledButton>\n    );\n};\n\ninterface Props {\n    alignIcon?: 'left' | 'right';\n    children?: ReactElement;\n    className?: string;\n    component?: ElementType;\n    to?: string | LocationDescriptor;\n    disabled?: boolean;\n    label?: string;\n    size?: 'small' | 'medium' | 'large';\n    variant?: string;\n}\n\nexport type ButtonProps = Props & MuiButtonProps;\n\nButton.propTypes = {\n    alignIcon: PropTypes.oneOf(['left', 'right']),\n    children: PropTypes.element,\n    className: PropTypes.string,\n    color: PropTypes.oneOfType([\n        PropTypes.oneOf([\n            'inherit',\n            'default',\n            'primary',\n            'secondary',\n            'error',\n            'info',\n            'success',\n            'warning',\n        ]),\n        PropTypes.string,\n    ]),\n    disabled: PropTypes.bool,\n    label: PropTypes.string,\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n};\n\nconst PREFIX = 'RaButton';\n\nconst StyledButton = styled(MuiButton, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})({\n    '&.MuiButton-sizeSmall': {\n        // fix for icon misalignment on small buttons, see https://github.com/mui/material-ui/pull/30240\n        lineHeight: 1.5,\n    },\n});\n\nconst getLinkParams = (locationDescriptor?: LocationDescriptor | string) => {\n    // eslint-disable-next-line eqeqeq\n    if (locationDescriptor == undefined) {\n        return undefined;\n    }\n\n    if (typeof locationDescriptor === 'string') {\n        return { to: locationDescriptor };\n    }\n\n    const { redirect, replace, state, ...to } = locationDescriptor;\n    return {\n        to,\n        redirect,\n        replace,\n        state,\n    };\n};\n\nexport type LocationDescriptor = Partial<Path> & {\n    redirect?: boolean;\n    state?: any;\n    replace?: boolean;\n};\n"]},"metadata":{},"sourceType":"module"}