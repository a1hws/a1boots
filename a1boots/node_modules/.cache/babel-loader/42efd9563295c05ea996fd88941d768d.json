{"ast":null,"code":"import * as React from 'react';\nimport { useMemo } from 'react';\nimport { useInRouterContext } from 'react-router-dom';\nimport { createHashHistory } from 'history';\nimport { HistoryRouter } from './HistoryRouter';\nimport { BasenameContextProvider } from './BasenameContextProvider';\n/**\n * Creates a react-router Router unless the app is already inside existing router.\n * Also creates a BasenameContext with the basename prop\n */\n\nexport var AdminRouter = function (_a) {\n  var history = _a.history,\n      _b = _a.basename,\n      basename = _b === void 0 ? '' : _b,\n      children = _a.children;\n  var isInRouter = useInRouterContext();\n  var Router = isInRouter ? DummyRouter : InternalRouter;\n  return React.createElement(BasenameContextProvider, {\n    basename: isInRouter ? basename : ''\n  }, React.createElement(Router, {\n    basename: basename,\n    history: history\n  }, children));\n};\n\nvar DummyRouter = function (_a) {\n  var children = _a.children;\n  return React.createElement(React.Fragment, null, children);\n};\n\nvar InternalRouter = function (_a) {\n  var children = _a.children,\n      history = _a.history;\n  var finalHistory = useMemo(function () {\n    return history || createHashHistory();\n  }, [history]);\n  return React.createElement(HistoryRouter, {\n    history: finalHistory\n  }, children);\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAoBC,OAApB,QAAmC,OAAnC;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,iBAAT,QAA2C,SAA3C;AAEA,SAASC,aAAT,QAAkD,iBAAlD;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AAEA;;;;;AAIA,OAAO,IAAMC,WAAW,GAAG,UAACC,EAAD,EAIR;MAHfC,OAAO;MACPC;MAAAC,QAAQ,mBAAG,EAAH,GAAKD;MACbE,QAAQ;EAER,IAAMC,UAAU,GAAGV,kBAAkB,EAArC;EACA,IAAMW,MAAM,GAAGD,UAAU,GAAGE,WAAH,GAAiBC,cAA1C;EAEA,OACIf,oBAACK,uBAAD,EAAwB;IAACK,QAAQ,EAAEE,UAAU,GAAGF,QAAH,GAAc;EAAnC,CAAxB,EACIV,oBAACa,MAAD,EAAO;IAACH,QAAQ,EAAEA,QAAX;IAAqBF,OAAO,EAAEA;EAA9B,CAAP,EACKG,QADL,CADJ,CADJ;AAOH,CAfM;;AAuBP,IAAMG,WAAW,GAAG,UAACP,EAAD,EAAsC;MAAnCI,QAAQ;EAAgC,iDAAGA,QAAH;AAAe,CAA9E;;AAEA,IAAMI,cAAc,GAAG,UAACR,EAAD,EAKgB;MAJnCI,QAAQ;MACRH,OAAO;EAIP,IAAMQ,YAAY,GAAGf,OAAO,CAAC;IAAM,cAAO,IAAIE,iBAAiB,EAA5B;EAA8B,CAArC,EAAuC,CAC/DK,OAD+D,CAAvC,CAA5B;EAIA,OAAOR,oBAACI,aAAD,EAAc;IAACI,OAAO,EAAEQ;EAAV,CAAd,EAAuCL,QAAvC,CAAP;AACH,CAXD","names":["React","useMemo","useInRouterContext","createHashHistory","HistoryRouter","BasenameContextProvider","AdminRouter","_a","history","_b","basename","children","isInRouter","Router","DummyRouter","InternalRouter","finalHistory"],"sources":["/var/www/a1boots/node_modules/ra-core/src/routing/AdminRouter.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactNode, useMemo } from 'react';\nimport { useInRouterContext } from 'react-router-dom';\nimport { createHashHistory, History } from 'history';\n\nimport { HistoryRouter, HistoryRouterProps } from './HistoryRouter';\nimport { BasenameContextProvider } from './BasenameContextProvider';\n\n/**\n * Creates a react-router Router unless the app is already inside existing router.\n * Also creates a BasenameContext with the basename prop\n */\nexport const AdminRouter = ({\n    history,\n    basename = '',\n    children,\n}: AdminRouterProps) => {\n    const isInRouter = useInRouterContext();\n    const Router = isInRouter ? DummyRouter : InternalRouter;\n\n    return (\n        <BasenameContextProvider basename={isInRouter ? basename : ''}>\n            <Router basename={basename} history={history}>\n                {children}\n            </Router>\n        </BasenameContextProvider>\n    );\n};\n\nexport interface AdminRouterProps {\n    history?: History;\n    basename?: string;\n    children: React.ReactNode;\n}\n\nconst DummyRouter = ({ children }: { children: ReactNode }) => <>{children}</>;\n\nconst InternalRouter = ({\n    children,\n    history,\n}: {\n    history?: History;\n} & Omit<HistoryRouterProps, 'history'>) => {\n    const finalHistory = useMemo(() => history || createHashHistory(), [\n        history,\n    ]);\n\n    return <HistoryRouter history={finalHistory}>{children}</HistoryRouter>;\n};\n"]},"metadata":{},"sourceType":"module"}