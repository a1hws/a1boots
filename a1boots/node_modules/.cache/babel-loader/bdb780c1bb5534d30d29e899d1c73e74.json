{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { useFormState } from 'react-hook-form';\nimport { useNotify } from '../notification';\n/**\n * This hook display an error message on submit in Form and SaveButton.\n *\n * We can't do the form validity check in the form submit handler\n * as the form state may not have been updated yet when onSubmit validation mode is enabled\n * or when the form hasn't been touched at all.\n */\n\nexport var useNotifyIsFormInvalid = function (control) {\n  var _a = useFormState(control ? {\n    control: control\n  } : undefined),\n      submitCount = _a.submitCount,\n      errors = _a.errors;\n\n  var submitCountRef = useRef(submitCount);\n  var notify = useNotify();\n  useEffect(function () {\n    // Checking the submit count allows us to only display the notification after users\n    // tried to submit\n    if (submitCount > submitCountRef.current) {\n      submitCountRef.current = submitCount;\n\n      if (Object.keys(errors).length > 0) {\n        notify('ra.message.invalid_form', {\n          type: 'error'\n        });\n      }\n    }\n  }, [errors, submitCount, notify]);\n};","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAAsC,iBAAtC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;;;;;;;;AAOA,OAAO,IAAMC,sBAAsB,GAAG,UAACC,OAAD,EAAkB;EAC9C,SAA0BH,YAAY,CACxCG,OAAO,GAAG;IAAEA,OAAO;EAAT,CAAH,GAAiBC,SADgB,CAAtC;EAAA,IAAEC,WAAW,iBAAb;EAAA,IAAeC,MAAM,YAArB;;EAGN,IAAMC,cAAc,GAAGR,MAAM,CAACM,WAAD,CAA7B;EACA,IAAMG,MAAM,GAAGP,SAAS,EAAxB;EAEAH,SAAS,CAAC;IACN;IACA;IACA,IAAIO,WAAW,GAAGE,cAAc,CAACE,OAAjC,EAA0C;MACtCF,cAAc,CAACE,OAAf,GAAyBJ,WAAzB;;MAEA,IAAIK,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,GAA6B,CAAjC,EAAoC;QAChCJ,MAAM,CAAC,yBAAD,EAA4B;UAAEK,IAAI,EAAE;QAAR,CAA5B,CAAN;MACH;IACJ;EACJ,CAVQ,EAUN,CAACP,MAAD,EAASD,WAAT,EAAsBG,MAAtB,CAVM,CAAT;AAWH,CAlBM","names":["useEffect","useRef","useFormState","useNotify","useNotifyIsFormInvalid","control","undefined","submitCount","errors","submitCountRef","notify","current","Object","keys","length","type"],"sources":["/var/www/a1boots/node_modules/ra-core/src/form/useNotifyIsFormInvalid.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useFormState, Control } from 'react-hook-form';\nimport { useNotify } from '../notification';\n\n/**\n * This hook display an error message on submit in Form and SaveButton.\n *\n * We can't do the form validity check in the form submit handler\n * as the form state may not have been updated yet when onSubmit validation mode is enabled\n * or when the form hasn't been touched at all.\n */\nexport const useNotifyIsFormInvalid = (control?: Control) => {\n    const { submitCount, errors } = useFormState(\n        control ? { control } : undefined\n    );\n    const submitCountRef = useRef(submitCount);\n    const notify = useNotify();\n\n    useEffect(() => {\n        // Checking the submit count allows us to only display the notification after users\n        // tried to submit\n        if (submitCount > submitCountRef.current) {\n            submitCountRef.current = submitCount;\n\n            if (Object.keys(errors).length > 0) {\n                notify('ra.message.invalid_form', { type: 'error' });\n            }\n        }\n    }, [errors, submitCount, notify]);\n};\n"]},"metadata":{},"sourceType":"module"}