{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Fab, useMediaQuery } from '@mui/material';\nimport ContentAdd from '@mui/icons-material/Add';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport { useTranslate, useResourceContext, useCreatePath } from 'ra-core';\nimport isEqual from 'lodash/isEqual';\nimport { Button } from './Button';\n/**\n * Opens the Create view of a given resource\n *\n * Renders as a regular button on desktop, and a Floating Action Button\n * on mobile.\n *\n * @example // basic usage\n * import { CreateButton } from 'react-admin';\n *\n * const CommentCreateButton = () => (\n *     <CreateButton label=\"Create comment\" />\n * );\n */\n\nvar CreateButton = function CreateButton(props) {\n  var className = props.className,\n      _a = props.icon,\n      icon = _a === void 0 ? defaultIcon : _a,\n      _b = props.label,\n      label = _b === void 0 ? 'ra.action.create' : _b,\n      resourceProp = props.resource,\n      _c = props.scrollToTop,\n      scrollToTop = _c === void 0 ? true : _c,\n      variant = props.variant,\n      rest = __rest(props, [\"className\", \"icon\", \"label\", \"resource\", \"scrollToTop\", \"variant\"]);\n\n  var resource = useResourceContext(props);\n  var createPath = useCreatePath();\n  var translate = useTranslate();\n  var isSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('md');\n  });\n  return isSmall ? React.createElement(StyledFab, __assign({\n    component: Link,\n    to: createPath({\n      resource: resource,\n      type: 'create'\n    }),\n    state: scrollStates[String(scrollToTop)],\n    // @ts-ignore FabProps ships its own runtime palette `FabPropsColorOverrides` provoking an overlap error with `ButtonProps`\n    color: \"primary\",\n    className: clsx(CreateButtonClasses.floating, className),\n    \"aria-label\": label && translate(label)\n  }, rest), icon) : React.createElement(StyledButton, __assign({\n    component: Link,\n    to: createPath({\n      resource: resource,\n      type: 'create'\n    }),\n    state: scrollStates[String(scrollToTop)],\n    className: clsx(CreateButtonClasses.root, className),\n    label: label,\n    variant: variant\n  }, rest), icon);\n}; // avoids using useMemo to get a constant value for the link state\n\n\nvar scrollStates = {\n  true: {\n    _scrollToTop: true\n  },\n  false: {}\n};\nvar defaultIcon = React.createElement(ContentAdd, null);\nCreateButton.propTypes = {\n  resource: PropTypes.string,\n  className: PropTypes.string,\n  icon: PropTypes.element,\n  label: PropTypes.string\n};\nvar PREFIX = 'RaCreateButton';\nexport var CreateButtonClasses = {\n  root: \"\".concat(PREFIX, \"-root\"),\n  floating: \"\".concat(PREFIX, \"-floating\")\n};\nvar StyledFab = styled(Fab, {\n  name: PREFIX,\n  overridesResolver: function overridesResolver(_props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {}, _b[\"&.\".concat(CreateButtonClasses.floating)] = {\n    color: theme.palette.getContrastText(theme.palette.primary.main),\n    margin: 0,\n    top: 'auto',\n    right: 20,\n    bottom: 60,\n    left: 'auto',\n    position: 'fixed',\n    zIndex: 1000\n  }, _b;\n});\nvar StyledButton = styled(Button, {\n  name: PREFIX,\n  overridesResolver: function overridesResolver(_props, styles) {\n    return styles.root;\n  }\n})({});\nexport default memo(CreateButton, function (prevProps, nextProps) {\n  return prevProps.resource === nextProps.resource && prevProps.label === nextProps.label && prevProps.translate === nextProps.translate && prevProps.disabled === nextProps.disabled && isEqual(prevProps.to, nextProps.to);\n});","map":{"version":3,"mappings":"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","names":["React","styled","memo","PropTypes","Fab","useMediaQuery","ContentAdd","clsx","Link","useTranslate","useResourceContext","useCreatePath","isEqual","Button","CreateButton","props","_a","icon","defaultIcon","_b","label","resourceProp","_c","scrollToTop","variant","rest","resource","createPath","translate","isSmall","theme","breakpoints","down","StyledFab","__assign","component","to","type","state","scrollStates","String","color","className","CreateButtonClasses","floating","StyledButton","root","true","_scrollToTop","false","propTypes","string","element","PREFIX","name","overridesResolver","_props","styles","palette","getContrastText","primary","main","margin","top","right","bottom","left","position","zIndex","prevProps","nextProps","disabled"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/button/CreateButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { ReactElement, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Fab, useMediaQuery, Theme } from '@mui/material';\nimport ContentAdd from '@mui/icons-material/Add';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport { useTranslate, useResourceContext, useCreatePath } from 'ra-core';\nimport isEqual from 'lodash/isEqual';\n\nimport { Button, ButtonProps } from './Button';\n\n/**\n * Opens the Create view of a given resource\n *\n * Renders as a regular button on desktop, and a Floating Action Button\n * on mobile.\n *\n * @example // basic usage\n * import { CreateButton } from 'react-admin';\n *\n * const CommentCreateButton = () => (\n *     <CreateButton label=\"Create comment\" />\n * );\n */\nconst CreateButton = (props: CreateButtonProps) => {\n    const {\n        className,\n        icon = defaultIcon,\n        label = 'ra.action.create',\n        resource: resourceProp,\n        scrollToTop = true,\n        variant,\n        ...rest\n    } = props;\n\n    const resource = useResourceContext(props);\n    const createPath = useCreatePath();\n    const translate = useTranslate();\n    const isSmall = useMediaQuery((theme: Theme) =>\n        theme.breakpoints.down('md')\n    );\n\n    return isSmall ? (\n        <StyledFab\n            component={Link}\n            to={createPath({ resource, type: 'create' })}\n            state={scrollStates[String(scrollToTop)]}\n            // @ts-ignore FabProps ships its own runtime palette `FabPropsColorOverrides` provoking an overlap error with `ButtonProps`\n            color=\"primary\"\n            className={clsx(CreateButtonClasses.floating, className)}\n            aria-label={label && translate(label)}\n            {...rest}\n        >\n            {icon}\n        </StyledFab>\n    ) : (\n        <StyledButton\n            component={Link}\n            to={createPath({ resource, type: 'create' })}\n            state={scrollStates[String(scrollToTop)]}\n            className={clsx(CreateButtonClasses.root, className)}\n            label={label}\n            variant={variant}\n            {...(rest as any)}\n        >\n            {icon}\n        </StyledButton>\n    );\n};\n\n// avoids using useMemo to get a constant value for the link state\nconst scrollStates = {\n    true: { _scrollToTop: true },\n    false: {},\n};\n\nconst defaultIcon = <ContentAdd />;\n\ninterface Props {\n    resource?: string;\n    icon?: ReactElement;\n    scrollToTop?: boolean;\n}\n\nexport type CreateButtonProps = Props & ButtonProps;\n\nCreateButton.propTypes = {\n    resource: PropTypes.string,\n    className: PropTypes.string,\n    icon: PropTypes.element,\n    label: PropTypes.string,\n};\n\nconst PREFIX = 'RaCreateButton';\n\nexport const CreateButtonClasses = {\n    root: `${PREFIX}-root`,\n    floating: `${PREFIX}-floating`,\n};\n\nconst StyledFab = (styled(Fab, {\n    name: PREFIX,\n    overridesResolver: (_props, styles) => styles.root,\n})(({ theme }) => ({\n    [`&.${CreateButtonClasses.floating}`]: {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        margin: 0,\n        top: 'auto',\n        right: 20,\n        bottom: 60,\n        left: 'auto',\n        position: 'fixed',\n        zIndex: 1000,\n    },\n})) as unknown) as typeof Fab;\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (_props, styles) => styles.root,\n})({});\n\nexport default memo(CreateButton, (prevProps, nextProps) => {\n    return (\n        prevProps.resource === nextProps.resource &&\n        prevProps.label === nextProps.label &&\n        prevProps.translate === nextProps.translate &&\n        prevProps.disabled === nextProps.disabled &&\n        isEqual(prevProps.to, nextProps.to)\n    );\n});\n"]},"metadata":{},"sourceType":"module"}