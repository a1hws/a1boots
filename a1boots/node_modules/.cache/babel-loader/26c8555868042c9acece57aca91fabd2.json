{"ast":null,"code":"import { useStore } from 'ra-core';\nimport { useMediaQuery } from '@mui/material';\n/**\n * A hook that returns the sidebar open state and a function to toggle it.\n *\n * The sidebar is open by default on desktop, and closed by default on mobile.\n *\n * @example\n * const ToggleSidebar = () => {\n *     const [open, setOpen] = useSidebarState();\n *     return (\n *         <Button onClick={() => setOpen(!open)}>\n *             {open ? 'Open' : 'Close'}\n *         </Button>\n *     );\n * };\n */\n\nexport var useSidebarState = function () {\n  var isXSmall = useMediaQuery(function (theme) {\n    return theme === null || theme === void 0 ? void 0 : theme.breakpoints.down('sm');\n  }, {\n    noSsr: true\n  });\n  return useStore('sidebar.open', isXSmall ? false : true);\n};","map":{"version":3,"mappings":"AAAA,SAASA,QAAT,QAAyB,SAAzB;AACA,SAASC,aAAT,QAAqC,eAArC;AAEA;;;;;;;;;;;;;;;;AAeA,OAAO,IAAMC,eAAe,GAAG;EAC3B,IAAMC,QAAQ,GAAGF,aAAa,CAC1B,iBAAK;IAAI,YAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEG,WAAP,CAAmBC,IAAnB,CAAwB,IAAxB;EAA6B,CADZ,EAE1B;IAAEC,KAAK,EAAE;EAAT,CAF0B,CAA9B;EAIA,OAAON,QAAQ,CAAU,cAAV,EAA0BG,QAAQ,GAAG,KAAH,GAAW,IAA7C,CAAf;AACH,CANM","names":["useStore","useMediaQuery","useSidebarState","isXSmall","breakpoints","down","noSsr"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/layout/useSidebarState.ts"],"sourcesContent":["import { useStore } from 'ra-core';\nimport { useMediaQuery, Theme } from '@mui/material';\n\n/**\n * A hook that returns the sidebar open state and a function to toggle it.\n *\n * The sidebar is open by default on desktop, and closed by default on mobile.\n *\n * @example\n * const ToggleSidebar = () => {\n *     const [open, setOpen] = useSidebarState();\n *     return (\n *         <Button onClick={() => setOpen(!open)}>\n *             {open ? 'Open' : 'Close'}\n *         </Button>\n *     );\n * };\n */\nexport const useSidebarState = (): useSidebarStateResult => {\n    const isXSmall = useMediaQuery<Theme>(\n        theme => theme?.breakpoints.down('sm'),\n        { noSsr: true }\n    );\n    return useStore<boolean>('sidebar.open', isXSmall ? false : true);\n};\n\nexport type useSidebarStateResult = [boolean, (open: boolean) => void];\n"]},"metadata":{},"sourceType":"module"}