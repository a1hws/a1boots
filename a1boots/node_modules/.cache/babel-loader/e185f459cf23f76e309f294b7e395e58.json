{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport * as React from 'react';\nimport { MenuList } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport lodashGet from 'lodash/get';\nimport clsx from 'clsx';\nimport { useResourceDefinitions } from 'ra-core';\nimport { DRAWER_WIDTH, CLOSED_DRAWER_WIDTH } from './Sidebar';\nimport { useSidebarState } from './useSidebarState';\nimport { DashboardMenuItem } from './DashboardMenuItem';\nimport { MenuItemLink } from './MenuItemLink';\nimport { ResourceMenuItem } from './ResourceMenuItem';\n/**\n * Renders a menu with one menu item per resource by default. You can also set menu items by hand.\n *\n * @example\n * import * as React from 'react';\n * import { Menu } from 'react-admin';\n *\n * import BookIcon from '@mui/icons-material/Book';\n * import ChatBubbleIcon from '@mui/icons-material/ChatBubble';\n * import PeopleIcon from '@mui/icons-material/People';\n * import LabelIcon from '@mui/icons-material/Label';\n *\n * export const MyMenu = () => (\n *     <Menu>\n *         <Menu.DashboardItem />\n *         <Menu.Item to=\"/posts\" primaryText=\"Posts\" leftIcon={<BookIcon />}/>\n *         <Menu.Item to=\"/comments\" primaryText=\"Comments\" leftIcon={<ChatBubbleIcon />}/>\n *         <Menu.Item to=\"/users\" primaryText=\"Users\" leftIcon={<PeopleIcon />}/>\n *         <Menu.Item to=\"/custom-route\" primaryText=\"Miscellaneous\" leftIcon={<LabelIcon />}/>\n *     </Menu>\n * );\n */\n\nexport var Menu = function Menu(props) {\n  var _a;\n\n  var resources = useResourceDefinitions();\n\n  var hasDashboard = props.hasDashboard,\n      _b = props.children,\n      children = _b === void 0 ? __spreadArray([hasDashboard ? React.createElement(DashboardMenuItem, {\n    key: \"default-dashboard-menu-item\"\n  }) : null], Object.keys(resources).filter(function (name) {\n    return resources[name].hasList;\n  }).map(function (name) {\n    return React.createElement(ResourceMenuItem, {\n      key: name,\n      name: name\n    });\n  }), true) : _b,\n      className = props.className,\n      rest = __rest(props, [\"hasDashboard\", \"children\", \"className\"]);\n\n  var open = useSidebarState()[0];\n  return React.createElement(Root, __assign({\n    className: clsx((_a = {}, _a[MenuClasses.open] = open, _a[MenuClasses.closed] = !open, _a), className)\n  }, rest), children);\n};\nMenu.propTypes = {\n  className: PropTypes.string,\n  dense: PropTypes.bool,\n  hasDashboard: PropTypes.bool\n}; // re-export MenuItem commponents for convenience\n\nMenu.Item = MenuItemLink;\nMenu.DashboardItem = DashboardMenuItem;\nMenu.ResourceItem = ResourceMenuItem;\nvar PREFIX = 'RaMenu';\nexport var MenuClasses = {\n  open: \"\".concat(PREFIX, \"-open\"),\n  closed: \"\".concat(PREFIX, \"-closed\")\n};\nvar Root = styled(MenuList, {\n  name: PREFIX,\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    marginTop: '0.5em',\n    marginBottom: '1em'\n  }, _b[theme.breakpoints.only('xs')] = {\n    marginTop: 0\n  }, _b.transition = theme.transitions.create('width', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen\n  }), _b[\"&.\".concat(MenuClasses.open)] = {\n    width: lodashGet(theme, 'sidebar.width', DRAWER_WIDTH)\n  }, _b[\"&.\".concat(MenuClasses.closed)] = {\n    width: lodashGet(theme, 'sidebar.closedWidth', CLOSED_DRAWER_WIDTH)\n  }, _b;\n});","map":{"version":3,"mappings":"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","names":["React","MenuList","styled","PropTypes","lodashGet","clsx","useResourceDefinitions","DRAWER_WIDTH","CLOSED_DRAWER_WIDTH","useSidebarState","DashboardMenuItem","MenuItemLink","ResourceMenuItem","Menu","props","resources","_b","children","hasDashboard","key","Object","keys","filter","name","hasList","map","className","rest","Root","__assign","_a","MenuClasses","open","closed","propTypes","string","dense","bool","Item","DashboardItem","ResourceItem","PREFIX","overridesResolver","styles","root","theme","display","flexDirection","justifyContent","marginTop","marginBottom","breakpoints","only","transitions","create","easing","sharp","duration","leavingScreen","width"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/layout/Menu.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactNode } from 'react';\nimport { MenuList } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport lodashGet from 'lodash/get';\nimport clsx from 'clsx';\nimport { useResourceDefinitions } from 'ra-core';\n\nimport { DRAWER_WIDTH, CLOSED_DRAWER_WIDTH } from './Sidebar';\nimport { useSidebarState } from './useSidebarState';\nimport { DashboardMenuItem } from './DashboardMenuItem';\nimport { MenuItemLink } from './MenuItemLink';\nimport { ResourceMenuItem } from './ResourceMenuItem';\n\n/**\n * Renders a menu with one menu item per resource by default. You can also set menu items by hand.\n *\n * @example\n * import * as React from 'react';\n * import { Menu } from 'react-admin';\n *\n * import BookIcon from '@mui/icons-material/Book';\n * import ChatBubbleIcon from '@mui/icons-material/ChatBubble';\n * import PeopleIcon from '@mui/icons-material/People';\n * import LabelIcon from '@mui/icons-material/Label';\n *\n * export const MyMenu = () => (\n *     <Menu>\n *         <Menu.DashboardItem />\n *         <Menu.Item to=\"/posts\" primaryText=\"Posts\" leftIcon={<BookIcon />}/>\n *         <Menu.Item to=\"/comments\" primaryText=\"Comments\" leftIcon={<ChatBubbleIcon />}/>\n *         <Menu.Item to=\"/users\" primaryText=\"Users\" leftIcon={<PeopleIcon />}/>\n *         <Menu.Item to=\"/custom-route\" primaryText=\"Miscellaneous\" leftIcon={<LabelIcon />}/>\n *     </Menu>\n * );\n */\nexport const Menu = (props: MenuProps) => {\n    const resources = useResourceDefinitions();\n    const {\n        hasDashboard,\n        children = [\n            hasDashboard ? (\n                <DashboardMenuItem key=\"default-dashboard-menu-item\" />\n            ) : null,\n            ...Object.keys(resources)\n                .filter(name => resources[name].hasList)\n                .map(name => <ResourceMenuItem key={name} name={name} />),\n        ],\n        className,\n        ...rest\n    } = props;\n\n    const [open] = useSidebarState();\n\n    return (\n        <Root\n            className={clsx(\n                {\n                    [MenuClasses.open]: open,\n                    [MenuClasses.closed]: !open,\n                },\n                className\n            )}\n            {...rest}\n        >\n            {children}\n        </Root>\n    );\n};\n\n// NOTE: We don't extends MenuListProps here to avoid breaking changes\nexport interface MenuProps {\n    children?: ReactNode;\n    className?: string;\n    dense?: boolean;\n    hasDashboard?: boolean;\n    [key: string]: any;\n}\n\nMenu.propTypes = {\n    className: PropTypes.string,\n    dense: PropTypes.bool,\n    hasDashboard: PropTypes.bool,\n};\n\n// re-export MenuItem commponents for convenience\nMenu.Item = MenuItemLink;\nMenu.DashboardItem = DashboardMenuItem;\nMenu.ResourceItem = ResourceMenuItem;\n\nconst PREFIX = 'RaMenu';\n\nexport const MenuClasses = {\n    open: `${PREFIX}-open`,\n    closed: `${PREFIX}-closed`,\n};\n\nconst Root = styled(MenuList, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    marginTop: '0.5em',\n    marginBottom: '1em',\n    [theme.breakpoints.only('xs')]: {\n        marginTop: 0,\n    },\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n\n    [`&.${MenuClasses.open}`]: {\n        width: lodashGet(theme, 'sidebar.width', DRAWER_WIDTH),\n    },\n\n    [`&.${MenuClasses.closed}`]: {\n        width: lodashGet(theme, 'sidebar.closedWidth', CLOSED_DRAWER_WIDTH),\n    },\n}));\n"]},"metadata":{},"sourceType":"module"}