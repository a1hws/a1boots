{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport { useTranslate } from '../i18n';\n\nvar ValidationError = function (props) {\n  var error = props.error;\n  var translate = useTranslate();\n\n  if (error.message) {\n    var _a = error,\n        message = _a.message,\n        args = _a.args;\n    return React.createElement(React.Fragment, null, translate(message, __assign({\n      _: message\n    }, args)));\n  }\n\n  return React.createElement(React.Fragment, null, translate(error, {\n    _: error\n  }));\n};\n\nexport default ValidationError;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAKA,SAASC,YAAT,QAA6B,SAA7B;;AAMA,IAAMC,eAAe,GAAG,UAACC,KAAD,EAA4B;EACxC,SAAK,GAAKA,KAAK,MAAf;EACR,IAAMC,SAAS,GAAGH,YAAY,EAA9B;;EACA,IAAKI,KAAwC,CAACC,OAA9C,EAAuD;IAC7C,SAAoBD,KAApB;IAAA,IAAEC,OAAO,aAAT;IAAA,IAAWC,IAAI,UAAf;IACN,OAAOP,0CAAGI,SAAS,CAACE,OAAD,EAAQE;MAAIC,CAAC,EAAEH;IAAP,GAAmBC,IAAnB,CAAR,CAAZ,CAAP;EACH;;EAED,OAAOP,0CAAGI,SAAS,CAACC,KAAD,EAAkB;IAAEI,CAAC,EAAEJ;EAAL,CAAlB,CAAZ,CAAP;AACH,CATD;;AAWA,eAAeH,eAAf","names":["React","useTranslate","ValidationError","props","translate","error","message","args","__assign","_"],"sources":["/var/www/a1boots/node_modules/ra-core/src/form/ValidationError.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n    ValidationErrorMessage,\n    ValidationErrorMessageWithArgs,\n} from './validate';\nimport { useTranslate } from '../i18n';\n\nexport interface ValidationErrorProps {\n    error: ValidationErrorMessage;\n}\n\nconst ValidationError = (props: ValidationErrorProps) => {\n    const { error } = props;\n    const translate = useTranslate();\n    if ((error as ValidationErrorMessageWithArgs).message) {\n        const { message, args } = error as ValidationErrorMessageWithArgs;\n        return <>{translate(message, { _: message, ...args })}</>;\n    }\n\n    return <>{translate(error as string, { _: error })}</>;\n};\n\nexport default ValidationError;\n"]},"metadata":{},"sourceType":"module"}