{"ast":null,"code":"import * as React from 'react';\nimport { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport { FilterForm } from './FilterForm';\nimport { FilterButton } from './FilterButton';\nimport { FilterContext } from '../FilterContext';\n/**\n * Filter button/form combo\n *\n * @example\n *\n * const PostFilter = (props) => (\n *     <Filter {...props}>\n *         <TextInput label=\"Search\" source=\"q\" alwaysOn />\n *         <TextInput label=\"Title\" source=\"title\" defaultValue=\"Hello, World!\" />\n *     </Filter>\n * );\n *\n * export const PostList = () => (\n *     <List filters={<PostFilter />}>\n *         ...\n *     </List>\n * );\n *\n */\n\nexport var Filter = function (props) {\n  var children = props.children;\n\n  var renderButton = function () {\n    return React.createElement(FilterButton, {\n      className: FilterClasses.button\n    });\n  };\n\n  var renderForm = function () {\n    return React.createElement(FilterForm, {\n      className: FilterClasses.form\n    });\n  };\n\n  return React.createElement(FilterContext.Provider, {\n    value: Children.toArray(children)\n  }, props.context === 'button' ? renderButton() : renderForm());\n};\nFilter.propTypes = {\n  children: PropTypes.node,\n  classes: PropTypes.object,\n  context: PropTypes.oneOf(['form', 'button'])\n};\nvar PREFIX = 'RaFilter';\nexport var FilterClasses = {\n  button: \"\".concat(PREFIX, \"-button\"),\n  form: \"\".concat(PREFIX, \"-form\")\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA;;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,IAAMC,MAAM,GAAG,UAACC,KAAD,EAAmB;EAC7B,YAAQ,GAAKA,KAAK,SAAlB;;EACR,IAAMC,YAAY,GAAG;IACjB,OAAOR,oBAACI,YAAD,EAAa;MAACK,SAAS,EAAEC,aAAa,CAACC;IAA1B,CAAb,CAAP;EACH,CAFD;;EAIA,IAAMC,UAAU,GAAG;IACf,OAAOZ,oBAACG,UAAD,EAAW;MAACM,SAAS,EAAEC,aAAa,CAACG;IAA1B,CAAX,CAAP;EACH,CAFD;;EAIA,OACIb,oBAACK,aAAa,CAACS,QAAf,EAAuB;IAACC,KAAK,EAAEd,QAAQ,CAACe,OAAT,CAAiBC,QAAjB;EAAR,CAAvB,EACKV,KAAK,CAACW,OAAN,KAAkB,QAAlB,GAA6BV,YAAY,EAAzC,GAA8CI,UAAU,EAD7D,CADJ;AAKH,CAfM;AAiBPN,MAAM,CAACa,SAAP,GAAmB;EACfF,QAAQ,EAAEf,SAAS,CAACkB,IADL;EAEfC,OAAO,EAAEnB,SAAS,CAACoB,MAFJ;EAGfJ,OAAO,EAAEhB,SAAS,CAACqB,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,CAAhB;AAHM,CAAnB;AAMA,IAAMC,MAAM,GAAG,UAAf;AAEA,OAAO,IAAMd,aAAa,GAAG;EACzBC,MAAM,EAAE,UAAGa,MAAH,EAAS,SAAT,CADiB;EAEzBX,IAAI,EAAE,UAAGW,MAAH,EAAS,OAAT;AAFmB,CAAtB","names":["React","Children","PropTypes","FilterForm","FilterButton","FilterContext","Filter","props","renderButton","className","FilterClasses","button","renderForm","form","Provider","value","toArray","children","context","propTypes","node","classes","object","oneOf","PREFIX"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/list/filter/Filter.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Children, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FilterForm } from './FilterForm';\nimport { FilterButton } from './FilterButton';\nimport { FilterContext } from '../FilterContext';\n\n/**\n * Filter button/form combo\n *\n * @example\n *\n * const PostFilter = (props) => (\n *     <Filter {...props}>\n *         <TextInput label=\"Search\" source=\"q\" alwaysOn />\n *         <TextInput label=\"Title\" source=\"title\" defaultValue=\"Hello, World!\" />\n *     </Filter>\n * );\n *\n * export const PostList = () => (\n *     <List filters={<PostFilter />}>\n *         ...\n *     </List>\n * );\n *\n */\nexport const Filter = (props: FilterProps) => {\n    const { children } = props;\n    const renderButton = () => {\n        return <FilterButton className={FilterClasses.button} />;\n    };\n\n    const renderForm = () => {\n        return <FilterForm className={FilterClasses.form} />;\n    };\n\n    return (\n        <FilterContext.Provider value={Children.toArray(children)}>\n            {props.context === 'button' ? renderButton() : renderForm()}\n        </FilterContext.Provider>\n    );\n};\n\nFilter.propTypes = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    context: PropTypes.oneOf(['form', 'button']),\n};\n\nconst PREFIX = 'RaFilter';\n\nexport const FilterClasses = {\n    button: `${PREFIX}-button`,\n    form: `${PREFIX}-form`,\n};\n\nexport interface FilterProps {\n    children: ReactNode;\n    context?: 'form' | 'button';\n    variant?: string;\n}\n"]},"metadata":{},"sourceType":"module"}