{"ast":null,"code":"import * as React from 'react';\nimport { useCallback, useMemo, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useAuthProvider, useGetIdentity, useTranslate } from 'ra-core';\nimport { Tooltip, IconButton, Menu, Button, Avatar, useMediaQuery } from '@mui/material';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport { UserMenuContextProvider } from './UserMenuContextProvider';\nimport { Logout } from '../auth/Logout';\n/**\n * The UserMenu component renders a Mui Button that shows a Menu.\n * It accepts children that must be Mui MenuItem components.\n *\n * @example\n * import { Logout, UserMenu, useUserMenu } from 'react-admin';\n * import MenuItem from '@mui/material/MenuItem';\n * import ListItemIcon from '@mui/material/ListItemIcon';\n * import ListItemText from '@mui/material/ListItemText';\n * import SettingsIcon from '@mui/icons-material/Settings';\n\n * const ConfigurationMenu = React.forwardRef((props, ref) => {\n *     const { onClose } = useUserMenu();\n *     return (\n *         <MenuItem\n *             ref={ref}\n *             {...props}\n *             to=\"/configuration\"\n *             onClick={onClose}\n *         >\n *             <ListItemIcon>\n *                 <SettingsIcon />\n *             </ListItemIcon>\n *             <ListItemText>Configuration</ListItemText>\n *         </MenuItem>\n *     );\n * });\n *\n * export const MyUserMenu = () => (\n *     <UserMenu>\n *         <ConfigurationMenu />\n *         <Logout />\n *     </UserMenu>\n * );\n * @param props\n * @param {ReactNode} props.children React node/s to be rendered as children of the UserMenu. Must be Mui MenuItem components\n * @param {string} props.className CSS class applied to the MuiAppBar component\n * @param {string} props.label The label of the UserMenu button. Accepts translation keys\n * @param {Element} props.icon The icon of the UserMenu button.\n *\n */\n\nexport var UserMenu = function (props) {\n  var _a = useState(null),\n      anchorEl = _a[0],\n      setAnchorEl = _a[1];\n\n  var translate = useTranslate();\n\n  var _b = useGetIdentity(),\n      isLoading = _b.isLoading,\n      identity = _b.identity;\n\n  var authProvider = useAuthProvider();\n  var isLargeEnough = useMediaQuery(function (theme) {\n    return theme.breakpoints.up('sm');\n  });\n  var _c = props.children,\n      children = _c === void 0 ? !!authProvider ? React.createElement(Logout, null) : null : _c,\n      className = props.className,\n      _d = props.label,\n      label = _d === void 0 ? 'ra.auth.user_menu' : _d,\n      _e = props.icon,\n      icon = _e === void 0 ? defaultIcon : _e;\n\n  var handleMenu = function (event) {\n    return setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = useCallback(function () {\n    return setAnchorEl(null);\n  }, []);\n  var context = useMemo(function () {\n    return {\n      onClose: handleClose\n    };\n  }, [handleClose]);\n  if (!children) return null;\n  var open = Boolean(anchorEl);\n  return React.createElement(Root, {\n    className: className\n  }, isLargeEnough && !isLoading && (identity === null || identity === void 0 ? void 0 : identity.fullName) ? React.createElement(Button, {\n    \"aria-label\": label && translate(label, {\n      _: label\n    }),\n    className: UserMenuClasses.userButton,\n    color: \"inherit\",\n    startIcon: identity.avatar ? React.createElement(Avatar, {\n      className: UserMenuClasses.avatar,\n      src: identity.avatar,\n      alt: identity.fullName\n    }) : icon,\n    onClick: handleMenu\n  }, identity.fullName) : React.createElement(Tooltip, {\n    title: label && translate(label, {\n      _: 'Profile'\n    })\n  }, React.createElement(IconButton, {\n    \"aria-label\": label && translate(label, {\n      _: 'Profile'\n    }),\n    \"aria-owns\": open ? 'menu-appbar' : null,\n    \"aria-haspopup\": true,\n    color: \"inherit\",\n    onClick: handleMenu\n  }, !isLoading && (identity === null || identity === void 0 ? void 0 : identity.avatar) ? React.createElement(Avatar, {\n    className: UserMenuClasses.avatar,\n    src: identity.avatar,\n    alt: identity.fullName\n  }) : icon)), React.createElement(UserMenuContextProvider, {\n    value: context\n  }, React.createElement(Menu, {\n    id: \"menu-appbar\",\n    disableScrollLock: true,\n    anchorEl: anchorEl,\n    anchorOrigin: AnchorOrigin,\n    transformOrigin: TransformOrigin,\n    open: open,\n    onClose: handleClose\n  }, children)));\n};\nUserMenu.propTypes = {\n  children: PropTypes.node,\n  classes: PropTypes.object,\n  label: PropTypes.string,\n  icon: PropTypes.node\n};\nvar PREFIX = 'RaUserMenu';\nexport var UserMenuClasses = {\n  userButton: \"\".concat(PREFIX, \"-userButton\"),\n  avatar: \"\".concat(PREFIX, \"-avatar\")\n};\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {}, _b[\"& .\".concat(UserMenuClasses.userButton)] = {\n    textTransform: 'none',\n    marginInlineStart: theme.spacing(0.5)\n  }, _b[\"& .\".concat(UserMenuClasses.avatar)] = {\n    width: theme.spacing(4),\n    height: theme.spacing(4)\n  }, _b;\n});\nvar defaultIcon = React.createElement(AccountCircle, null);\nvar AnchorOrigin = {\n  vertical: 'bottom',\n  horizontal: 'right'\n};\nvar TransformOrigin = {\n  vertical: 'top',\n  horizontal: 'right'\n};","map":{"version":3,"mappings":"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","names":["React","useCallback","useMemo","useState","styled","PropTypes","useAuthProvider","useGetIdentity","useTranslate","Tooltip","IconButton","Menu","Button","Avatar","useMediaQuery","AccountCircle","UserMenuContextProvider","Logout","UserMenu","props","anchorEl","setAnchorEl","translate","isLoading","identity","authProvider","isLargeEnough","breakpoints","up","_c","className","_d","label","_e","icon","defaultIcon","handleMenu","event","currentTarget","handleClose","context","onClose","children","open","Boolean","Root","fullName","_","UserMenuClasses","userButton","color","startIcon","avatar","src","alt","onClick","title","value","id","disableScrollLock","anchorOrigin","AnchorOrigin","transformOrigin","TransformOrigin","propTypes","node","classes","object","string","PREFIX","name","overridesResolver","styles","root","_a","theme","_b","textTransform","marginInlineStart","spacing","width","height","vertical","horizontal"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/layout/UserMenu.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactNode, useCallback, useMemo, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { useAuthProvider, useGetIdentity, useTranslate } from 'ra-core';\nimport {\n    Tooltip,\n    IconButton,\n    Menu,\n    Button,\n    Avatar,\n    PopoverOrigin,\n    useMediaQuery,\n    Theme,\n} from '@mui/material';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport { UserMenuContextProvider } from './UserMenuContextProvider';\nimport { Logout } from '../auth/Logout';\n\n/**\n * The UserMenu component renders a Mui Button that shows a Menu.\n * It accepts children that must be Mui MenuItem components.\n *\n * @example\n * import { Logout, UserMenu, useUserMenu } from 'react-admin';\n * import MenuItem from '@mui/material/MenuItem';\n * import ListItemIcon from '@mui/material/ListItemIcon';\n * import ListItemText from '@mui/material/ListItemText';\n * import SettingsIcon from '@mui/icons-material/Settings';\n\n * const ConfigurationMenu = React.forwardRef((props, ref) => {\n *     const { onClose } = useUserMenu();\n *     return (\n *         <MenuItem\n *             ref={ref}\n *             {...props}\n *             to=\"/configuration\"\n *             onClick={onClose}\n *         >\n *             <ListItemIcon>\n *                 <SettingsIcon />\n *             </ListItemIcon>\n *             <ListItemText>Configuration</ListItemText>\n *         </MenuItem>\n *     );\n * });\n *\n * export const MyUserMenu = () => (\n *     <UserMenu>\n *         <ConfigurationMenu />\n *         <Logout />\n *     </UserMenu>\n * );\n * @param props\n * @param {ReactNode} props.children React node/s to be rendered as children of the UserMenu. Must be Mui MenuItem components\n * @param {string} props.className CSS class applied to the MuiAppBar component\n * @param {string} props.label The label of the UserMenu button. Accepts translation keys\n * @param {Element} props.icon The icon of the UserMenu button.\n *\n */\nexport const UserMenu = (props: UserMenuProps) => {\n    const [anchorEl, setAnchorEl] = useState(null);\n    const translate = useTranslate();\n    const { isLoading, identity } = useGetIdentity();\n    const authProvider = useAuthProvider();\n    const isLargeEnough = useMediaQuery<Theme>(theme =>\n        theme.breakpoints.up('sm')\n    );\n\n    const {\n        children = !!authProvider ? <Logout /> : null,\n        className,\n        label = 'ra.auth.user_menu',\n        icon = defaultIcon,\n    } = props;\n\n    const handleMenu = event => setAnchorEl(event.currentTarget);\n    const handleClose = useCallback(() => setAnchorEl(null), []);\n    const context = useMemo(() => ({ onClose: handleClose }), [handleClose]);\n    if (!children) return null;\n    const open = Boolean(anchorEl);\n\n    return (\n        <Root className={className}>\n            {isLargeEnough && !isLoading && identity?.fullName ? (\n                <Button\n                    aria-label={label && translate(label, { _: label })}\n                    className={UserMenuClasses.userButton}\n                    color=\"inherit\"\n                    startIcon={\n                        identity.avatar ? (\n                            <Avatar\n                                className={UserMenuClasses.avatar}\n                                src={identity.avatar}\n                                alt={identity.fullName}\n                            />\n                        ) : (\n                            icon\n                        )\n                    }\n                    onClick={handleMenu}\n                >\n                    {identity.fullName}\n                </Button>\n            ) : (\n                <Tooltip title={label && translate(label, { _: 'Profile' })}>\n                    <IconButton\n                        aria-label={label && translate(label, { _: 'Profile' })}\n                        aria-owns={open ? 'menu-appbar' : null}\n                        aria-haspopup={true}\n                        color=\"inherit\"\n                        onClick={handleMenu}\n                    >\n                        {!isLoading && identity?.avatar ? (\n                            <Avatar\n                                className={UserMenuClasses.avatar}\n                                src={identity.avatar}\n                                alt={identity.fullName}\n                            />\n                        ) : (\n                            icon\n                        )}\n                    </IconButton>\n                </Tooltip>\n            )}\n            <UserMenuContextProvider value={context}>\n                <Menu\n                    id=\"menu-appbar\"\n                    disableScrollLock\n                    anchorEl={anchorEl}\n                    anchorOrigin={AnchorOrigin}\n                    transformOrigin={TransformOrigin}\n                    open={open}\n                    onClose={handleClose}\n                >\n                    {children}\n                </Menu>\n            </UserMenuContextProvider>\n        </Root>\n    );\n};\n\nUserMenu.propTypes = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    label: PropTypes.string,\n    icon: PropTypes.node,\n};\n\nexport interface UserMenuProps {\n    children?: ReactNode;\n    className?: string;\n    label?: string;\n    icon?: ReactNode;\n}\n\nconst PREFIX = 'RaUserMenu';\n\nexport const UserMenuClasses = {\n    userButton: `${PREFIX}-userButton`,\n    avatar: `${PREFIX}-avatar`,\n};\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    [`& .${UserMenuClasses.userButton}`]: {\n        textTransform: 'none',\n        marginInlineStart: theme.spacing(0.5),\n    },\n\n    [`& .${UserMenuClasses.avatar}`]: {\n        width: theme.spacing(4),\n        height: theme.spacing(4),\n    },\n}));\n\nconst defaultIcon = <AccountCircle />;\n\nconst AnchorOrigin: PopoverOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right',\n};\n\nconst TransformOrigin: PopoverOrigin = {\n    vertical: 'top',\n    horizontal: 'right',\n};\n"]},"metadata":{},"sourceType":"module"}