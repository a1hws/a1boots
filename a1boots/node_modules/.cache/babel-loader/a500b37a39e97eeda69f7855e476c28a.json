{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useTranslate } from 'ra-core';\nimport { InputAdornment, IconButton } from '@mui/material';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { TextInput } from './TextInput';\nexport var PasswordInput = function PasswordInput(props) {\n  var _a = props.initiallyVisible,\n      initiallyVisible = _a === void 0 ? false : _a,\n      rest = __rest(props, [\"initiallyVisible\"]);\n\n  var _b = useState(initiallyVisible),\n      visible = _b[0],\n      setVisible = _b[1];\n\n  var translate = useTranslate();\n\n  var handleClick = function handleClick() {\n    setVisible(!visible);\n  };\n\n  return React.createElement(TextInput, __assign({\n    type: visible ? 'text' : 'password',\n    size: \"small\",\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\"\n      }, React.createElement(IconButton, {\n        \"aria-label\": translate(visible ? 'ra.input.password.toggle_visible' : 'ra.input.password.toggle_hidden'),\n        onClick: handleClick,\n        size: \"large\"\n      }, visible ? React.createElement(Visibility, null) : React.createElement(VisibilityOff, null)))\n    }\n  }, rest));\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,eAA3C;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AAEA,SAASC,SAAT,QAA0C,aAA1C;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAA0B;EAC3C,SAAsCA,KAAK,iBAA3C;EAAA,oBAAgB,mBAAG,KAAH,GAAQC,EAAxB;EAAA,IAA6BC,IAAI,UAAKF,KAAL,EAAnC,oBAAmC,CAAjC;;EACF,SAAwBR,QAAQ,CAACW,gBAAD,CAAhC;EAAA,IAACC,OAAO,QAAR;EAAA,IAAUC,UAAU,QAApB;;EACN,IAAMC,SAAS,GAAGb,YAAY,EAA9B;;EAEA,IAAMc,WAAW,GAAG,SAAdA,WAAc;IAChBF,UAAU,CAAC,CAACD,OAAF,CAAV;EACH,CAFD;;EAIA,OACIb,oBAACO,SAAD,EAAUU;IACNC,IAAI,EAAEL,OAAO,GAAG,MAAH,GAAY,UADnB;IAENM,IAAI,EAAC,OAFC;IAGNC,UAAU,EAAE;MACRC,YAAY,EACRrB,oBAACG,cAAD,EAAe;QAACmB,QAAQ,EAAC;MAAV,CAAf,EACItB,oBAACI,UAAD,EAAW;QAAA,cACKW,SAAS,CACjBF,OAAO,GACD,kCADC,GAED,iCAHW,CADd;QAMPU,OAAO,EAAEP,WANF;QAOPG,IAAI,EAAC;MAPE,CAAX,EASKN,OAAO,GAAGb,oBAACK,UAAD,EAAW,IAAX,CAAH,GAAoBL,oBAACM,aAAD,EAAc,IAAd,CAThC,CADJ;IAFI;EAHN,GAoBFK,IApBE,CAAV,CADJ;AAwBH,CAjCM","names":["React","useState","useTranslate","InputAdornment","IconButton","Visibility","VisibilityOff","TextInput","PasswordInput","props","_a","rest","initiallyVisible","visible","setVisible","translate","handleClick","__assign","type","size","InputProps","endAdornment","position","onClick"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/input/PasswordInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { useTranslate } from 'ra-core';\nimport { InputAdornment, IconButton } from '@mui/material';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport { TextInput, TextInputProps } from './TextInput';\n\nexport const PasswordInput = (props: PasswordInputProps) => {\n    const { initiallyVisible = false, ...rest } = props;\n    const [visible, setVisible] = useState(initiallyVisible);\n    const translate = useTranslate();\n\n    const handleClick = () => {\n        setVisible(!visible);\n    };\n\n    return (\n        <TextInput\n            type={visible ? 'text' : 'password'}\n            size=\"small\"\n            InputProps={{\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n                        <IconButton\n                            aria-label={translate(\n                                visible\n                                    ? 'ra.input.password.toggle_visible'\n                                    : 'ra.input.password.toggle_hidden'\n                            )}\n                            onClick={handleClick}\n                            size=\"large\"\n                        >\n                            {visible ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                    </InputAdornment>\n                ),\n            }}\n            {...rest}\n        />\n    );\n};\n\nexport interface PasswordInputProps extends TextInputProps {\n    initiallyVisible?: boolean;\n}\n"]},"metadata":{},"sourceType":"module"}