{"ast":null,"code":"import * as React from 'react';\nimport { CircularProgress, InputAdornment } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useTimeout } from 'ra-core';\nimport { ResettableTextField } from './ResettableTextField';\n/**\n * An input placeholder with a loading indicator\n *\n * Avoids visual jumps when replaced by a form input\n */\n\nexport var LoadingInput = function LoadingInput(_a) {\n  var fullWidth = _a.fullWidth,\n      label = _a.label,\n      helperText = _a.helperText,\n      margin = _a.margin,\n      size = _a.size,\n      sx = _a.sx,\n      _b = _a.timeout,\n      timeout = _b === void 0 ? 1000 : _b,\n      variant = _a.variant;\n  var oneSecondHasPassed = useTimeout(timeout);\n  return React.createElement(StyledResettableTextField, {\n    sx: sx,\n    label: label,\n    helperText: helperText,\n    fullWidth: fullWidth,\n    variant: variant,\n    margin: margin,\n    size: size,\n    disabled: true,\n    onChange: function onChange() {},\n    InputProps: {\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\"\n      }, oneSecondHasPassed ? React.createElement(CircularProgress, {\n        color: \"inherit\",\n        size: 20\n      }) : // use an adornment of the same size to avoid visual jumps\n      React.createElement(\"span\", {\n        style: {\n          width: 20\n        }\n      }, \"\\xA0\"))\n    }\n  });\n};\nvar PREFIX = 'RaLoadingInput'; // make it look just like a regular input, even though it's disabled\n// because the loading indicator is enough\n\nvar StyledResettableTextField = styled(ResettableTextField, {\n  name: PREFIX,\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    '& .MuiInputLabel-root.Mui-disabled': {\n      color: theme.palette.text.secondary\n    },\n    '& .MuiFilledInput-root.Mui-disabled': {\n      background: theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.04)' : 'rgba(255, 255, 255, 0.09)'\n    },\n    '& .MuiFilledInput-root.Mui-disabled:before': {\n      borderBottomStyle: 'solid'\n    }\n  };\n});","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,eAAjD;AACA,SAASC,MAAT,QAAgC,sBAAhC;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,SAASC,mBAAT,QAAoC,uBAApC;AAEA;;;;;;AAKA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,EAAD,EASR;MARhBC,SAAS;MACTC,KAAK;MACLC,UAAU;MACVC,MAAM;MACNC,IAAI;MACJC,EAAE;MACFC;MAAAC,OAAO,mBAAG,IAAH,GAAOD;MACdE,OAAO;EAEP,IAAMC,kBAAkB,GAAGb,UAAU,CAACW,OAAD,CAArC;EAEA,OACIf,oBAACkB,yBAAD,EAA0B;IACtBL,EAAE,EAAEA,EADkB;IAEtBJ,KAAK,EAAEA,KAFe;IAGtBC,UAAU,EAAEA,UAHU;IAItBF,SAAS,EAAEA,SAJW;IAKtBQ,OAAO,EAAEA,OALa;IAMtBL,MAAM,EAAEA,MANc;IAOtBC,IAAI,EAAEA,IAPgB;IAQtBO,QAAQ,MARc;IAStBC,QAAQ,EAAE,qBAAQ,CATI;IAUtBC,UAAU,EAAE;MACRC,YAAY,EACRtB,oBAACE,cAAD,EAAe;QAACqB,QAAQ,EAAC;MAAV,CAAf,EACKN,kBAAkB,GACfjB,oBAACC,gBAAD,EAAiB;QAACuB,KAAK,EAAC,SAAP;QAAiBZ,IAAI,EAAE;MAAvB,CAAjB,CADe,GAGf;MACAZ;QAAMyB,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAT;MAAb,GAA0B,MAA1B,CALR;IAFI;EAVU,CAA1B,CADJ;AAyBH,CArCM;AAuCP,IAAMC,MAAM,GAAG,gBAAf,C,CAEA;AACA;;AACA,IAAMT,yBAAyB,GAAGf,MAAM,CAACE,mBAAD,EAAsB;EAC1DuB,IAAI,EAAED,MADoD;EAE1DE,iBAAiB,EAAE,2BAACC,KAAD,EAAQC,MAAR,EAAc;IAAK,aAAM,CAACC,IAAP;EAAW;AAFS,CAAtB,CAAN,CAG/B,UAACzB,EAAD,EAAU;MAAP0B,KAAK;EAAO,OAAC;IACf,sCAAsC;MAClCT,KAAK,EAAES,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC;IADQ,CADvB;IAIf,uCAAuC;MACnCC,UAAU,EACNJ,KAAK,CAACC,OAAN,CAAcI,IAAd,KAAuB,OAAvB,GACM,qBADN,GAEM;IAJyB,CAJxB;IAUf,8CAA8C;MAC1CC,iBAAiB,EAAE;IADuB;EAV/B,CAAD;AAahB,CAhBgC,CAAlC","names":["React","CircularProgress","InputAdornment","styled","useTimeout","ResettableTextField","LoadingInput","_a","fullWidth","label","helperText","margin","size","sx","_b","timeout","variant","oneSecondHasPassed","StyledResettableTextField","disabled","onChange","InputProps","endAdornment","position","color","style","width","PREFIX","name","overridesResolver","props","styles","root","theme","palette","text","secondary","background","mode","borderBottomStyle"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/input/LoadingInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport { CircularProgress, InputAdornment } from '@mui/material';\nimport { styled, SxProps } from '@mui/material/styles';\nimport { useTimeout } from 'ra-core';\n\nimport { ResettableTextField } from './ResettableTextField';\n\n/**\n * An input placeholder with a loading indicator\n *\n * Avoids visual jumps when replaced by a form input\n */\nexport const LoadingInput = ({\n    fullWidth,\n    label,\n    helperText,\n    margin,\n    size,\n    sx,\n    timeout = 1000,\n    variant,\n}: LoadingInputProps) => {\n    const oneSecondHasPassed = useTimeout(timeout);\n\n    return (\n        <StyledResettableTextField\n            sx={sx}\n            label={label}\n            helperText={helperText}\n            fullWidth={fullWidth}\n            variant={variant}\n            margin={margin}\n            size={size}\n            disabled\n            onChange={() => {}}\n            InputProps={{\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n                        {oneSecondHasPassed ? (\n                            <CircularProgress color=\"inherit\" size={20} />\n                        ) : (\n                            // use an adornment of the same size to avoid visual jumps\n                            <span style={{ width: 20 }}>&nbsp;</span>\n                        )}\n                    </InputAdornment>\n                ),\n            }}\n        />\n    );\n};\n\nconst PREFIX = 'RaLoadingInput';\n\n// make it look just like a regular input, even though it's disabled\n// because the loading indicator is enough\nconst StyledResettableTextField = styled(ResettableTextField, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    '& .MuiInputLabel-root.Mui-disabled': {\n        color: theme.palette.text.secondary,\n    },\n    '& .MuiFilledInput-root.Mui-disabled': {\n        background:\n            theme.palette.mode === 'light'\n                ? 'rgba(0, 0, 0, 0.04)'\n                : 'rgba(255, 255, 255, 0.09)',\n    },\n    '& .MuiFilledInput-root.Mui-disabled:before': {\n        borderBottomStyle: 'solid',\n    },\n}));\n\nexport interface LoadingInputProps {\n    fullWidth?: boolean;\n    helperText?: React.ReactNode;\n    margin?: 'normal' | 'none' | 'dense';\n    label?: string | React.ReactElement | false;\n    sx?: SxProps;\n    size?: 'medium' | 'small';\n    timeout?: number;\n    variant?: 'standard' | 'filled' | 'outlined';\n}\n"]},"metadata":{},"sourceType":"module"}