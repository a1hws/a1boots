{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { CoreAdminContext } from 'ra-core';\nimport { defaultLightTheme } from './defaultTheme';\nimport { ThemeProvider, ThemesContext } from './layout/Theme';\nexport var AdminContext = function AdminContext(props) {\n  var theme = props.theme,\n      _a = props.lightTheme,\n      lightTheme = _a === void 0 ? defaultLightTheme : _a,\n      darkTheme = props.darkTheme,\n      defaultTheme = props.defaultTheme,\n      children = props.children,\n      rest = __rest(props, [\"theme\", \"lightTheme\", \"darkTheme\", \"defaultTheme\", \"children\"]);\n\n  return React.createElement(CoreAdminContext, __assign({}, rest), React.createElement(ThemesContext.Provider, {\n    value: {\n      lightTheme: theme || lightTheme,\n      darkTheme: darkTheme,\n      defaultTheme: defaultTheme\n    }\n  }, React.createElement(ThemeProvider, null, children)));\n};\nAdminContext.displayName = 'AdminContext';","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAwD,SAAxD;AAEA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6D,gBAA7D;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAyB;EAE7C,SAAK,GAMLA,KAAK,MANL;EAAA,IACAC,KAKAD,KAAK,WANL;EAAA,IACAE,UAAU,mBAAGN,iBAAH,GAAoBK,EAD9B;EAAA,IAEAE,SAAS,GAITH,KAAK,UANL;EAAA,IAGAI,YAAY,GAGZJ,KAAK,aANL;EAAA,IAIAK,QAAQ,GAERL,KAAK,SANL;EAAA,IAKGM,IAAI,UACPN,KADO,EANL,gEAMK,CALP;;EAOJ,OACIN,oBAACC,gBAAD,EAAiBY,aAAKD,IAAL,CAAjB,EACIZ,oBAACI,aAAa,CAACU,QAAf,EAAuB;IACnBC,KAAK,EAAE;MACHP,UAAU,EAAEQ,KAAK,IAAIR,UADlB;MAEHC,SAAS,WAFN;MAGHC,YAAY;IAHT;EADY,CAAvB,EAOIV,oBAACG,aAAD,EAAc,IAAd,EAAgBQ,QAAhB,CAPJ,CADJ,CADJ;AAaH,CAtBM;AA8BPN,YAAY,CAACY,WAAb,GAA2B,cAA3B","names":["React","CoreAdminContext","defaultLightTheme","ThemeProvider","ThemesContext","AdminContext","props","_a","lightTheme","darkTheme","defaultTheme","children","rest","__assign","Provider","value","theme","displayName"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/AdminContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { CoreAdminContext, CoreAdminContextProps } from 'ra-core';\n\nimport { defaultLightTheme } from './defaultTheme';\nimport { ThemeProvider, ThemesContext, RaThemeOptions } from './layout/Theme';\n\nexport const AdminContext = (props: AdminContextProps) => {\n    const {\n        theme,\n        lightTheme = defaultLightTheme,\n        darkTheme,\n        defaultTheme,\n        children,\n        ...rest\n    } = props;\n    return (\n        <CoreAdminContext {...rest}>\n            <ThemesContext.Provider\n                value={{\n                    lightTheme: theme || lightTheme,\n                    darkTheme,\n                    defaultTheme,\n                }}\n            >\n                <ThemeProvider>{children}</ThemeProvider>\n            </ThemesContext.Provider>\n        </CoreAdminContext>\n    );\n};\n\nexport interface AdminContextProps extends CoreAdminContextProps {\n    lightTheme?: RaThemeOptions;\n    darkTheme?: RaThemeOptions;\n    defaultTheme?: 'light' | 'dark';\n}\n\nAdminContext.displayName = 'AdminContext';\n"]},"metadata":{},"sourceType":"module"}