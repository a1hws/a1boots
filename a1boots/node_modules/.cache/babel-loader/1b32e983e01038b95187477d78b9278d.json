{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useCheckMinimumRequiredProps } from 'ra-core';\nimport { CreateView } from './CreateView';\nimport { CreateBase } from 'ra-core';\n/**\n * Page component for the Create view\n *\n * The `<Create>` component renders the page title and actions.\n * It is not responsible for rendering the actual form -\n * that's the job of its child component (usually `<SimpleForm>`),\n * to which it passes the `record` as prop.\n *\n * The <Create> component accepts the following props:\n *\n * - actions\n * - aside\n * - component\n * - mutationOptions\n * - title\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Create, SimpleForm, TextInput } from 'react-admin';\n *\n * export const PostCreate = (props) => (\n *     <Create {...props}>\n *         <SimpleForm>\n *             <TextInput source=\"title\" />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostCreate } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" create={PostCreate} />\n *     </Admin>\n * );\n * export default App;\n */\n\nexport var Create = function (props) {\n  useCheckMinimumRequiredProps('Create', ['children'], props);\n\n  var resource = props.resource,\n      record = props.record,\n      redirect = props.redirect,\n      transform = props.transform,\n      mutationOptions = props.mutationOptions,\n      disableAuthentication = props.disableAuthentication,\n      hasEdit = props.hasEdit,\n      hasShow = props.hasShow,\n      rest = __rest(props, [\"resource\", \"record\", \"redirect\", \"transform\", \"mutationOptions\", \"disableAuthentication\", \"hasEdit\", \"hasShow\"]);\n\n  return React.createElement(CreateBase, {\n    resource: resource,\n    record: record,\n    redirect: redirect,\n    transform: transform,\n    mutationOptions: mutationOptions,\n    disableAuthentication: disableAuthentication,\n    hasEdit: hasEdit,\n    hasShow: hasShow\n  }, React.createElement(CreateView, __assign({}, rest)));\n};\nCreate.propTypes = {\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n  aside: PropTypes.element,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  disableAuthentication: PropTypes.bool,\n  hasEdit: PropTypes.bool,\n  hasShow: PropTypes.bool,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  resource: PropTypes.string,\n  title: PropTypes.node,\n  record: PropTypes.object,\n  mutationOptions: PropTypes.object,\n  transform: PropTypes.func,\n  sx: PropTypes.any\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAA+BC,4BAA/B,QAAmE,SAAnE;AAGA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,OAAO,IAAMC,MAAM,GAAG,UAIlBC,KAJkB,EAMjB;EAEDJ,4BAA4B,CAAC,QAAD,EAAW,CAAC,UAAD,CAAX,EAAyBI,KAAzB,CAA5B;;EAEI,YAAQ,GASRA,KAAK,SATL;EAAA,IACAC,MAAM,GAQND,KAAK,OATL;EAAA,IAEAE,QAAQ,GAORF,KAAK,SATL;EAAA,IAGAG,SAAS,GAMTH,KAAK,UATL;EAAA,IAIAI,eAAe,GAKfJ,KAAK,gBATL;EAAA,IAKAK,qBAAqB,GAIrBL,KAAK,sBATL;EAAA,IAMAM,OAAO,GAGPN,KAAK,QATL;EAAA,IAOAO,OAAO,GAEPP,KAAK,QATL;EAAA,IAQGQ,IAAI,UACPR,KADO,EATL,iHASK,CARP;;EAUJ,OACIN,oBAACI,UAAD,EAAW;IACPW,QAAQ,EAAEA,QADH;IAEPR,MAAM,EAAEA,MAFD;IAGPC,QAAQ,EAAEA,QAHH;IAIPC,SAAS,EAAEA,SAJJ;IAKPC,eAAe,EAAEA,eALV;IAMPC,qBAAqB,EAAEA,qBANhB;IAOPC,OAAO,EAAEA,OAPF;IAQPC,OAAO,EAAEA;EARF,CAAX,EAUIb,oBAACG,UAAD,EAAWa,aAAKF,IAAL,CAAX,CAVJ,CADJ;AAcH,CAlCM;AAoCPT,MAAM,CAACY,SAAP,GAAmB;EACfC,OAAO,EAAEjB,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACmB,OAAX,EAAoBnB,SAAS,CAACoB,IAA9B,CAApB,CADM;EAEfC,KAAK,EAAErB,SAAS,CAACmB,OAFF;EAGfG,QAAQ,EAAEtB,SAAS,CAACuB,IAHL;EAIfC,SAAS,EAAExB,SAAS,CAACyB,MAJN;EAKff,qBAAqB,EAAEV,SAAS,CAACoB,IALlB;EAMfT,OAAO,EAAEX,SAAS,CAACoB,IANJ;EAOfR,OAAO,EAAEZ,SAAS,CAACoB,IAPJ;EAQfb,QAAQ,EAAEP,SAAS,CAACkB,SAAV,CAAoB,CAC1BlB,SAAS,CAACyB,MADgB,EAE1BzB,SAAS,CAACoB,IAFgB,EAG1BpB,SAAS,CAAC0B,IAHgB,CAApB,CARK;EAafZ,QAAQ,EAAEd,SAAS,CAACyB,MAbL;EAcfE,KAAK,EAAE3B,SAAS,CAACuB,IAdF;EAefjB,MAAM,EAAEN,SAAS,CAAC4B,MAfH;EAgBfnB,eAAe,EAAET,SAAS,CAAC4B,MAhBZ;EAiBfpB,SAAS,EAAER,SAAS,CAAC0B,IAjBN;EAkBfG,EAAE,EAAE7B,SAAS,CAAC8B;AAlBC,CAAnB","names":["React","PropTypes","useCheckMinimumRequiredProps","CreateView","CreateBase","Create","props","record","redirect","transform","mutationOptions","disableAuthentication","hasEdit","hasShow","rest","resource","__assign","propTypes","actions","oneOfType","element","bool","aside","children","node","className","string","func","title","object","sx","any"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/detail/Create.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, ReactNode } from 'react';\nimport PropTypes from 'prop-types';\nimport { Identifier, RaRecord, useCheckMinimumRequiredProps } from 'ra-core';\n\nimport { CreateProps } from '../types';\nimport { CreateView } from './CreateView';\nimport { CreateBase } from 'ra-core';\n\n/**\n * Page component for the Create view\n *\n * The `<Create>` component renders the page title and actions.\n * It is not responsible for rendering the actual form -\n * that's the job of its child component (usually `<SimpleForm>`),\n * to which it passes the `record` as prop.\n *\n * The <Create> component accepts the following props:\n *\n * - actions\n * - aside\n * - component\n * - mutationOptions\n * - title\n *\n * @example\n *\n * // in src/posts.js\n * import * as React from \"react\";\n * import { Create, SimpleForm, TextInput } from 'react-admin';\n *\n * export const PostCreate = (props) => (\n *     <Create {...props}>\n *         <SimpleForm>\n *             <TextInput source=\"title\" />\n *         </SimpleForm>\n *     </Create>\n * );\n *\n * // in src/App.js\n * import * as React from \"react\";\n * import { Admin, Resource } from 'react-admin';\n *\n * import { PostCreate } from './posts';\n *\n * const App = () => (\n *     <Admin dataProvider={...}>\n *         <Resource name=\"posts\" create={PostCreate} />\n *     </Admin>\n * );\n * export default App;\n */\nexport const Create = <\n    RecordType extends Omit<RaRecord, 'id'> = any,\n    ResultRecordType extends RaRecord = RecordType & { id: Identifier }\n>(\n    props: CreateProps<RecordType, Error, ResultRecordType> & {\n        children: ReactNode;\n    }\n): ReactElement => {\n    useCheckMinimumRequiredProps('Create', ['children'], props);\n    const {\n        resource,\n        record,\n        redirect,\n        transform,\n        mutationOptions,\n        disableAuthentication,\n        hasEdit,\n        hasShow,\n        ...rest\n    } = props;\n    return (\n        <CreateBase<RecordType, ResultRecordType>\n            resource={resource}\n            record={record}\n            redirect={redirect}\n            transform={transform}\n            mutationOptions={mutationOptions}\n            disableAuthentication={disableAuthentication}\n            hasEdit={hasEdit}\n            hasShow={hasShow}\n        >\n            <CreateView {...rest} />\n        </CreateBase>\n    );\n};\n\nCreate.propTypes = {\n    actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n    aside: PropTypes.element,\n    children: PropTypes.node,\n    className: PropTypes.string,\n    disableAuthentication: PropTypes.bool,\n    hasEdit: PropTypes.bool,\n    hasShow: PropTypes.bool,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    title: PropTypes.node,\n    record: PropTypes.object,\n    mutationOptions: PropTypes.object,\n    transform: PropTypes.func,\n    sx: PropTypes.any,\n};\n"]},"metadata":{},"sourceType":"module"}