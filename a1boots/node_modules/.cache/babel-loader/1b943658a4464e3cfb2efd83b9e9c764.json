{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { memo } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Pagination } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { useTranslate } from 'ra-core';\nexport var PaginationActions = memo(function (props) {\n  var page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      count = props.count,\n      onPageChange = props.onPageChange,\n      _a = props.size,\n      size = _a === void 0 ? 'small' : _a,\n      className = props.className,\n      rest = __rest(props, [\"page\", \"rowsPerPage\", \"count\", \"onPageChange\", \"size\", \"className\"]);\n\n  var translate = useTranslate();\n  var nbPages = Math.ceil(count / rowsPerPage) || 1;\n\n  if (nbPages === 1) {\n    return React.createElement(Root, {\n      className: className\n    });\n  }\n\n  var getItemAriaLabel = function (type, page, selected) {\n    if (type === 'page') {\n      return selected ? translate('ra.navigation.current_page', {\n        page: page,\n        _: \"page \".concat(page)\n      }) : translate('ra.navigation.page', {\n        page: page,\n        _: \"Go to page \".concat(page)\n      });\n    }\n\n    return translate(\"ra.navigation.\".concat(type), {\n      _: \"Go to \".concat(type, \" page\")\n    });\n  };\n\n  return React.createElement(Root, {\n    className: className\n  }, React.createElement(Pagination, __assign({\n    size: size,\n    count: nbPages,\n    // <TablePagination>, the parent, uses 0-based pagination\n    // while <Pagination> uses 1-based pagination\n    page: page + 1,\n    onChange: function (e, page) {\n      return onPageChange(e, page - 1);\n    }\n  }, sanitizeRestProps(rest), {\n    getItemAriaLabel: getItemAriaLabel\n  })));\n});\n/**\n * PaginationActions propTypes are copied over from Material UI’s\n * TablePaginationActions propTypes. See\n * https://github.com/mui/material-ui/blob/869692ecf3812bc4577ed4dde81a9911c5949695/packages/material-ui/src/TablePaginationActions/TablePaginationActions.js#L53-L85\n * for reference.\n */\n\nPaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\n  size: PropTypes.oneOf(['small', 'medium', 'large'])\n};\nvar PREFIX = 'RaPaginationActions';\nvar Root = styled('div', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    flexShrink: 0,\n    ml: 4\n  };\n});\n\nvar sanitizeRestProps = function (_a) {\n  var nextIconButtonProps = _a.nextIconButtonProps,\n      backIconButtonProps = _a.backIconButtonProps,\n      rest = __rest(_a, [\"nextIconButtonProps\", \"backIconButtonProps\"]);\n\n  return rest;\n};","map":{"version":3,"mappings":"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","names":["React","memo","styled","Pagination","PropTypes","useTranslate","PaginationActions","props","rowsPerPage","count","onPageChange","_a","size","className","rest","translate","nbPages","Math","ceil","Root","getItemAriaLabel","type","page","selected","_","__assign","onChange","e","sanitizeRestProps","propTypes","number","isRequired","func","color","oneOf","PREFIX","name","overridesResolver","styles","root","theme","flexShrink","ml","backIconButtonProps"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/list/pagination/PaginationActions.tsx"],"sourcesContent":["import * as React from 'react';\nimport { memo, FC } from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Pagination, PaginationProps } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { useTranslate } from 'ra-core';\n\nexport const PaginationActions: FC<PaginationActionsProps> = memo(props => {\n    const {\n        page,\n        rowsPerPage,\n        count,\n        onPageChange,\n        size = 'small',\n        className,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n\n    const nbPages = Math.ceil(count / rowsPerPage) || 1;\n\n    if (nbPages === 1) {\n        return <Root className={className} />;\n    }\n\n    const getItemAriaLabel = (\n        type: 'page' | 'first' | 'last' | 'next' | 'previous',\n        page: number,\n        selected: boolean\n    ) => {\n        if (type === 'page') {\n            return selected\n                ? translate('ra.navigation.current_page', {\n                      page,\n                      _: `page ${page}`,\n                  })\n                : translate('ra.navigation.page', {\n                      page,\n                      _: `Go to page ${page}`,\n                  });\n        }\n        return translate(`ra.navigation.${type}`, { _: `Go to ${type} page` });\n    };\n\n    return (\n        <Root className={className}>\n            <Pagination\n                size={size}\n                count={nbPages}\n                // <TablePagination>, the parent, uses 0-based pagination\n                // while <Pagination> uses 1-based pagination\n                page={page + 1}\n                onChange={(e: any, page) => onPageChange(e, page - 1)}\n                {...sanitizeRestProps(rest)}\n                getItemAriaLabel={getItemAriaLabel}\n            />\n        </Root>\n    );\n});\n\nexport interface PaginationActionsProps extends PaginationProps {\n    page: number;\n    rowsPerPage: number;\n    count: number;\n    onPageChange: (event: MouseEvent, page: number) => void;\n}\n/**\n * PaginationActions propTypes are copied over from Material UI’s\n * TablePaginationActions propTypes. See\n * https://github.com/mui/material-ui/blob/869692ecf3812bc4577ed4dde81a9911c5949695/packages/material-ui/src/TablePaginationActions/TablePaginationActions.js#L53-L85\n * for reference.\n */\nPaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\n};\n\nconst PREFIX = 'RaPaginationActions';\n\nconst Root = styled('div', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    flexShrink: 0,\n    ml: 4,\n}));\n\nconst sanitizeRestProps = ({\n    nextIconButtonProps,\n    backIconButtonProps,\n    ...rest\n}: any) => rest;\n"]},"metadata":{},"sourceType":"module"}