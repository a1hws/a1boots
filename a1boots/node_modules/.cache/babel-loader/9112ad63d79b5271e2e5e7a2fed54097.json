{"ast":null,"code":"import { useStoreContext } from './useStoreContext';\n/**\n * Get a callback to remove all items from the store\n *\n * @example\n * import { useResetStore } from 'react-admin';\n *\n * const ResetPrefs = () {\n *    const reset = useResetStore();\n *\n *    const handleClick = () => {\n *        reset();\n *    };\n *\n *    return <Button onClick={handleClick}>Reset preferences</Button>;\n * }\n */\n\nexport var useResetStore = function () {\n  var reset = useStoreContext().reset;\n  return reset;\n};","map":{"version":3,"mappings":"AAAA,SAASA,eAAT,QAAgC,mBAAhC;AAEA;;;;;;;;;;;;;;;;;AAgBA,OAAO,IAAMC,aAAa,GAAG;EACjB,SAAK,GAAKD,eAAe,GAAEE,KAA3B;EACR,OAAOA,KAAP;AACH,CAHM","names":["useStoreContext","useResetStore","reset"],"sources":["/var/www/a1boots/node_modules/ra-core/src/store/useResetStore.ts"],"sourcesContent":["import { useStoreContext } from './useStoreContext';\n\n/**\n * Get a callback to remove all items from the store\n *\n * @example\n * import { useResetStore } from 'react-admin';\n *\n * const ResetPrefs = () {\n *    const reset = useResetStore();\n *\n *    const handleClick = () => {\n *        reset();\n *    };\n *\n *    return <Button onClick={handleClick}>Reset preferences</Button>;\n * }\n */\nexport const useResetStore = () => {\n    const { reset } = useStoreContext();\n    return reset;\n};\n"]},"metadata":{},"sourceType":"module"}