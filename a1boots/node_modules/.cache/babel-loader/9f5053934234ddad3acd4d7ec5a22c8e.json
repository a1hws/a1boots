{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { Datagrid } from './datagrid';\nimport { SingleFieldList } from './SingleFieldList';\nimport { ArrayField, BooleanField, ChipField, DateField, EmailField, NumberField, ReferenceField, ReferenceArrayField, TextField, UrlField } from '../field';\nexport var listFieldTypes = {\n  table: {\n    component: function (props) {\n      var hasEdit = props.hasEdit,\n          hasShow = props.hasShow,\n          rest = __rest(props, [\"hasEdit\", \"hasShow\"]);\n\n      return React.createElement(Datagrid, __assign({\n        rowClick: !hasEdit && hasShow ? 'show' : 'edit'\n      }, rest));\n    },\n    representation: function (props, children) {\n      return \"        <Datagrid rowClick=\\\"\".concat(!props.hasEdit && props.hasShow ? 'show' : 'edit', \"\\\">\\n\").concat(children.map(function (child) {\n        return \"            \".concat(child.getRepresentation());\n      }).join('\\n'), \"\\n        </Datagrid>\");\n    }\n  },\n  array: {\n    // eslint-disable-next-line react/display-name\n    component: function (_a) {\n      var children = _a.children,\n          props = __rest(_a, [\"children\"]);\n\n      return React.createElement(ArrayField, __assign({}, props), React.createElement(SingleFieldList, null, React.createElement(ChipField, {\n        source: children.length > 0 && children[0].props.source\n      })));\n    },\n    representation: function (props, children) {\n      return \"<ArrayField source=\\\"\".concat(props.source, \"\\\"><SingleFieldList><ChipField source=\\\"\").concat(children.length > 0 && children[0].getProps().source, \"\\\" /></SingleFieldList></ArrayField>\");\n    }\n  },\n  boolean: {\n    component: BooleanField,\n    representation: function (props) {\n      return \"<BooleanField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  date: {\n    component: DateField,\n    representation: function (props) {\n      return \"<DateField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  email: {\n    component: EmailField,\n    representation: function (props) {\n      return \"<EmailField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  id: {\n    component: TextField,\n    representation: function (props) {\n      return \"<TextField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  number: {\n    component: NumberField,\n    representation: function (props) {\n      return \"<NumberField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  reference: {\n    component: ReferenceField,\n    representation: function (props) {\n      return \"<ReferenceField source=\\\"\".concat(props.source, \"\\\" reference=\\\"\").concat(props.reference, \"\\\" />\");\n    }\n  },\n  referenceChild: {\n    component: function () {\n      return React.createElement(TextField, {\n        source: \"id\"\n      });\n    },\n    representation: function () {\n      return \"<TextField source=\\\"id\\\" />\";\n    }\n  },\n  referenceArray: {\n    component: ReferenceArrayField,\n    representation: function (props) {\n      return \"<ReferenceArrayField source=\\\"\".concat(props.source, \"\\\" reference=\\\"\").concat(props.reference, \"\\\" />\");\n    }\n  },\n  referenceArrayChild: {\n    component: function () {\n      return React.createElement(SingleFieldList, null, React.createElement(ChipField, {\n        source: \"id\"\n      }));\n    },\n    representation: function () {\n      return \"<SingleFieldList><ChipField source=\\\"id\\\" /></SingleFieldList>\";\n    }\n  },\n  richText: undefined,\n  string: {\n    component: TextField,\n    representation: function (props) {\n      return \"<TextField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  },\n  url: {\n    component: UrlField,\n    representation: function (props) {\n      return \"<UrlField source=\\\"\".concat(props.source, \"\\\" />\");\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["React","Datagrid","SingleFieldList","ArrayField","BooleanField","ChipField","DateField","EmailField","NumberField","ReferenceField","ReferenceArrayField","TextField","UrlField","listFieldTypes","table","component","props","hasShow","rest","__assign","rowClick","hasEdit","representation","children","concat","map","child","getRepresentation","join","array","_a","source","length","getProps","boolean","date","email","id","number","reference","referenceChild","referenceArray","referenceArrayChild","richText","undefined","string","url"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/list/listFieldTypes.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Datagrid } from './datagrid';\nimport { SingleFieldList } from './SingleFieldList';\nimport {\n    ArrayField,\n    BooleanField,\n    ChipField,\n    DateField,\n    EmailField,\n    NumberField,\n    ReferenceField,\n    ReferenceArrayField,\n    TextField,\n    UrlField,\n} from '../field';\n\nexport const listFieldTypes = {\n    table: {\n        component: props => {\n            const { hasEdit, hasShow, ...rest } = props;\n            return (\n                <Datagrid\n                    rowClick={!hasEdit && hasShow ? 'show' : 'edit'}\n                    {...rest}\n                />\n            );\n        }, // eslint-disable-line react/display-name\n        representation: (props, children) => `        <Datagrid rowClick=\"${\n            !props.hasEdit && props.hasShow ? 'show' : 'edit'\n        }\">\n${children.map(child => `            ${child.getRepresentation()}`).join('\\n')}\n        </Datagrid>`,\n    },\n    array: {\n        // eslint-disable-next-line react/display-name\n        component: ({ children, ...props }) => (\n            <ArrayField {...props}>\n                <SingleFieldList>\n                    <ChipField\n                        source={children.length > 0 && children[0].props.source}\n                    />\n                </SingleFieldList>\n            </ArrayField>\n        ),\n        representation: (props, children) =>\n            `<ArrayField source=\"${\n                props.source\n            }\"><SingleFieldList><ChipField source=\"${\n                children.length > 0 && children[0].getProps().source\n            }\" /></SingleFieldList></ArrayField>`,\n    },\n    boolean: {\n        component: BooleanField,\n        representation: props => `<BooleanField source=\"${props.source}\" />`,\n    },\n    date: {\n        component: DateField,\n        representation: props => `<DateField source=\"${props.source}\" />`,\n    },\n    email: {\n        component: EmailField,\n        representation: props => `<EmailField source=\"${props.source}\" />`,\n    },\n    id: {\n        component: TextField,\n        representation: props => `<TextField source=\"${props.source}\" />`,\n    },\n    number: {\n        component: NumberField,\n        representation: props => `<NumberField source=\"${props.source}\" />`,\n    },\n    reference: {\n        component: ReferenceField,\n        representation: props =>\n            `<ReferenceField source=\"${props.source}\" reference=\"${props.reference}\" />`,\n    },\n    referenceChild: {\n        component: () => <TextField source=\"id\" />, // eslint-disable-line react/display-name\n        representation: () => `<TextField source=\"id\" />`,\n    },\n    referenceArray: {\n        component: ReferenceArrayField,\n        representation: props =>\n            `<ReferenceArrayField source=\"${props.source}\" reference=\"${props.reference}\" />`,\n    },\n    referenceArrayChild: {\n        component: () => (\n            <SingleFieldList>\n                <ChipField source=\"id\" />\n            </SingleFieldList>\n        ), // eslint-disable-line react/display-name\n        representation: () =>\n            `<SingleFieldList><ChipField source=\"id\" /></SingleFieldList>`,\n    },\n    richText: undefined, // never display a rich text field in a datagrid\n    string: {\n        component: TextField,\n        representation: props => `<TextField source=\"${props.source}\" />`,\n    },\n    url: {\n        component: UrlField,\n        representation: props => `<UrlField source=\"${props.source}\" />`,\n    },\n};\n"]},"metadata":{},"sourceType":"module"}