{"ast":null,"code":"var __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport * as React from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { useListContext, useTranslate } from 'ra-core';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { useSavedQueries, extractValidSavedQueries } from './useSavedQueries';\nexport var RemoveSavedQueryDialog = function (_a) {\n  var open = _a.open,\n      onClose = _a.onClose;\n  var translate = useTranslate();\n\n  var _b = useListContext(),\n      resource = _b.resource,\n      filterValues = _b.filterValues,\n      sort = _b.sort,\n      perPage = _b.perPage,\n      displayedFilters = _b.displayedFilters;\n\n  var _c = useSavedQueries(resource),\n      savedQueries = _c[0],\n      setSavedQueries = _c[1];\n\n  var removeQuery = function () {\n    var savedQueryToRemove = {\n      filter: filterValues,\n      sort: sort,\n      perPage: perPage,\n      displayedFilters: displayedFilters\n    };\n    var newSavedQueries = extractValidSavedQueries(savedQueries);\n    var index = newSavedQueries.findIndex(function (savedFilter) {\n      return isEqual(savedFilter.value, savedQueryToRemove);\n    });\n    setSavedQueries(__spreadArray(__spreadArray([], newSavedQueries.slice(0, index), true), newSavedQueries.slice(index + 1), true));\n    onClose();\n  };\n\n  return React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\"\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\"\n  }, translate('ra.saved_queries.remove_dialog_title', {\n    _: 'Remove saved query?'\n  })), React.createElement(DialogContent, null, React.createElement(DialogContentText, null, translate('ra.saved_queries.remove_message', {\n    _: 'Are you sure you want to remove that item from your list of saved queries?'\n  }))), React.createElement(DialogActions, null, React.createElement(Button, {\n    onClick: onClose\n  }, translate('ra.action.cancel')), React.createElement(Button, {\n    onClick: removeQuery,\n    color: \"primary\",\n    // eslint-disable-next-line jsx-a11y/no-autofocus\n    autoFocus: true\n  }, translate('ra.action.confirm'))));\n};","map":{"version":3,"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,SAA7C;AACA,SACIC,MADJ,EAEIC,MAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,iBALJ,EAMIC,WANJ,QAOO,eAPP;AASA,SAASC,eAAT,EAA0BC,wBAA1B,QAA0D,mBAA1D;AAOA,OAAO,IAAMC,sBAAsB,GAAG,UAACC,EAAD,EAGR;MAF1BC,IAAI;MACJC,OAAO;EAEP,IAAMC,SAAS,GAAGb,YAAY,EAA9B;;EACM,SAMFD,cAAc,EANZ;EAAA,IACFe,QAAQ,cADN;EAAA,IAEFC,YAAY,kBAFV;EAAA,IAGFC,IAAI,UAHF;EAAA,IAIFC,OAAO,aAJL;EAAA,IAKFC,gBAAgB,sBALd;;EAQA,SAAkCX,eAAe,CAACO,QAAD,CAAjD;EAAA,IAACK,YAAY,QAAb;EAAA,IAAeC,eAAe,QAA9B;;EAEN,IAAMC,WAAW,GAAG;IAChB,IAAIC,kBAAkB,GAAG;MACrBC,MAAM,EAAER,YADa;MAErBC,IAAI,MAFiB;MAGrBC,OAAO,SAHc;MAIrBC,gBAAgB;IAJK,CAAzB;IAOA,IAAMM,eAAe,GAAGhB,wBAAwB,CAACW,YAAD,CAAhD;IACA,IAAMM,KAAK,GAAGD,eAAe,CAACE,SAAhB,CAA0B,uBAAW;MAC/C,cAAO,CAACC,WAAW,CAACC,KAAb,EAAoBN,kBAApB,CAAP;IAA8C,CADpC,CAAd;IAGAF,eAAe,iCACRI,eAAe,CAACK,KAAhB,CAAsB,CAAtB,EAAyBJ,KAAzB,CADQ,EACuB,IADvB,GAERD,eAAe,CAACK,KAAhB,CAAsBJ,KAAK,GAAG,CAA9B,CAFQ,EAEwB,IAFxB,EAAf;IAIAb,OAAO;EACV,CAjBD;;EAmBA,OACIf,oBAACK,MAAD,EAAO;IACHS,IAAI,EAAEA,IADH;IAEHC,OAAO,EAAEA,OAFN;IAEa,mBACA,oBAHb;IAGiC,oBACnB;EAJd,CAAP,EAMIf,oBAACS,WAAD,EAAY;IAACwB,EAAE,EAAC;EAAJ,CAAZ,EACKjB,SAAS,CAAC,sCAAD,EAAyC;IAC/CkB,CAAC,EAAE;EAD4C,CAAzC,CADd,CANJ,EAWIlC,oBAACO,aAAD,EAAc,IAAd,EACIP,oBAACQ,iBAAD,EAAkB,IAAlB,EACKQ,SAAS,CAAC,iCAAD,EAAoC;IAC1CkB,CAAC,EACG;EAFsC,CAApC,CADd,CADJ,CAXJ,EAmBIlC,oBAACM,aAAD,EAAc,IAAd,EACIN,oBAACI,MAAD,EAAO;IAAC+B,OAAO,EAAEpB;EAAV,CAAP,EACKC,SAAS,CAAC,kBAAD,CADd,CADJ,EAIIhB,oBAACI,MAAD,EAAO;IACH+B,OAAO,EAAEX,WADN;IAEHY,KAAK,EAAC,SAFH;IAGH;IACAC,SAAS;EAJN,CAAP,EAMKrB,SAAS,CAAC,mBAAD,CANd,CAJJ,CAnBJ,CADJ;AAmCH,CArEM","names":["React","isEqual","useListContext","useTranslate","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useSavedQueries","extractValidSavedQueries","RemoveSavedQueryDialog","_a","open","onClose","translate","resource","filterValues","sort","perPage","displayedFilters","savedQueries","setSavedQueries","removeQuery","savedQueryToRemove","filter","newSavedQueries","index","findIndex","savedFilter","value","slice","id","_","onClick","color","autoFocus"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/list/filter/RemoveSavedQueryDialog.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { useListContext, useTranslate } from 'ra-core';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n} from '@mui/material';\n\nimport { useSavedQueries, extractValidSavedQueries } from './useSavedQueries';\n\nexport interface RemoveSavedQueryDialogProps {\n    open: boolean;\n    onClose: () => void;\n}\n\nexport const RemoveSavedQueryDialog = ({\n    open,\n    onClose,\n}: RemoveSavedQueryDialogProps): ReactElement => {\n    const translate = useTranslate();\n    const {\n        resource,\n        filterValues,\n        sort,\n        perPage,\n        displayedFilters,\n    } = useListContext();\n\n    const [savedQueries, setSavedQueries] = useSavedQueries(resource);\n\n    const removeQuery = (): void => {\n        let savedQueryToRemove = {\n            filter: filterValues,\n            sort,\n            perPage,\n            displayedFilters,\n        };\n\n        const newSavedQueries = extractValidSavedQueries(savedQueries);\n        const index = newSavedQueries.findIndex(savedFilter =>\n            isEqual(savedFilter.value, savedQueryToRemove)\n        );\n        setSavedQueries([\n            ...newSavedQueries.slice(0, index),\n            ...newSavedQueries.slice(index + 1),\n        ]);\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">\n                {translate('ra.saved_queries.remove_dialog_title', {\n                    _: 'Remove saved query?',\n                })}\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    {translate('ra.saved_queries.remove_message', {\n                        _:\n                            'Are you sure you want to remove that item from your list of saved queries?',\n                    })}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>\n                    {translate('ra.action.cancel')}\n                </Button>\n                <Button\n                    onClick={removeQuery}\n                    color=\"primary\"\n                    // eslint-disable-next-line jsx-a11y/no-autofocus\n                    autoFocus\n                >\n                    {translate('ra.action.confirm')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}