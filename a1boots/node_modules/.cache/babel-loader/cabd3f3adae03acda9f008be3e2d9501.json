{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Tab from '@mui/material/Tab';\nimport { useFormGroup, useTranslate } from 'ra-core';\nimport { capitalize } from 'inflection';\nimport clsx from 'clsx';\n/**\n * Single tab that selects a locale in a TranslatableInputs component.\n * @see TranslatableInputs\n */\n\nexport var TranslatableInputsTab = function (props) {\n  var _a;\n\n  var _b = props.groupKey,\n      groupKey = _b === void 0 ? '' : _b,\n      locale = props.locale,\n      rest = __rest(props, [\"groupKey\", \"locale\"]);\n\n  var _c = useFormGroup(\"\".concat(groupKey).concat(locale)),\n      isValid = _c.isValid,\n      isTouched = _c.isTouched;\n\n  var translate = useTranslate();\n  return React.createElement(StyledTab, __assign({\n    id: \"translatable-header-\".concat(groupKey).concat(locale),\n    label: translate(\"ra.locales.\".concat(locale), {\n      _: capitalize(locale)\n    }),\n    className: clsx(TranslatableInputsTabClasses.root, (_a = {}, _a[TranslatableInputsTabClasses.error] = !isValid && isTouched, _a))\n  }, rest));\n};\nvar PREFIX = 'RaTranslatableInputsTab';\nexport var TranslatableInputsTabClasses = {\n  root: \"\".concat(PREFIX, \"-root\"),\n  error: \"\".concat(PREFIX, \"-error\")\n};\nvar StyledTab = styled(Tab, {\n  name: PREFIX\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {}, _b[\"&.\".concat(TranslatableInputsTabClasses.root)] = {\n    fontSize: '0.8em',\n    minHeight: theme.spacing(3),\n    minWidth: theme.spacing(6)\n  }, _b[\"&.\".concat(TranslatableInputsTabClasses.error)] = {\n    color: theme.palette.error.main\n  }, _b;\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,GAAP,MAA8B,mBAA9B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,SAA3C;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA;;;;;AAIA,OAAO,IAAMC,qBAAqB,GAAG,UACjCC,KADiC,EACW;;;EAEpC,SAAmCA,KAAK,SAAxC;EAAA,YAAQ,mBAAG,EAAH,GAAKC,EAAb;EAAA,IAAeC,MAAM,GAAcF,KAAK,OAAxC;EAAA,IAA0BG,IAAI,UAAKH,KAAL,EAAhC,sBAAgC,CAA9B;;EACF,SAAyBL,YAAY,CAAC,UAAGS,QAAH,EAAWC,MAAX,CAAcH,MAAd,CAAD,CAArC;EAAA,IAAEI,OAAO,aAAT;EAAA,IAAWC,SAAS,eAApB;;EACN,IAAMC,SAAS,GAAGZ,YAAY,EAA9B;EAEA,OACIJ,oBAACiB,SAAD,EAAUC;IACNC,EAAE,EAAE,8BAAuBP,QAAvB,EAA+BC,MAA/B,CAAkCH,MAAlC,CADE;IAENU,KAAK,EAAEJ,SAAS,CAAC,qBAAcN,MAAd,CAAD,EAAyB;MACrCW,CAAC,EAAEhB,UAAU,CAACK,MAAD;IADwB,CAAzB,CAFV;IAKNY,SAAS,EAAEhB,IAAI,CAACiB,4BAA4B,CAACC,IAA9B,GAAkCC,SAC7CA,GAACF,4BAA4B,CAACG,KAA9B,IAAsC,CAACZ,OAAD,IAAYC,SADL,IAAlC;EALT,GAQFJ,IARE,CAAV,CADJ;AAYH,CAnBM;AA0BP,IAAMgB,MAAM,GAAG,yBAAf;AAEA,OAAO,IAAMJ,4BAA4B,GAAG;EACxCC,IAAI,EAAE,UAAGG,MAAH,EAAS,OAAT,CADkC;EAExCD,KAAK,EAAE,UAAGC,MAAH,EAAS,QAAT;AAFiC,CAArC;AAKP,IAAMV,SAAS,GAAGhB,MAAM,CAACC,GAAD,EAAM;EAAE0B,IAAI,EAAED;AAAR,CAAN,CAAN,CAA8B,UAACF,EAAD,EAAU;;;MAAPI,KAAK;EAAO,gBAC3DpB,GAAC,YAAKc,4BAA4B,CAACC,IAAlC,CAAD,IAA4C;IACxCM,QAAQ,EAAE,OAD8B;IAExCC,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CAF6B;IAGxCC,QAAQ,EAAEJ,KAAK,CAACG,OAAN,CAAc,CAAd;EAH8B,CADe,EAO3DvB,GAAC,YAAKc,4BAA4B,CAACG,KAAlC,CAAD,IAA6C;IACzCQ,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcT,KAAd,CAAoBU;EADc,CAPc;AAU7D,CAVgB,CAAlB","names":["React","styled","Tab","useFormGroup","useTranslate","capitalize","clsx","TranslatableInputsTab","props","_b","locale","rest","groupKey","concat","isValid","isTouched","translate","StyledTab","__assign","id","label","_","className","TranslatableInputsTabClasses","root","_a","error","PREFIX","name","theme","fontSize","minHeight","spacing","minWidth","color","palette","main"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/input/TranslatableInputsTab.tsx"],"sourcesContent":["import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Tab, { TabProps } from '@mui/material/Tab';\nimport { useFormGroup, useTranslate } from 'ra-core';\nimport { capitalize } from 'inflection';\nimport clsx from 'clsx';\n\n/**\n * Single tab that selects a locale in a TranslatableInputs component.\n * @see TranslatableInputs\n */\nexport const TranslatableInputsTab = (\n    props: TranslatableInputsTabProps & TabProps\n) => {\n    const { groupKey = '', locale, ...rest } = props;\n    const { isValid, isTouched } = useFormGroup(`${groupKey}${locale}`);\n    const translate = useTranslate();\n\n    return (\n        <StyledTab\n            id={`translatable-header-${groupKey}${locale}`}\n            label={translate(`ra.locales.${locale}`, {\n                _: capitalize(locale),\n            })}\n            className={clsx(TranslatableInputsTabClasses.root, {\n                [TranslatableInputsTabClasses.error]: !isValid && isTouched,\n            })}\n            {...rest}\n        />\n    );\n};\n\nexport interface TranslatableInputsTabProps {\n    groupKey?: string;\n    locale: string;\n}\n\nconst PREFIX = 'RaTranslatableInputsTab';\n\nexport const TranslatableInputsTabClasses = {\n    root: `${PREFIX}-root`,\n    error: `${PREFIX}-error`,\n};\n\nconst StyledTab = styled(Tab, { name: PREFIX })(({ theme }) => ({\n    [`&.${TranslatableInputsTabClasses.root}`]: {\n        fontSize: '0.8em',\n        minHeight: theme.spacing(3),\n        minWidth: theme.spacing(6),\n    },\n\n    [`&.${TranslatableInputsTabClasses.error}`]: {\n        color: theme.palette.error.main,\n    },\n}));\n"]},"metadata":{},"sourceType":"module"}