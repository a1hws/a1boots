{"ast":null,"code":"import { useContext, useMemo } from 'react';\nimport defaults from 'lodash/defaults';\nimport { CreateContext } from './CreateContext';\n/**\n * Hook to read the create controller props from the CreateContext.\n *\n * Mostly used within a <CreateContext.Provider> (e.g. as a descendent of <Create>).\n *\n * But you can also use it without a <CreateContext.Provider>. In this case, it is up to you\n * to pass all the necessary props.\n *\n * The given props will take precedence over context values.\n *\n * @typedef {Object} CreateControllerProps\n *\n * @returns {CreateControllerResult} create controller props\n *\n * @see useCreateController for how it is filled\n *\n */\n\nexport var useCreateContext = function useCreateContext(props) {\n  var context = useContext( // Can't find a way to specify the RecordType when CreateContext is declared\n  // @ts-ignore\n  CreateContext); // Props take precedence over the context\n\n  return useMemo(function () {\n    return defaults({}, props != null ? extractCreateContextProps(props) : {}, context);\n  }, [context, props]);\n};\n/**\n * Extract only the create controller props\n *\n * @param {Object} props props passed to the useCreateContext hook\n *\n * @returns {CreateControllerResult} create controller props\n */\n\nvar extractCreateContextProps = function extractCreateContextProps(_a) {\n  var record = _a.record,\n      defaultTitle = _a.defaultTitle,\n      isFetching = _a.isFetching,\n      isLoading = _a.isLoading,\n      redirect = _a.redirect,\n      resource = _a.resource,\n      save = _a.save,\n      saving = _a.saving;\n  return {\n    record: record,\n    defaultTitle: defaultTitle,\n    isFetching: isFetching,\n    isLoading: isLoading,\n    redirect: redirect,\n    resource: resource,\n    save: save,\n    saving: saving\n  };\n};","map":{"version":3,"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAGA,SAASC,aAAT,QAA8B,iBAA9B;AAGA;;;;;;;;;;;;;;;;;;AAiBA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAC5BC,KAD4B,EACuB;EAEnD,IAAMC,OAAO,GAAGN,UAAU,EACtB;EACA;EACAG,aAHsB,CAA1B,CAFmD,CAOnD;;EACA,OAAOF,OAAO,CACV;IACI,eAAQ,CACJ,EADI,EAEJI,KAAK,IAAI,IAAT,GAAgBE,yBAAyB,CAACF,KAAD,CAAzC,GAAmD,EAF/C,EAGJC,OAHI,CAAR;EAIC,CANK,EAOV,CAACA,OAAD,EAAUD,KAAV,CAPU,CAAd;AASH,CAlBM;AAoBP;;;;;;;;AAOA,IAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,EAAD,EAS5B;MARFC,MAAM;MACNC,YAAY;MACZC,UAAU;MACVC,SAAS;MACTC,QAAQ;MACRC,QAAQ;MACRC,IAAI;MACJC,MAAM;EACC,OAAC;IACRP,MAAM,QADE;IAERC,YAAY,cAFJ;IAGRC,UAAU,YAHF;IAIRC,SAAS,WAJD;IAKRC,QAAQ,UALA;IAMRC,QAAQ,UANA;IAORC,IAAI,MAPI;IAQRC,MAAM;EARE,CAAD;AAST,CAlBF","names":["useContext","useMemo","defaults","CreateContext","useCreateContext","props","context","extractCreateContextProps","_a","record","defaultTitle","isFetching","isLoading","redirect","resource","save","saving"],"sources":["/var/www/a1boots/node_modules/ra-core/src/controller/create/useCreateContext.tsx"],"sourcesContent":["import { useContext, useMemo } from 'react';\nimport defaults from 'lodash/defaults';\n\nimport { RaRecord } from '../../types';\nimport { CreateContext } from './CreateContext';\nimport { CreateControllerResult } from './useCreateController';\n\n/**\n * Hook to read the create controller props from the CreateContext.\n *\n * Mostly used within a <CreateContext.Provider> (e.g. as a descendent of <Create>).\n *\n * But you can also use it without a <CreateContext.Provider>. In this case, it is up to you\n * to pass all the necessary props.\n *\n * The given props will take precedence over context values.\n *\n * @typedef {Object} CreateControllerProps\n *\n * @returns {CreateControllerResult} create controller props\n *\n * @see useCreateController for how it is filled\n *\n */\nexport const useCreateContext = <RecordType extends RaRecord = RaRecord>(\n    props?: Partial<CreateControllerResult<RecordType>>\n): CreateControllerResult<RecordType> => {\n    const context = useContext<CreateControllerResult<RecordType>>(\n        // Can't find a way to specify the RecordType when CreateContext is declared\n        // @ts-ignore\n        CreateContext\n    );\n    // Props take precedence over the context\n    return useMemo(\n        () =>\n            defaults(\n                {},\n                props != null ? extractCreateContextProps(props) : {},\n                context\n            ),\n        [context, props]\n    );\n};\n\n/**\n * Extract only the create controller props\n *\n * @param {Object} props props passed to the useCreateContext hook\n *\n * @returns {CreateControllerResult} create controller props\n */\nconst extractCreateContextProps = ({\n    record,\n    defaultTitle,\n    isFetching,\n    isLoading,\n    redirect,\n    resource,\n    save,\n    saving,\n}: any) => ({\n    record,\n    defaultTitle,\n    isFetching,\n    isLoading,\n    redirect,\n    resource,\n    save,\n    saving,\n});\n"]},"metadata":{},"sourceType":"module"}