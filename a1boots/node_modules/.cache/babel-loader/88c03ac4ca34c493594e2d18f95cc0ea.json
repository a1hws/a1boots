{"ast":null,"code":"import * as React from 'react';\nimport { useState } from 'react';\nimport { useListContext, useTranslate } from 'ra-core';\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material';\nimport { extractValidSavedQueries, useSavedQueries } from './useSavedQueries';\nexport var AddSavedQueryDialog = function AddSavedQueryDialog(_a) {\n  var open = _a.open,\n      onClose = _a.onClose;\n  var translate = useTranslate();\n\n  var _b = useListContext(),\n      resource = _b.resource,\n      filterValues = _b.filterValues,\n      displayedFilters = _b.displayedFilters,\n      sort = _b.sort,\n      perPage = _b.perPage;\n\n  var _c = useSavedQueries(resource),\n      savedQueries = _c[0],\n      setSavedQueries = _c[1]; // input state\n\n\n  var _d = useState(''),\n      queryName = _d[0],\n      setQueryName = _d[1];\n\n  var handleQueryNameChange = function handleQueryNameChange(event) {\n    setQueryName(event.target.value);\n  };\n\n  var handleFormSubmit = function handleFormSubmit(e) {\n    e.preventDefault();\n    addQuery();\n  };\n\n  var addQuery = function addQuery() {\n    var newSavedQuery = {\n      label: queryName,\n      value: {\n        filter: filterValues,\n        sort: sort,\n        perPage: perPage,\n        displayedFilters: displayedFilters\n      }\n    };\n    var newSavedQueries = extractValidSavedQueries(savedQueries);\n    setSavedQueries(newSavedQueries.concat(newSavedQuery));\n    setQueryName('');\n    onClose();\n  };\n\n  return React.createElement(Dialog, {\n    open: open,\n    onClose: onClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, translate('ra.saved_queries.new_dialog_title', {\n    _: 'Save current query as'\n  })), React.createElement(DialogContent, null, React.createElement(\"form\", {\n    onSubmit: handleFormSubmit\n  }, React.createElement(TextField // eslint-disable-next-line jsx-a11y/no-autofocus\n  , {\n    // eslint-disable-next-line jsx-a11y/no-autofocus\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: translate('ra.saved_queries.query_name', {\n      _: 'Query name'\n    }),\n    fullWidth: true,\n    value: queryName,\n    onChange: handleQueryNameChange\n  }))), React.createElement(DialogActions, null, React.createElement(Button, {\n    onClick: onClose\n  }, translate('ra.action.cancel')), React.createElement(Button, {\n    onClick: addQuery,\n    color: \"primary\"\n  }, translate('ra.action.save'))));\n};","map":{"version":3,"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,cAAT,EAAyBC,YAAzB,QAA6C,SAA7C;AACA,SACIC,MADJ,EAEIC,MAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,WALJ,EAMIC,SANJ,QAOO,eAPP;AASA,SAASC,wBAAT,EAAmCC,eAAnC,QAA0D,mBAA1D;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,EAAD,EAGR;MAFvBC,IAAI;MACJC,OAAO;EAEP,IAAMC,SAAS,GAAGb,YAAY,EAA9B;;EACM,SAMFD,cAAc,EANZ;EAAA,IACFe,QAAQ,cADN;EAAA,IAEFC,YAAY,kBAFV;EAAA,IAGFC,gBAAgB,sBAHd;EAAA,IAIFC,IAAI,UAJF;EAAA,IAKFC,OAAO,aALL;;EAQA,SAAkCV,eAAe,CAACM,QAAD,CAAjD;EAAA,IAACK,YAAY,QAAb;EAAA,IAAeC,eAAe,QAA9B,CAViB,CAYvB;;;EACM,SAA4BtB,QAAQ,CAAC,EAAD,CAApC;EAAA,IAACuB,SAAS,QAAV;EAAA,IAAYC,YAAY,QAAxB;;EACN,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAC1BC,KAD0B,EACU;IAEpCF,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;EACH,CAJD;;EAMA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAA8B;IACnDA,CAAC,CAACC,cAAF;IACAC,QAAQ;EACX,CAHD;;EAKA,IAAMA,QAAQ,GAAG,SAAXA,QAAW;IACb,IAAMC,aAAa,GAAG;MAClBC,KAAK,EAAEX,SADW;MAElBK,KAAK,EAAE;QACHO,MAAM,EAAElB,YADL;QAEHE,IAAI,MAFD;QAGHC,OAAO,SAHJ;QAIHF,gBAAgB;MAJb;IAFW,CAAtB;IASA,IAAMkB,eAAe,GAAG3B,wBAAwB,CAACY,YAAD,CAAhD;IACAC,eAAe,CAACc,eAAe,CAACC,MAAhB,CAAuBJ,aAAvB,CAAD,CAAf;IACAT,YAAY,CAAC,EAAD,CAAZ;IACAV,OAAO;EACV,CAdD;;EAgBA,OACIf,oBAACK,MAAD,EAAO;IACHS,IAAI,EAAEA,IADH;IAEHC,OAAO,EAAEA,OAFN;IAEa,mBACA;EAHb,CAAP,EAKIf,oBAACQ,WAAD,EAAY;IAAC+B,EAAE,EAAC;EAAJ,CAAZ,EACKvB,SAAS,CAAC,mCAAD,EAAsC;IAC5CwB,CAAC,EAAE;EADyC,CAAtC,CADd,CALJ,EAUIxC,oBAACO,aAAD,EAAc,IAAd,EACIP;IAAMyC,QAAQ,EAAEX;EAAhB,GACI9B,oBAACS,SAAD,CACI;EADJ;IACI;IACAiC,SAAS;IACTC,MAAM,EAAC;IACPJ,EAAE,EAAC;IACHJ,KAAK,EAAEnB,SAAS,CAAC,6BAAD,EAAgC;MAC5CwB,CAAC,EAAE;IADyC,CAAhC;IAGhBI,SAAS;IACTf,KAAK,EAAEL;IACPqB,QAAQ,EAAEnB;GAVd,CADJ,CADJ,CAVJ,EA0BI1B,oBAACM,aAAD,EAAc,IAAd,EACIN,oBAACI,MAAD,EAAO;IAAC0C,OAAO,EAAE/B;EAAV,CAAP,EACKC,SAAS,CAAC,kBAAD,CADd,CADJ,EAIIhB,oBAACI,MAAD,EAAO;IAAC0C,OAAO,EAAEb,QAAV;IAAoBc,KAAK,EAAC;EAA1B,CAAP,EACK/B,SAAS,CAAC,gBAAD,CADd,CAJJ,CA1BJ,CADJ;AAqCH,CAjFM","names":["React","useState","useListContext","useTranslate","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","extractValidSavedQueries","useSavedQueries","AddSavedQueryDialog","_a","open","onClose","translate","resource","filterValues","displayedFilters","sort","perPage","savedQueries","setSavedQueries","queryName","setQueryName","handleQueryNameChange","event","target","value","handleFormSubmit","e","preventDefault","addQuery","newSavedQuery","label","filter","newSavedQueries","concat","id","_","onSubmit","autoFocus","margin","fullWidth","onChange","onClick","color"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/list/filter/AddSavedQueryDialog.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, ChangeEvent, FormEvent, useState } from 'react';\nimport { useListContext, useTranslate } from 'ra-core';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n} from '@mui/material';\n\nimport { extractValidSavedQueries, useSavedQueries } from './useSavedQueries';\n\nexport const AddSavedQueryDialog = ({\n    open,\n    onClose,\n}: AddSavedQueryDialogProps): ReactElement => {\n    const translate = useTranslate();\n    const {\n        resource,\n        filterValues,\n        displayedFilters,\n        sort,\n        perPage,\n    } = useListContext();\n\n    const [savedQueries, setSavedQueries] = useSavedQueries(resource);\n\n    // input state\n    const [queryName, setQueryName] = useState('');\n    const handleQueryNameChange = (\n        event: ChangeEvent<HTMLInputElement>\n    ): void => {\n        setQueryName(event.target.value);\n    };\n\n    const handleFormSubmit = (e: FormEvent<HTMLFormElement>): void => {\n        e.preventDefault();\n        addQuery();\n    };\n\n    const addQuery = (): void => {\n        const newSavedQuery = {\n            label: queryName,\n            value: {\n                filter: filterValues,\n                sort,\n                perPage,\n                displayedFilters,\n            },\n        };\n        const newSavedQueries = extractValidSavedQueries(savedQueries);\n        setSavedQueries(newSavedQueries.concat(newSavedQuery));\n        setQueryName('');\n        onClose();\n    };\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">\n                {translate('ra.saved_queries.new_dialog_title', {\n                    _: 'Save current query as',\n                })}\n            </DialogTitle>\n            <DialogContent>\n                <form onSubmit={handleFormSubmit}>\n                    <TextField\n                        // eslint-disable-next-line jsx-a11y/no-autofocus\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label={translate('ra.saved_queries.query_name', {\n                            _: 'Query name',\n                        })}\n                        fullWidth\n                        value={queryName}\n                        onChange={handleQueryNameChange}\n                    />\n                </form>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>\n                    {translate('ra.action.cancel')}\n                </Button>\n                <Button onClick={addQuery} color=\"primary\">\n                    {translate('ra.action.save')}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport interface AddSavedQueryDialogProps {\n    open: boolean;\n    onClose: () => void;\n}\n"]},"metadata":{},"sourceType":"module"}