{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport Tab from '@mui/material/Tab';\nimport { useTranslate } from 'ra-core';\nimport { capitalize } from 'inflection';\n/**\n * Single tab that selects a locale in a TranslatableFields component.\n * @see TranslatableFields\n */\n\nexport var TranslatableFieldsTab = function (props) {\n  var locale = props.locale,\n      _a = props.groupKey,\n      groupKey = _a === void 0 ? '' : _a,\n      rest = __rest(props, [\"locale\", \"groupKey\"]);\n\n  var translate = useTranslate();\n  return React.createElement(Tab, __assign({\n    id: \"translatable-header-\".concat(groupKey).concat(locale),\n    label: translate(\"ra.locales.\".concat(groupKey).concat(locale), {\n      _: capitalize(locale)\n    })\n  }, rest));\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAA8B,mBAA9B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA;;;;;AAIA,OAAO,IAAMC,qBAAqB,GAAG,UACjCC,KADiC,EACW;EAEpC,UAAM,GAA6BA,KAAK,OAAxC;EAAA,IAAQC,KAA2BD,KAAK,SAAxC;EAAA,IAAQE,QAAQ,mBAAG,EAAH,GAAKD,EAArB;EAAA,IAA0BE,IAAI,UAAKH,KAAL,EAAhC,sBAAgC,CAA9B;;EACR,IAAMI,SAAS,GAAGP,YAAY,EAA9B;EAEA,OACIF,oBAACC,GAAD,EAAIS;IACAC,EAAE,EAAE,8BAAuBJ,QAAvB,EAA+BK,MAA/B,CAAkCC,MAAlC,CADJ;IAEAC,KAAK,EAAEL,SAAS,CAAC,qBAAcF,QAAd,EAAsBK,MAAtB,CAAyBC,MAAzB,CAAD,EAAoC;MAChDE,CAAC,EAAEZ,UAAU,CAACU,MAAD;IADmC,CAApC;EAFhB,GAKIL,IALJ,CAAJ,CADJ;AASH,CAfM","names":["React","Tab","useTranslate","capitalize","TranslatableFieldsTab","props","_a","groupKey","rest","translate","__assign","id","concat","locale","label","_"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/field/TranslatableFieldsTab.tsx"],"sourcesContent":["import React from 'react';\nimport Tab, { TabProps } from '@mui/material/Tab';\nimport { useTranslate } from 'ra-core';\nimport { capitalize } from 'inflection';\n\n/**\n * Single tab that selects a locale in a TranslatableFields component.\n * @see TranslatableFields\n */\nexport const TranslatableFieldsTab = (\n    props: TranslatableFieldsTabProps & TabProps\n) => {\n    const { locale, groupKey = '', ...rest } = props;\n    const translate = useTranslate();\n\n    return (\n        <Tab\n            id={`translatable-header-${groupKey}${locale}`}\n            label={translate(`ra.locales.${groupKey}${locale}`, {\n                _: capitalize(locale),\n            })}\n            {...rest}\n        />\n    );\n};\n\nexport interface TranslatableFieldsTabProps {\n    locale: string;\n    groupKey?: string;\n}\n"]},"metadata":{},"sourceType":"module"}