{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport NavigationRefresh from '@mui/icons-material/Refresh';\nimport { useRefresh } from 'ra-core';\nimport { Button } from './Button';\nexport var RefreshButton = function RefreshButton(props) {\n  var _a = props.label,\n      label = _a === void 0 ? 'ra.action.refresh' : _a,\n      _b = props.icon,\n      icon = _b === void 0 ? defaultIcon : _b,\n      onClick = props.onClick,\n      rest = __rest(props, [\"label\", \"icon\", \"onClick\"]);\n\n  var refresh = useRefresh();\n  var handleClick = useCallback(function (event) {\n    event.preventDefault();\n    refresh();\n\n    if (typeof onClick === 'function') {\n      onClick(event);\n    }\n  }, [refresh, onClick]);\n  return React.createElement(Button, __assign({\n    label: label,\n    onClick: handleClick\n  }, rest), icon);\n};\nvar defaultIcon = React.createElement(NavigationRefresh, null);\nRefreshButton.propTypes = {\n  label: PropTypes.string,\n  icon: PropTypes.element,\n  onClick: PropTypes.func\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,SAASC,MAAT,QAAoC,UAApC;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAA0B;EAE/C,SAIAA,KAAK,MAJL;EAAA,SAAK,mBAAG,mBAAH,GAAsBC,EAA3B;EAAA,IACAC,KAGAF,KAAK,KAJL;EAAA,IACAG,IAAI,mBAAGC,WAAH,GAAcF,EADlB;EAAA,IAEAG,OAAO,GAEPL,KAAK,QAJL;EAAA,IAGGM,IAAI,UACPN,KADO,EAJL,4BAIK,CAHP;;EAKJ,IAAMO,OAAO,GAAGV,UAAU,EAA1B;EACA,IAAMW,WAAW,GAAGd,WAAW,CAC3B,iBAAK;IACDe,KAAK,CAACC,cAAN;IACAH,OAAO;;IACP,IAAI,OAAOF,OAAP,KAAmB,UAAvB,EAAmC;MAC/BA,OAAO,CAACI,KAAD,CAAP;IACH;EACJ,CAP0B,EAQ3B,CAACF,OAAD,EAAUF,OAAV,CAR2B,CAA/B;EAWA,OACIZ,oBAACK,MAAD,EAAOa;IAACC,KAAK,EAAEA,KAAR;IAAeP,OAAO,EAAEG;EAAxB,GAAyCF,IAAzC,CAAP,EACKH,IADL,CADJ;AAKH,CAxBM;AA0BP,IAAMC,WAAW,GAAGX,oBAACG,iBAAD,EAAkB,IAAlB,CAApB;AAUAG,aAAa,CAACc,SAAd,GAA0B;EACtBD,KAAK,EAAEjB,SAAS,CAACmB,MADK;EAEtBX,IAAI,EAAER,SAAS,CAACoB,OAFM;EAGtBV,OAAO,EAAEV,SAAS,CAACqB;AAHG,CAA1B","names":["React","useCallback","PropTypes","NavigationRefresh","useRefresh","Button","RefreshButton","props","_a","_b","icon","defaultIcon","onClick","rest","refresh","handleClick","event","preventDefault","__assign","label","propTypes","string","element","func"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/button/RefreshButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ReactElement, MouseEvent, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport NavigationRefresh from '@mui/icons-material/Refresh';\nimport { useRefresh } from 'ra-core';\n\nimport { Button, ButtonProps } from './Button';\n\nexport const RefreshButton = (props: RefreshButtonProps) => {\n    const {\n        label = 'ra.action.refresh',\n        icon = defaultIcon,\n        onClick,\n        ...rest\n    } = props;\n    const refresh = useRefresh();\n    const handleClick = useCallback(\n        event => {\n            event.preventDefault();\n            refresh();\n            if (typeof onClick === 'function') {\n                onClick(event);\n            }\n        },\n        [refresh, onClick]\n    );\n\n    return (\n        <Button label={label} onClick={handleClick} {...rest}>\n            {icon}\n        </Button>\n    );\n};\n\nconst defaultIcon = <NavigationRefresh />;\n\ninterface Props {\n    label?: string;\n    icon?: ReactElement;\n    onClick?: (e: MouseEvent) => void;\n}\n\nexport type RefreshButtonProps = Props & ButtonProps;\n\nRefreshButton.propTypes = {\n    label: PropTypes.string,\n    icon: PropTypes.element,\n    onClick: PropTypes.func,\n};\n"]},"metadata":{},"sourceType":"module"}