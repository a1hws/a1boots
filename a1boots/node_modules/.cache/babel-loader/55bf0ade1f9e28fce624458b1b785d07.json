{"ast":null,"code":"import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Typography } from '@mui/material';\nimport Inbox from '@mui/icons-material/Inbox';\nimport { useTranslate, useResourceDefinition, useResourceContext, useGetResourceLabel } from 'ra-core';\nimport { CreateButton } from '../button';\nexport var Empty = function (props) {\n  var className = props.className;\n  var hasCreate = useResourceDefinition(props).hasCreate;\n  var resource = useResourceContext(props);\n  var translate = useTranslate();\n  var getResourceLabel = useGetResourceLabel();\n  var resourceName = translate(\"resources.\".concat(resource, \".forcedCaseName\"), {\n    smart_count: 0,\n    _: getResourceLabel(resource, 0)\n  });\n  var emptyMessage = translate('ra.page.empty', {\n    name: resourceName\n  });\n  var inviteMessage = translate('ra.page.invite');\n  return React.createElement(Root, {\n    className: className\n  }, React.createElement(\"div\", {\n    className: EmptyClasses.message\n  }, React.createElement(Inbox, {\n    className: EmptyClasses.icon\n  }), React.createElement(Typography, {\n    variant: \"h4\",\n    paragraph: true\n  }, translate(\"resources.\".concat(resource, \".empty\"), {\n    _: emptyMessage\n  })), hasCreate && React.createElement(Typography, {\n    variant: \"body1\"\n  }, translate(\"resources.\".concat(resource, \".invite\"), {\n    _: inviteMessage\n  }))), hasCreate && React.createElement(\"div\", {\n    className: EmptyClasses.toolbar\n  }, React.createElement(CreateButton, {\n    variant: \"contained\"\n  })));\n};\nvar PREFIX = 'RaEmpty';\nexport var EmptyClasses = {\n  message: \"\".concat(PREFIX, \"-message\"),\n  icon: \"\".concat(PREFIX, \"-icon\"),\n  toolbar: \"\".concat(PREFIX, \"-toolbar\")\n};\nvar Root = styled('span', {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var _b;\n\n  var theme = _a.theme;\n  return _b = {\n    flex: 1\n  }, _b[\"& .\".concat(EmptyClasses.message)] = {\n    textAlign: 'center',\n    opacity: theme.palette.mode === 'light' ? 0.5 : 0.8,\n    margin: '0 1em',\n    color: theme.palette.mode === 'light' ? 'inherit' : theme.palette.text.primary\n  }, _b[\"& .\".concat(EmptyClasses.icon)] = {\n    width: '9em',\n    height: '9em'\n  }, _b[\"& .\".concat(EmptyClasses.toolbar)] = {\n    textAlign: 'center',\n    marginTop: '2em'\n  }, _b;\n});","map":{"version":3,"mappings":"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","names":["React","styled","Typography","Inbox","useTranslate","useResourceDefinition","useResourceContext","useGetResourceLabel","CreateButton","Empty","props","hasCreate","resource","translate","getResourceLabel","resourceName","smart_count","_","emptyMessage","name","inviteMessage","Root","className","EmptyClasses","message","icon","variant","paragraph","toolbar","PREFIX","overridesResolver","styles","root","_a","theme","flex","_b","textAlign","opacity","palette","mode","margin","color","text","primary","width","height","marginTop"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/list/Empty.tsx"],"sourcesContent":["import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { Typography } from '@mui/material';\nimport Inbox from '@mui/icons-material/Inbox';\nimport {\n    useTranslate,\n    useResourceDefinition,\n    useResourceContext,\n    useGetResourceLabel,\n} from 'ra-core';\n\nimport { CreateButton } from '../button';\n\nexport const Empty = (props: EmptyProps) => {\n    const { className } = props;\n    const { hasCreate } = useResourceDefinition(props);\n    const resource = useResourceContext(props);\n\n    const translate = useTranslate();\n\n    const getResourceLabel = useGetResourceLabel();\n    const resourceName = translate(`resources.${resource}.forcedCaseName`, {\n        smart_count: 0,\n        _: getResourceLabel(resource, 0),\n    });\n\n    const emptyMessage = translate('ra.page.empty', { name: resourceName });\n    const inviteMessage = translate('ra.page.invite');\n\n    return (\n        <Root className={className}>\n            <div className={EmptyClasses.message}>\n                <Inbox className={EmptyClasses.icon} />\n                <Typography variant=\"h4\" paragraph>\n                    {translate(`resources.${resource}.empty`, {\n                        _: emptyMessage,\n                    })}\n                </Typography>\n                {hasCreate && (\n                    <Typography variant=\"body1\">\n                        {translate(`resources.${resource}.invite`, {\n                            _: inviteMessage,\n                        })}\n                    </Typography>\n                )}\n            </div>\n            {hasCreate && (\n                <div className={EmptyClasses.toolbar}>\n                    <CreateButton variant=\"contained\" />\n                </div>\n            )}\n        </Root>\n    );\n};\n\nexport interface EmptyProps {\n    resource?: string;\n    hasCreate?: boolean;\n    className?: string;\n}\n\nconst PREFIX = 'RaEmpty';\n\nexport const EmptyClasses = {\n    message: `${PREFIX}-message`,\n    icon: `${PREFIX}-icon`,\n    toolbar: `${PREFIX}-toolbar`,\n};\n\nconst Root = styled('span', {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    flex: 1,\n    [`& .${EmptyClasses.message}`]: {\n        textAlign: 'center',\n        opacity: theme.palette.mode === 'light' ? 0.5 : 0.8,\n        margin: '0 1em',\n        color:\n            theme.palette.mode === 'light'\n                ? 'inherit'\n                : theme.palette.text.primary,\n    },\n\n    [`& .${EmptyClasses.icon}`]: {\n        width: '9em',\n        height: '9em',\n    },\n\n    [`& .${EmptyClasses.toolbar}`]: {\n        textAlign: 'center',\n        marginTop: '2em',\n    },\n}));\n"]},"metadata":{},"sourceType":"module"}