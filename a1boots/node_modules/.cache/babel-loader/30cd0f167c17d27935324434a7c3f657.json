{"ast":null,"code":"import { useMemo } from 'react';\nimport { useI18nProvider } from './useI18nProvider';\n/**\n * A hook that gets the available locales from the i18nProvider.\n * @example\n *\n * import { useLocales } from 'react-admin';\n *\n * const LocaleSelector = () => {\n *     const locales = useLocales();\n *     const [currentLocale, setCurrentLocale] = useLocaleState();\n *\n *     return (\n *         <select onChange={event => setCurrentLocale(event.target.value)}>\n *             {locales.map(locale => (\n *                 <option key={locale.locale} value={locale.locale}>\n *                     {locale.name}\n *                 </option>\n *             )}\n *         </select>\n *     );\n * }\n */\n\nexport var useLocales = function (options) {\n  var _a;\n\n  var i18nProvider = useI18nProvider();\n  var locales = useMemo(function () {\n    return (i18nProvider === null || i18nProvider === void 0 ? void 0 : i18nProvider.getLocales) ? i18nProvider === null || i18nProvider === void 0 ? void 0 : i18nProvider.getLocales() : [];\n  }, [i18nProvider]);\n  return (_a = options === null || options === void 0 ? void 0 : options.locales) !== null && _a !== void 0 ? _a : locales;\n};","map":{"version":3,"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA;;;;;;;;;;;;;;;;;;;;;;AAqBA,OAAO,IAAMC,UAAU,GAAG,UAACC,OAAD,EAA4B;;;EAClD,IAAMC,YAAY,GAAGH,eAAe,EAApC;EACA,IAAMI,OAAO,GAAGL,OAAO,CACnB;IAAM,OAAC,aAAY,SAAZ,gBAAY,WAAZ,GAAY,MAAZ,eAAY,CAAEM,UAAd,IAA2BF,YAAY,SAAZ,gBAAY,WAAZ,GAAY,MAAZ,eAAY,CAAEE,UAAd,EAA3B,GAAwD,EAAzD;EAA4D,CAD/C,EAEnB,CAACF,YAAD,CAFmB,CAAvB;EAIA,OAAO,aAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEC,OAAT,MAAgB,IAAhB,IAAgBE,aAAhB,GAAgBA,EAAhB,GAAoBF,OAA3B;AACH,CAPM","names":["useMemo","useI18nProvider","useLocales","options","i18nProvider","locales","getLocales","_a"],"sources":["/var/www/a1boots/node_modules/ra-core/src/i18n/useLocales.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { useI18nProvider } from './useI18nProvider';\n\n/**\n * A hook that gets the available locales from the i18nProvider.\n * @example\n *\n * import { useLocales } from 'react-admin';\n *\n * const LocaleSelector = () => {\n *     const locales = useLocales();\n *     const [currentLocale, setCurrentLocale] = useLocaleState();\n *\n *     return (\n *         <select onChange={event => setCurrentLocale(event.target.value)}>\n *             {locales.map(locale => (\n *                 <option key={locale.locale} value={locale.locale}>\n *                     {locale.name}\n *                 </option>\n *             )}\n *         </select>\n *     );\n * }\n */\nexport const useLocales = (options?: UseLocalesOptions) => {\n    const i18nProvider = useI18nProvider();\n    const locales = useMemo(\n        () => (i18nProvider?.getLocales ? i18nProvider?.getLocales() : []),\n        [i18nProvider]\n    );\n    return options?.locales ?? locales;\n};\n\nexport interface UseLocalesOptions {\n    locales?: { locale: string; name: string }[];\n}\n"]},"metadata":{},"sourceType":"module"}