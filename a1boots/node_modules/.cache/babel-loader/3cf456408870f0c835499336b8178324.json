{"ast":null,"code":"import { createContext } from 'react';\n/**\n * Context to store the result of the useCreateController() hook.\n *\n * Use the useCreateContext() hook to read the context. That's what the Create components do in react-admin.\n *\n * @example\n *\n * import { useCreateController, CreateContextProvider } from 'ra-core';\n *\n * const Create = props => {\n *     const controllerProps = useCreateController(props);\n *     return (\n *         <CreateContextProvider value={controllerProps}>\n *             ...\n *         </CreateContextProvider>\n *     );\n * };\n */\n\nexport var CreateContext = createContext({\n  record: null,\n  defaultTitle: null,\n  isFetching: null,\n  isLoading: null,\n  redirect: null,\n  resource: null,\n  save: null,\n  saving: null,\n  registerMutationMiddleware: null,\n  unregisterMutationMiddleware: null\n});\nCreateContext.displayName = 'CreateContext';","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AAGA;;;;;;;;;;;;;;;;;;;AAkBA,OAAO,IAAMC,aAAa,GAAGD,aAAa,CAAyB;EAC/DE,MAAM,EAAE,IADuD;EAE/DC,YAAY,EAAE,IAFiD;EAG/DC,UAAU,EAAE,IAHmD;EAI/DC,SAAS,EAAE,IAJoD;EAK/DC,QAAQ,EAAE,IALqD;EAM/DC,QAAQ,EAAE,IANqD;EAO/DC,IAAI,EAAE,IAPyD;EAQ/DC,MAAM,EAAE,IARuD;EAS/DC,0BAA0B,EAAE,IATmC;EAU/DC,4BAA4B,EAAE;AAViC,CAAzB,CAAnC;AAaPV,aAAa,CAACW,WAAd,GAA4B,eAA5B","names":["createContext","CreateContext","record","defaultTitle","isFetching","isLoading","redirect","resource","save","saving","registerMutationMiddleware","unregisterMutationMiddleware","displayName"],"sources":["/var/www/a1boots/node_modules/ra-core/src/controller/create/CreateContext.tsx"],"sourcesContent":["import { createContext } from 'react';\nimport { CreateControllerResult } from './useCreateController';\n\n/**\n * Context to store the result of the useCreateController() hook.\n *\n * Use the useCreateContext() hook to read the context. That's what the Create components do in react-admin.\n *\n * @example\n *\n * import { useCreateController, CreateContextProvider } from 'ra-core';\n *\n * const Create = props => {\n *     const controllerProps = useCreateController(props);\n *     return (\n *         <CreateContextProvider value={controllerProps}>\n *             ...\n *         </CreateContextProvider>\n *     );\n * };\n */\nexport const CreateContext = createContext<CreateControllerResult>({\n    record: null,\n    defaultTitle: null,\n    isFetching: null,\n    isLoading: null,\n    redirect: null,\n    resource: null,\n    save: null,\n    saving: null,\n    registerMutationMiddleware: null,\n    unregisterMutationMiddleware: null,\n});\n\nCreateContext.displayName = 'CreateContext';\n"]},"metadata":{},"sourceType":"module"}