{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Fragment } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport inflection from 'inflection';\nimport { useDeleteWithConfirmController, useRecordContext, useResourceContext, useTranslate } from 'ra-core';\nimport { Confirm } from '../layout';\nimport { Button } from './Button';\nexport var DeleteWithConfirmButton = function (props) {\n  var className = props.className,\n      _a = props.confirmTitle,\n      confirmTitle = _a === void 0 ? 'ra.message.delete_title' : _a,\n      _b = props.confirmContent,\n      confirmContent = _b === void 0 ? 'ra.message.delete_content' : _b,\n      _c = props.icon,\n      icon = _c === void 0 ? defaultIcon : _c,\n      _d = props.label,\n      label = _d === void 0 ? 'ra.action.delete' : _d,\n      _e = props.mutationMode,\n      mutationMode = _e === void 0 ? 'pessimistic' : _e,\n      onClick = props.onClick,\n      _f = props.redirect,\n      redirect = _f === void 0 ? 'list' : _f,\n      _g = props.translateOptions,\n      translateOptions = _g === void 0 ? {} : _g,\n      mutationOptions = props.mutationOptions,\n      rest = __rest(props, [\"className\", \"confirmTitle\", \"confirmContent\", \"icon\", \"label\", \"mutationMode\", \"onClick\", \"redirect\", \"translateOptions\", \"mutationOptions\"]);\n\n  var translate = useTranslate();\n  var record = useRecordContext(props);\n  var resource = useResourceContext(props);\n\n  var _h = useDeleteWithConfirmController({\n    record: record,\n    redirect: redirect,\n    mutationMode: mutationMode,\n    onClick: onClick,\n    mutationOptions: mutationOptions,\n    resource: resource\n  }),\n      open = _h.open,\n      isLoading = _h.isLoading,\n      handleDialogOpen = _h.handleDialogOpen,\n      handleDialogClose = _h.handleDialogClose,\n      handleDelete = _h.handleDelete;\n\n  return React.createElement(Fragment, null, React.createElement(StyledButton, __assign({\n    onClick: handleDialogOpen,\n    label: label,\n    className: clsx('ra-delete-button', className),\n    key: \"button\"\n  }, rest), icon), React.createElement(Confirm, {\n    isOpen: open,\n    loading: isLoading,\n    title: confirmTitle,\n    content: confirmContent,\n    translateOptions: __assign({\n      name: translate(\"resources.\".concat(resource, \".forcedCaseName\"), {\n        smart_count: 1,\n        _: inflection.humanize(translate(\"resources.\".concat(resource, \".name\"), {\n          smart_count: 1,\n          _: inflection.singularize(resource)\n        }), true)\n      }),\n      id: record.id\n    }, translateOptions),\n    onConfirm: handleDelete,\n    onClose: handleDialogClose\n  }));\n};\nvar defaultIcon = React.createElement(ActionDelete, null);\nDeleteWithConfirmButton.propTypes = {\n  className: PropTypes.string,\n  confirmTitle: PropTypes.string,\n  confirmContent: PropTypes.string,\n  label: PropTypes.string,\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n  record: PropTypes.any,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  resource: PropTypes.string,\n  icon: PropTypes.element,\n  translateOptions: PropTypes.object\n};\nvar PREFIX = 'RaDeleteWithConfirmButton';\nvar StyledButton = styled(Button, {\n  name: PREFIX,\n  overridesResolver: function (props, styles) {\n    return styles.root;\n  }\n})(function (_a) {\n  var theme = _a.theme;\n  return {\n    color: theme.palette.error.main,\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.error.main, 0.12),\n      // Reset on mouse devices\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    }\n  };\n});","map":{"version":3,"mappings":"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","names":["React","Fragment","styled","PropTypes","alpha","ActionDelete","clsx","inflection","useDeleteWithConfirmController","useRecordContext","useResourceContext","useTranslate","Confirm","Button","DeleteWithConfirmButton","props","_a","confirmTitle","_b","confirmContent","_c","icon","defaultIcon","_d","label","_e","mutationMode","onClick","_f","redirect","_g","translateOptions","mutationOptions","rest","translate","record","resource","open","isLoading","handleDialogOpen","handleDialogClose","handleDelete","StyledButton","__assign","className","key","isOpen","loading","title","content","name","smart_count","_","humanize","singularize","id","onConfirm","onClose","propTypes","string","oneOf","any","oneOfType","bool","func","element","object","PREFIX","overridesResolver","styles","root","theme","color","palette","error","main","backgroundColor"],"sources":["/var/www/a1boots/node_modules/ra-ui-materialui/src/button/DeleteWithConfirmButton.tsx"],"sourcesContent":["import React, { Fragment, ReactEventHandler, ReactElement } from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport ActionDelete from '@mui/icons-material/Delete';\nimport clsx from 'clsx';\nimport inflection from 'inflection';\nimport { UseMutationOptions } from 'react-query';\nimport {\n    MutationMode,\n    RaRecord,\n    DeleteParams,\n    useDeleteWithConfirmController,\n    useRecordContext,\n    useResourceContext,\n    useTranslate,\n    RedirectionSideEffect,\n} from 'ra-core';\n\nimport { Confirm } from '../layout';\nimport { Button, ButtonProps } from './Button';\n\nexport const DeleteWithConfirmButton = <RecordType extends RaRecord = any>(\n    props: DeleteWithConfirmButtonProps<RecordType>\n) => {\n    const {\n        className,\n        confirmTitle = 'ra.message.delete_title',\n        confirmContent = 'ra.message.delete_content',\n        icon = defaultIcon,\n        label = 'ra.action.delete',\n        mutationMode = 'pessimistic',\n        onClick,\n        redirect = 'list',\n        translateOptions = {},\n        mutationOptions,\n        ...rest\n    } = props;\n    const translate = useTranslate();\n    const record = useRecordContext(props);\n    const resource = useResourceContext(props);\n\n    const {\n        open,\n        isLoading,\n        handleDialogOpen,\n        handleDialogClose,\n        handleDelete,\n    } = useDeleteWithConfirmController({\n        record,\n        redirect,\n        mutationMode,\n        onClick,\n        mutationOptions,\n        resource,\n    });\n\n    return (\n        <Fragment>\n            <StyledButton\n                onClick={handleDialogOpen}\n                label={label}\n                className={clsx('ra-delete-button', className)}\n                key=\"button\"\n                {...rest}\n            >\n                {icon}\n            </StyledButton>\n            <Confirm\n                isOpen={open}\n                loading={isLoading}\n                title={confirmTitle}\n                content={confirmContent}\n                translateOptions={{\n                    name: translate(`resources.${resource}.forcedCaseName`, {\n                        smart_count: 1,\n                        _: inflection.humanize(\n                            translate(`resources.${resource}.name`, {\n                                smart_count: 1,\n                                _: inflection.singularize(resource),\n                            }),\n                            true\n                        ),\n                    }),\n                    id: record.id,\n                    ...translateOptions,\n                }}\n                onConfirm={handleDelete}\n                onClose={handleDialogClose}\n            />\n        </Fragment>\n    );\n};\n\nconst defaultIcon = <ActionDelete />;\n\nexport interface DeleteWithConfirmButtonProps<\n    RecordType extends RaRecord = any,\n    MutationOptionsError = unknown\n> extends ButtonProps {\n    confirmTitle?: string;\n    confirmContent?: React.ReactNode;\n    icon?: ReactElement;\n    mutationMode?: MutationMode;\n    onClick?: ReactEventHandler<any>;\n    // May be injected by Toolbar - sanitized in Button\n    translateOptions?: object;\n    mutationOptions?: UseMutationOptions<\n        RecordType,\n        MutationOptionsError,\n        DeleteParams<RecordType>\n    >;\n    record?: RecordType;\n    redirect?: RedirectionSideEffect;\n    resource?: string;\n}\n\nDeleteWithConfirmButton.propTypes = {\n    className: PropTypes.string,\n    confirmTitle: PropTypes.string,\n    confirmContent: PropTypes.string,\n    label: PropTypes.string,\n    mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n    record: PropTypes.any,\n    redirect: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.bool,\n        PropTypes.func,\n    ]),\n    resource: PropTypes.string,\n    icon: PropTypes.element,\n    translateOptions: PropTypes.object,\n};\n\nconst PREFIX = 'RaDeleteWithConfirmButton';\n\nconst StyledButton = styled(Button, {\n    name: PREFIX,\n    overridesResolver: (props, styles) => styles.root,\n})(({ theme }) => ({\n    color: theme.palette.error.main,\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.error.main, 0.12),\n        // Reset on mouse devices\n        '@media (hover: none)': {\n            backgroundColor: 'transparent',\n        },\n    },\n}));\n"]},"metadata":{},"sourceType":"module"}